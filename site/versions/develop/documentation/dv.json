{
	"id": 0,
	"name": "dv",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "core",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/BitBucket/kk-sites/source/core/modules/core.ts",
			"comment": {},
			"children": [
				{
					"id": 6,
					"name": "dv",
					"kind": 2,
					"kindString": "Module",
					"flags": {},
					"comment": {},
					"children": [
						{
							"id": 41,
							"name": "core",
							"kind": 2,
							"kindString": "Module",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 42,
									"name": "collections",
									"kind": 2,
									"kindString": "Module",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 206,
											"character": 29
										},
										{
											"fileName": "source/core/modules/core.ts",
											"line": 1861,
											"character": 29
										}
									]
								}
							],
							"groups": [
								{
									"title": "Modules",
									"kind": 2,
									"children": [
										42
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 206,
									"character": 17
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 1861,
									"character": 17
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 2184,
									"character": 17
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 2364,
									"character": 17
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 2597,
									"character": 17
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 2846,
									"character": 17
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 2886,
									"character": 17
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 2938,
									"character": 17
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 2960,
									"character": 17
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 3010,
									"character": 17
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 3853,
									"character": 17
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 4187,
									"character": 17
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 4588,
									"character": 17
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 4593,
									"character": 17
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 6700,
									"character": 17
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 8499,
									"character": 17
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 8532,
									"character": 17
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 8645,
									"character": 17
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 8820,
									"character": 17
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 8971,
									"character": 17
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 9081,
									"character": 17
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 9150,
									"character": 17
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 9264,
									"character": 17
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 9291,
									"character": 17
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 9364,
									"character": 17
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 9518,
									"character": 17
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 9934,
									"character": 17
								}
							]
						},
						{
							"id": 1425,
							"name": "models",
							"kind": 2,
							"kindString": "Module",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 3678,
									"name": "ColorType",
									"kind": 4,
									"kindString": "Enumeration",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the color type."
									},
									"children": [
										{
											"id": 3679,
											"name": "CssColor",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Css color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 18490,
													"character": 16
												}
											],
											"defaultValue": "0"
										},
										{
											"id": 3680,
											"name": "LinearGradient",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Linear Gradient."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 18494,
													"character": 22
												}
											],
											"defaultValue": "1"
										},
										{
											"id": 3681,
											"name": "RadialGradient",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Radial Gradient."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 18498,
													"character": 22
												}
											],
											"defaultValue": "2"
										}
									],
									"groups": [
										{
											"title": "Enumeration members",
											"kind": 16,
											"children": [
												3679,
												3680,
												3681
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 18486,
											"character": 25
										}
									]
								},
								{
									"id": 7903,
									"name": "ExcludingModelPrediction",
									"kind": 128,
									"kindString": "Class",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the exclude model prediction."
									},
									"children": [
										{
											"id": 7905,
											"name": "constructor",
											"kind": 512,
											"kindString": "Constructor",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Initializes a new instance of the [ExcludingModelPrediction]{@link dv.models.ExcludingModelPrediction} class."
											},
											"signatures": [
												{
													"id": 7906,
													"name": "new ExcludingModelPrediction",
													"kind": 16384,
													"kindString": "Constructor signature",
													"flags": {},
													"comment": {
														"shortText": "Initializes a new instance of the [ExcludingModelPrediction]{@link dv.models.ExcludingModelPrediction} class."
													},
													"parameters": [
														{
															"id": 7907,
															"name": "modelTypes",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"shortText": "The model types.\n"
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ExcludingModelPrediction",
														"id": 7903
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 29385,
													"character": 39
												}
											]
										},
										{
											"id": 7904,
											"name": "modelTypes",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isProtected": true,
												"isExported": true
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 29385,
													"character": 28
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 7908,
											"name": "predicate",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isPublic": true,
												"isExported": true
											},
											"signatures": [
												{
													"id": 7909,
													"name": "predicate",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Excluding hittest result with model type."
													},
													"parameters": [
														{
															"id": 7910,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "HitTestResult",
																"id": 1989
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 29399,
													"character": 24
												}
											],
											"implementationOf": {
												"type": "reference",
												"name": "IPrediction.predicate",
												"id": 7925
											}
										}
									],
									"groups": [
										{
											"title": "Constructors",
											"kind": 512,
											"children": [
												7905
											]
										},
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												7904
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												7908
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 29384,
											"character": 41
										}
									],
									"implementedTypes": [
										{
											"type": "reference",
											"name": "IPrediction",
											"id": 7923,
											"typeArguments": [
												{
													"type": "reference",
													"name": "HitTestResult",
													"id": 1989
												}
											]
										}
									]
								},
								{
									"id": 7911,
									"name": "IncludingModelPrediction",
									"kind": 128,
									"kindString": "Class",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the include model prediction."
									},
									"children": [
										{
											"id": 7913,
											"name": "constructor",
											"kind": 512,
											"kindString": "Constructor",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Initializes a new instance of the [IncludingModelPrediction]{@link dv.models.IncludingModelPrediction} class."
											},
											"signatures": [
												{
													"id": 7914,
													"name": "new IncludingModelPrediction",
													"kind": 16384,
													"kindString": "Constructor signature",
													"flags": {},
													"comment": {
														"shortText": "Initializes a new instance of the [IncludingModelPrediction]{@link dv.models.IncludingModelPrediction} class."
													},
													"parameters": [
														{
															"id": 7915,
															"name": "modelTypes",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"shortText": "The model types.\n"
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IncludingModelPrediction",
														"id": 7911
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 29416,
													"character": 38
												}
											]
										},
										{
											"id": 7912,
											"name": "modelTypes",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isProtected": true,
												"isExported": true
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 29416,
													"character": 28
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 7916,
											"name": "predicate",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 7917,
													"name": "predicate",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Including hittest result with model type."
													},
													"parameters": [
														{
															"id": 7918,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "HitTestResult",
																"id": 1989
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 29430,
													"character": 17
												}
											],
											"implementationOf": {
												"type": "reference",
												"name": "IPrediction.predicate",
												"id": 7925
											}
										}
									],
									"groups": [
										{
											"title": "Constructors",
											"kind": 512,
											"children": [
												7913
											]
										},
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												7912
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												7916
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 29415,
											"character": 41
										}
									],
									"implementedTypes": [
										{
											"type": "reference",
											"name": "IPrediction",
											"id": 7923,
											"typeArguments": [
												{
													"type": "reference",
													"name": "HitTestResult",
													"id": 1989
												}
											]
										}
									]
								},
								{
									"id": 12655,
									"name": "IAdornerRender",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a adorner render."
									},
									"children": [
										{
											"id": 12656,
											"name": "render",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 12657,
													"name": "render",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Draws the adorner."
													},
													"parameters": [
														{
															"id": 12658,
															"name": "render",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The render."
															},
															"type": {
																"type": "reference",
																"name": "IRender",
																"id": 26830
															}
														},
														{
															"id": 12659,
															"name": "points",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The location of adorners.\n"
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"name": "Point"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 41763,
													"character": 14
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												12656
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 41756,
											"character": 35
										}
									]
								},
								{
									"id": 10912,
									"name": "IAxisLabel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the axis labels interface."
									},
									"children": [
										{
											"id": 10913,
											"name": "labels",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 10914,
													"name": "labels",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the labels.",
														"returns": "The labels.\n"
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "IAxisLabelModel",
															"id": 13760
														}
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 37326,
													"character": 14
												}
											]
										},
										{
											"id": 10915,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 10916,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 10917,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												10913,
												10915
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 37321,
											"character": 31
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IQueryInterface",
											"id": 1048
										}
									]
								},
								{
									"id": 13760,
									"name": "IAxisLabelModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents an axis label."
									},
									"children": [
										{
											"id": 13761,
											"name": "hover",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the mouse pointer is on it."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 45869,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 13767,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46273,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IViewModel",
												"id": 13918
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.parent",
												"id": 13920
											}
										},
										{
											"id": 13763,
											"name": "textStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 45877,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 17399
											}
										},
										{
											"id": 13766,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46269,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1686
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.type",
												"id": 13919
											}
										},
										{
											"id": 13762,
											"name": "value",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the value of the label."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 45873,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "DataValueType",
												"id": 27533
											}
										},
										{
											"id": 13768,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13769,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 13770,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										},
										{
											"id": 13764,
											"name": "relatedModels",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13765,
													"name": "relatedModels",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the related models."
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "IViewModel",
															"id": 13918
														}
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 45881,
													"character": 21
												}
											]
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13761,
												13767,
												13763,
												13766,
												13762
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13768,
												13764
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 45865,
											"character": 36
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IViewModel",
											"id": 13918
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "ICategoryAxisLabelModel",
											"id": 13796
										}
									]
								},
								{
									"id": 13771,
									"name": "IAxisModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents an axis."
									},
									"children": [
										{
											"id": 13777,
											"name": "axisType",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the axis type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 45916,
													"character": 25
												}
											],
											"type": {
												"type": "reference",
												"name": "AxisType",
												"id": 1658
											}
										},
										{
											"id": 13774,
											"name": "majorUnit",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the major unit."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 45904,
													"character": 26
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13772,
											"name": "max",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the maximum value."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 45896,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13773,
											"name": "min",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the minimum value."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 45900,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13775,
											"name": "minorUnit",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the minor unit."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 45908,
													"character": 26
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13779,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46273,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IViewModel",
												"id": 13918
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.parent",
												"id": 13920
											}
										},
										{
											"id": 13776,
											"name": "position",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the axis position."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 45912,
													"character": 25
												}
											],
											"type": {
												"type": "reference",
												"name": "AxisPosition",
												"id": 1654
											}
										},
										{
											"id": 13778,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46269,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1686
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.type",
												"id": 13919
											}
										},
										{
											"id": 13780,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13781,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 13782,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13777,
												13774,
												13772,
												13773,
												13775,
												13779,
												13776,
												13778
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13780
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 45892,
											"character": 31
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IViewModel",
											"id": 13918
										}
									]
								},
								{
									"id": 10918,
									"name": "IAxisTitle",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the axis title interface."
									},
									"children": [
										{
											"id": 10921,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 10922,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 10923,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										},
										{
											"id": 10919,
											"name": "title",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 10920,
													"name": "title",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the title.",
														"returns": "The title.\n"
													},
													"type": {
														"type": "reference",
														"name": "IAxisTitleModel",
														"id": 13783
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 37341,
													"character": 13
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												10921,
												10919
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 37336,
											"character": 31
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IQueryInterface",
											"id": 1048
										}
									]
								},
								{
									"id": 13783,
									"name": "IAxisTitleModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents an axis title."
									},
									"children": [
										{
											"id": 13784,
											"name": "hover",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the mouse pointer is on it."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 45930,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 13786,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46273,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IViewModel",
												"id": 13918
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.parent",
												"id": 13920
											}
										},
										{
											"id": 13785,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46269,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1686
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.type",
												"id": 13919
											}
										},
										{
											"id": 13787,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13788,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 13789,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13784,
												13786,
												13785
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13787
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 45926,
											"character": 36
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IViewModel",
											"id": 13918
										}
									]
								},
								{
									"id": 2345,
									"name": "ICanvasMeasurer",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the canvas measurer interface."
									},
									"children": [
										{
											"id": 2346,
											"name": "begin",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2347,
													"name": "begin",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Begin the measure and init the canvas element."
													},
													"parameters": [
														{
															"id": 2348,
															"name": "context",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "CanvasRenderingContext2D"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 12284,
													"character": 13
												}
											]
										},
										{
											"id": 2349,
											"name": "end",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2350,
													"name": "end",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "End the measure."
													},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 12289,
													"character": 11
												}
											]
										},
										{
											"id": 2351,
											"name": "measureString",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2352,
													"name": "measureString",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Measure string."
													},
													"parameters": [
														{
															"id": 2353,
															"name": "s",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The measure string."
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2354,
															"name": "fontSize",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2355,
															"name": "fontFamily",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2356,
															"name": "fontWeight",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2357,
															"name": "fontStyle",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "Size"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IMeasurer.measureString",
														"id": 2359
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 12309,
													"character": 21
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IMeasurer.measureString",
												"id": 2359
											}
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												2346,
												2349,
												2351
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 12278,
											"character": 36
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IMeasurer",
											"id": 2358
										}
									]
								},
								{
									"id": 11019,
									"name": "ICartesianPlotModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the cartesian plot model."
									},
									"children": [
										{
											"id": 11021,
											"name": "items",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the data items."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46121,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "object"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPlotModel.items",
												"id": 13866
											}
										},
										{
											"id": 11023,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the name."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46129,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPlotModel.name",
												"id": 13868
											}
										},
										{
											"id": 11024,
											"name": "option",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the plot option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46133,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IPlotOption",
												"id": 17311
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPlotModel.option",
												"id": 13869
											}
										},
										{
											"id": 11026,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46273,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IViewModel",
												"id": 13918
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.parent",
												"id": 13920
											}
										},
										{
											"id": 11022,
											"name": "points",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the points."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46125,
													"character": 23
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IPointModel",
													"id": 13882
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPlotModel.points",
												"id": 13867
											}
										},
										{
											"id": 11020,
											"name": "seriesList",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the cartesian series list."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 37617,
													"character": 27
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "ICartesianSeriesModel",
													"id": 11058
												}
											}
										},
										{
											"id": 11025,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46269,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1686
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.type",
												"id": 13919
											}
										},
										{
											"id": 11027,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 11028,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 11029,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												11021,
												11023,
												11024,
												11026,
												11022,
												11020,
												11025
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												11027
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 37613,
											"character": 40
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IPlotModel",
											"id": 13865
										}
									]
								},
								{
									"id": 11030,
									"name": "ICartesianPointModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the data point model in the x-y coordinate system."
									},
									"children": [
										{
											"id": 11049,
											"name": "additionalKind",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the additional kind."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46203,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.additionalKind",
												"id": 13896
											}
										},
										{
											"id": 11046,
											"name": "color",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46191,
													"character": 13
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ILinearGradientColor",
														"id": 3692
													},
													{
														"type": "reference",
														"name": "IRadialGradientColor",
														"id": 3697
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.color",
												"id": 13893
											}
										},
										{
											"id": 11032,
											"name": "detail",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the detail."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 37636,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "DataValueType",
												"id": 27533
											}
										},
										{
											"id": 11033,
											"name": "dimension",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the dimension value."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 37640,
													"character": 26
												}
											],
											"type": {
												"type": "reference",
												"name": "DataValueType",
												"id": 27533
											}
										},
										{
											"id": 11051,
											"name": "filtered",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether it is filtered out."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46211,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.filtered",
												"id": 13898
											}
										},
										{
											"id": 11052,
											"name": "hover",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the mouse pointer is on it."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46215,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.hover",
												"id": 13899
											}
										},
										{
											"id": 11036,
											"name": "item",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the item."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46163,
													"character": 21
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 11037,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": [
														{
															"id": 11038,
															"name": "__index",
															"kind": 8192,
															"kindString": "Index signature",
															"flags": {},
															"parameters": [
																{
																	"id": 11039,
																	"name": "key",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "DataValueType",
																"id": 27533
															}
														}
													],
													"sources": [
														{
															"fileName": "source/core/modules/core.ts",
															"line": 46163,
															"character": 22
														}
													]
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.item",
												"id": 13883
											}
										},
										{
											"id": 11040,
											"name": "items",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the data items."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46167,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "object"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.items",
												"id": 13887
											}
										},
										{
											"id": 11035,
											"name": "offset",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the offset of the data point."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 37648,
													"character": 14
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										},
										{
											"id": 11054,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46273,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IViewModel",
												"id": 13918
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.parent",
												"id": 13920
											}
										},
										{
											"id": 11050,
											"name": "selected",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether it is selected."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46207,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.selected",
												"id": 13897
											}
										},
										{
											"id": 11042,
											"name": "selectedStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the selected style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46175,
													"character": 30
												}
											],
											"type": {
												"type": "reference",
												"name": "ISelectionStyleOption",
												"id": 17812
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.selectedStyle",
												"id": 13889
											}
										},
										{
											"id": 11047,
											"name": "shape",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the shape."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46195,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.shape",
												"id": 13894
											}
										},
										{
											"id": 11048,
											"name": "size",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the size."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46199,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.size",
												"id": 13895
											}
										},
										{
											"id": 11041,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46171,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 16897
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.style",
												"id": 13888
											}
										},
										{
											"id": 11044,
											"name": "text",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the text config."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46183,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "IPlotConfigTextOption",
												"id": 17268
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.text",
												"id": 13891
											}
										},
										{
											"id": 11045,
											"name": "tooltip",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the tooltip config."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46187,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"name": "IPlotConfigTooltipOption",
												"id": 17286
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.tooltip",
												"id": 13892
											}
										},
										{
											"id": 11053,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46269,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1686
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.type",
												"id": 13919
											}
										},
										{
											"id": 11043,
											"name": "unselectedStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the unselected style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46179,
													"character": 32
												}
											],
											"type": {
												"type": "reference",
												"name": "ISelectionStyleOption",
												"id": 17812
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.unselectedStyle",
												"id": 13890
											}
										},
										{
											"id": 11034,
											"name": "value",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the value of the data point."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 37644,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 11031,
											"name": "valueDefinition",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the value definition."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 37632,
													"character": 32
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 11055,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 11056,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 11057,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												11049,
												11046,
												11032,
												11033,
												11051,
												11052,
												11036,
												11040,
												11035,
												11054,
												11050,
												11042,
												11047,
												11048,
												11041,
												11044,
												11045,
												11053,
												11043,
												11034,
												11031
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												11055
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 37628,
											"character": 41
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IPointModel",
											"id": 13882
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "IStockPointModel",
											"id": 56936
										}
									]
								},
								{
									"id": 11058,
									"name": "ICartesianSeriesModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the cartesian series model."
									},
									"children": [
										{
											"id": 11059,
											"name": "axisX",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the axis x."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 37663,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "IAxisModel",
												"id": 13771
											}
										},
										{
											"id": 11060,
											"name": "axisY",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the axis y."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 37667,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "IAxisModel",
												"id": 13771
											}
										},
										{
											"id": 11066,
											"name": "color",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46242,
													"character": 13
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ILinearGradientColor",
														"id": 3692
													},
													{
														"type": "reference",
														"name": "IRadialGradientColor",
														"id": 3697
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ISeriesModel.color",
												"id": 13909
											}
										},
										{
											"id": 11062,
											"name": "detail",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the detail."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 37675,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "DataValueType",
												"id": 27533
											}
										},
										{
											"id": 11068,
											"name": "filtered",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether it is filtered out."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46250,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ISeriesModel.filtered",
												"id": 13911
											}
										},
										{
											"id": 11069,
											"name": "hover",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the mouse pointer is on it."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46254,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ISeriesModel.hover",
												"id": 13912
											}
										},
										{
											"id": 11063,
											"name": "items",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the data items."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46230,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "object"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ISeriesModel.items",
												"id": 13906
											}
										},
										{
											"id": 11071,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46273,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IViewModel",
												"id": 13918
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.parent",
												"id": 13920
											}
										},
										{
											"id": 11064,
											"name": "points",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the points."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46234,
													"character": 23
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IPointModel",
													"id": 13882
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ISeriesModel.points",
												"id": 13907
											}
										},
										{
											"id": 11067,
											"name": "selected",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether it is selected."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46246,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ISeriesModel.selected",
												"id": 13910
											}
										},
										{
											"id": 11065,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46238,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 16897
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ISeriesModel.style",
												"id": 13908
											}
										},
										{
											"id": 11070,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46269,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1686
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.type",
												"id": 13919
											}
										},
										{
											"id": 11061,
											"name": "valueDefinition",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the value definition."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 37671,
													"character": 32
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 11072,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 11073,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 11074,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												11059,
												11060,
												11066,
												11062,
												11068,
												11069,
												11063,
												11071,
												11064,
												11067,
												11065,
												11070,
												11061
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												11072
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 37659,
											"character": 42
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "ISeriesModel",
											"id": 13905
										}
									]
								},
								{
									"id": 13796,
									"name": "ICategoryAxisLabelModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a category label in the axis."
									},
									"children": [
										{
											"id": 13797,
											"name": "hover",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the mouse pointer is on it."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 45869,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAxisLabelModel.hover",
												"id": 13761
											}
										},
										{
											"id": 13803,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46273,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IViewModel",
												"id": 13918
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.parent",
												"id": 13920
											}
										},
										{
											"id": 13799,
											"name": "textStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 45877,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 17399
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAxisLabelModel.textStyle",
												"id": 13763
											}
										},
										{
											"id": 13802,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46269,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1686
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.type",
												"id": 13919
											}
										},
										{
											"id": 13798,
											"name": "value",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the value of the label."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 45873,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "DataValueType",
												"id": 27533
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAxisLabelModel.value",
												"id": 13762
											}
										},
										{
											"id": 13804,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13805,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 13806,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										},
										{
											"id": 13800,
											"name": "relatedModels",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13801,
													"name": "relatedModels",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the related models."
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "IViewModel",
															"id": 13918
														}
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IAxisLabelModel.relatedModels",
														"id": 13764
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 45881,
													"character": 21
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IAxisLabelModel.relatedModels",
												"id": 13764
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13797,
												13803,
												13799,
												13802,
												13798
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13804,
												13800
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 45954,
											"character": 44
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IAxisLabelModel",
											"id": 13760
										}
									]
								},
								{
									"id": 12675,
									"name": "IClickInteraction",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a click interaction."
									},
									"children": [
										{
											"id": 12676,
											"name": "onClick",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 12677,
													"name": "onClick",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Clicks the model."
													},
													"parameters": [
														{
															"id": 12678,
															"name": "evt",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The motion event."
															},
															"type": {
																"type": "reference",
																"name": "MotionEvent",
																"id": 955
															}
														},
														{
															"id": 12679,
															"name": "model",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The model.\n"
															},
															"type": {
																"type": "reference",
																"name": "IViewModel",
																"id": 13918
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 41831,
													"character": 15
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												12676
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 41824,
											"character": 38
										}
									]
								},
								{
									"id": 3682,
									"name": "IColor",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the color."
									},
									"children": [
										{
											"id": 3684,
											"name": "isTransparent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets whether it is transparent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 18517,
													"character": 30
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 3683,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 18513,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ColorType",
												"id": 3678
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3684,
												3683
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 18509,
											"character": 27
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "ICssColor",
											"id": 3688
										},
										{
											"type": "reference",
											"name": "ILinearGradientColor",
											"id": 3692
										},
										{
											"type": "reference",
											"name": "IRadialGradientColor",
											"id": 3697
										}
									]
								},
								{
									"id": 3685,
									"name": "IColorStop",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the color stop."
									},
									"children": [
										{
											"id": 3686,
											"name": "color",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 18532,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3687,
											"name": "stop",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stop."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 18536,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3686,
												3687
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 18528,
											"character": 31
										}
									]
								},
								{
									"id": 12680,
									"name": "IConditionalFormattingRule",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the conditional formatting rule."
									},
									"children": [
										{
											"id": 12681,
											"name": "evaluate",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 12682,
													"name": "evaluate",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Evaluates the current instance"
													},
													"parameters": [
														{
															"id": 12683,
															"name": "context",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The current instance.\n"
															},
															"type": {
																"type": "reference",
																"name": "IViewModel",
																"id": 13918
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 41848,
													"character": 16
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												12681
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 41842,
											"character": 47
										}
									]
								},
								{
									"id": 3688,
									"name": "ICssColor",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the css color."
									},
									"children": [
										{
											"id": 3689,
											"name": "color",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 18551,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3691,
											"name": "isTransparent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets whether it is transparent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 18517,
													"character": 30
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IColor.isTransparent",
												"id": 3684
											}
										},
										{
											"id": 3690,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 18513,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ColorType",
												"id": 3678
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IColor.type",
												"id": 3683
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3689,
												3691,
												3690
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 18547,
											"character": 30
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IColor",
											"id": 3682
										}
									]
								},
								{
									"id": 10987,
									"name": "IDataLabel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the data label interface."
									},
									"children": [
										{
											"id": 10988,
											"name": "dataLabel",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 10989,
													"name": "dataLabel",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the data label.",
														"returns": "The data label.\n"
													},
													"type": {
														"type": "reference",
														"name": "IDataLabelModel",
														"id": 13823
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 37511,
													"character": 17
												}
											]
										},
										{
											"id": 10990,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 10991,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 10992,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												10988,
												10990
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 37505,
											"character": 31
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IQueryInterface",
											"id": 1048
										}
									]
								},
								{
									"id": 13823,
									"name": "IDataLabelModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a data label object."
									},
									"children": [
										{
											"id": 13827,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46273,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IViewModel",
												"id": 13918
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.parent",
												"id": 13920
											}
										},
										{
											"id": 13824,
											"name": "text",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Represents data label text content."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46008,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13826,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46269,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1686
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.type",
												"id": 13919
											}
										},
										{
											"id": 13825,
											"name": "visible",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Get or set datalabel's visiblity."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46012,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 13828,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13829,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 13830,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13827,
												13824,
												13826,
												13825
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13828
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 46004,
											"character": 36
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IViewModel",
											"id": 13918
										}
									]
								},
								{
									"id": 11839,
									"name": "IDataModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a data model."
									},
									"children": [
										{
											"id": 11840,
											"name": "items",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the data items."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 39858,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										},
										{
											"id": 11841,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 11842,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 11843,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												11840
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												11841
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 39854,
											"character": 31
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IModel",
											"id": 7919
										}
									]
								},
								{
									"id": 12691,
									"name": "IDateParser",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the date parser."
									},
									"children": [
										{
											"id": 12692,
											"name": "parse",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 12693,
													"name": "parse",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Parses the date based on the date format.",
														"returns": "The Date value.\n"
													},
													"parameters": [
														{
															"id": 12694,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The string value.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 12695,
															"name": "format",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "Date"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 41895,
													"character": 13
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												12692
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 41887,
											"character": 32
										}
									]
								},
								{
									"id": 13831,
									"name": "IDvModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a data visualization model."
									},
									"children": [
										{
											"id": 13834,
											"name": "footer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the footer."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46036,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IHeaderFooterModel",
												"id": 13841
											}
										},
										{
											"id": 13833,
											"name": "header",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the header."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46032,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IHeaderFooterModel",
												"id": 13841
											}
										},
										{
											"id": 13832,
											"name": "option",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46028,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IConfigOption",
												"id": 16860
											}
										},
										{
											"id": 13837,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46273,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IViewModel",
												"id": 13918
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.parent",
												"id": 13920
											}
										},
										{
											"id": 13835,
											"name": "plotAreas",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the plot areas."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46040,
													"character": 26
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IPlotAreaModel",
													"id": 13855
												}
											}
										},
										{
											"id": 13836,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46269,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1686
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.type",
												"id": 13919
											}
										},
										{
											"id": 13838,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13839,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 13840,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13834,
												13833,
												13832,
												13837,
												13835,
												13836
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13838
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 46024,
											"character": 29
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IViewModel",
											"id": 13918
										}
									]
								},
								{
									"id": 20033,
									"name": "IErrorBarOverlayItemModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the error bar overlay model."
									},
									"children": [
										{
											"id": 20039,
											"name": "hover",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 64551,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayItemModel.hover",
												"id": 20061
											}
										},
										{
											"id": 20035,
											"name": "negative",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "The negaive value."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 64514,
													"character": 16
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										},
										{
											"id": 20036,
											"name": "orientation",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "The actual orientation (Vertical or Horizontal) of current error bar."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 64518,
													"character": 28
												}
											],
											"type": {
												"type": "reference",
												"name": "ErrorBarOrientation",
												"id": 19475
											}
										},
										{
											"id": 20038,
											"name": "overlay",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the overlay which current overlayitem belongs to."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 64549,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"name": "IOverlayModel",
												"id": 20067
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayItemModel.overlay",
												"id": 20060
											}
										},
										{
											"id": 20041,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46273,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IViewModel",
												"id": 13918
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.parent",
												"id": 13920
											}
										},
										{
											"id": 20034,
											"name": "positive",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "The positive value."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 64510,
													"character": 16
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										},
										{
											"id": 20037,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 64545,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "IStyle",
												"id": 27000
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayItemModel.style",
												"id": 20059
											}
										},
										{
											"id": 20040,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46269,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1686
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.type",
												"id": 13919
											}
										},
										{
											"id": 20042,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 20043,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 20044,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												20039,
												20035,
												20036,
												20038,
												20041,
												20034,
												20037,
												20040
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												20042
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 64506,
											"character": 46
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOverlayItemModel",
											"id": 20058
										}
									]
								},
								{
									"id": 12696,
									"name": "IFilter",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the filter."
									},
									"children": [
										{
											"id": 12697,
											"name": "filter",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 12698,
													"name": "filter",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Filter the value."
													},
													"parameters": [
														{
															"id": 12699,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The value"
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 12700,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The key.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 41913,
													"character": 14
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												12697
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 41906,
											"character": 28
										}
									]
								},
								{
									"id": 11013,
									"name": "IGridLine",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the axis grid line interface."
									},
									"children": [
										{
											"id": 11014,
											"name": "gridLines",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 11015,
													"name": "gridLines",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the grid lines.",
														"returns": "The grid lines.\n"
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "IGridLineModel",
															"id": 13807
														}
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 37603,
													"character": 17
												}
											]
										},
										{
											"id": 11016,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 11017,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 11018,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												11014,
												11016
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 37598,
											"character": 30
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IQueryInterface",
											"id": 1048
										}
									]
								},
								{
									"id": 13807,
									"name": "IGridLineModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a grid line object."
									},
									"children": [
										{
											"id": 13809,
											"name": "isMajor",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the whether the gridline is major."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 45973,
													"character": 24
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 13808,
											"name": "orientation",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the orientation."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 45969,
													"character": 28
												}
											],
											"type": {
												"type": "reference",
												"name": "Orientation",
												"id": 1800
											}
										},
										{
											"id": 13811,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46273,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IViewModel",
												"id": 13918
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.parent",
												"id": 13920
											}
										},
										{
											"id": 13810,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46269,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1686
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.type",
												"id": 13919
											}
										},
										{
											"id": 13812,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13813,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 13814,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13809,
												13808,
												13811,
												13810
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13812
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 45965,
											"character": 35
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IViewModel",
											"id": 13918
										}
									]
								},
								{
									"id": 13841,
									"name": "IHeaderFooterModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a header or footer object."
									},
									"children": [
										{
											"id": 13844,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46273,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IViewModel",
												"id": 13918
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.parent",
												"id": 13920
											}
										},
										{
											"id": 13842,
											"name": "title",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the title."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46055,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13843,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46269,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1686
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.type",
												"id": 13919
											}
										},
										{
											"id": 13845,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13846,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 13847,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13844,
												13842,
												13843
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13845
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 46051,
											"character": 39
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IViewModel",
											"id": 13918
										}
									]
								},
								{
									"id": 11788,
									"name": "IHierarchicalPlotModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the field."
									},
									"children": [
										{
											"id": 11790,
											"name": "items",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the data items."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46121,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "object"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPlotModel.items",
												"id": 13866
											}
										},
										{
											"id": 11792,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the name."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46129,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPlotModel.name",
												"id": 13868
											}
										},
										{
											"id": 11793,
											"name": "option",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the plot option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46133,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IPlotOption",
												"id": 17311
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPlotModel.option",
												"id": 13869
											}
										},
										{
											"id": 11795,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46273,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IViewModel",
												"id": 13918
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.parent",
												"id": 13920
											}
										},
										{
											"id": 11791,
											"name": "points",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the points."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46125,
													"character": 23
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IPointModel",
													"id": 13882
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPlotModel.points",
												"id": 13867
											}
										},
										{
											"id": 11789,
											"name": "root",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the root point.",
												"tags": [
													{
														"tag": "returns",
														"text": "The root point.\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 39771,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "IHierarchicalPointModel",
												"id": 11799
											}
										},
										{
											"id": 11794,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46269,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1686
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.type",
												"id": 13919
											}
										},
										{
											"id": 11796,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 11797,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 11798,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												11790,
												11792,
												11793,
												11795,
												11791,
												11789,
												11794
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												11796
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 39765,
											"character": 43
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IPlotModel",
											"id": 13865
										}
									]
								},
								{
									"id": 11799,
									"name": "IHierarchicalPointModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the field."
									},
									"children": [
										{
											"id": 11818,
											"name": "additionalKind",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the additional kind."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46203,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.additionalKind",
												"id": 13896
											}
										},
										{
											"id": 11804,
											"name": "children",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the child points."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 39802,
													"character": 25
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IHierarchicalPointModel",
													"id": 11799
												}
											}
										},
										{
											"id": 11815,
											"name": "color",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46191,
													"character": 13
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ILinearGradientColor",
														"id": 3692
													},
													{
														"type": "reference",
														"name": "IRadialGradientColor",
														"id": 3697
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.color",
												"id": 13893
											}
										},
										{
											"id": 11802,
											"name": "depth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the point depth."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 39794,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 11820,
											"name": "filtered",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether it is filtered out."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46211,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.filtered",
												"id": 13898
											}
										},
										{
											"id": 11821,
											"name": "hover",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the mouse pointer is on it."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46215,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.hover",
												"id": 13899
											}
										},
										{
											"id": 11805,
											"name": "item",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the item."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46163,
													"character": 21
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 11806,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": [
														{
															"id": 11807,
															"name": "__index",
															"kind": 8192,
															"kindString": "Index signature",
															"flags": {},
															"parameters": [
																{
																	"id": 11808,
																	"name": "key",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "DataValueType",
																"id": 27533
															}
														}
													],
													"sources": [
														{
															"fileName": "source/core/modules/core.ts",
															"line": 46163,
															"character": 22
														}
													]
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.item",
												"id": 13883
											}
										},
										{
											"id": 11809,
											"name": "items",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the data items."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46167,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "object"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.items",
												"id": 13887
											}
										},
										{
											"id": 11801,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the point name."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 39790,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 11823,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46273,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IViewModel",
												"id": 13918
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.parent",
												"id": 13920
											}
										},
										{
											"id": 11819,
											"name": "selected",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether it is selected."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46207,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.selected",
												"id": 13897
											}
										},
										{
											"id": 11811,
											"name": "selectedStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the selected style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46175,
													"character": 30
												}
											],
											"type": {
												"type": "reference",
												"name": "ISelectionStyleOption",
												"id": 17812
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.selectedStyle",
												"id": 13889
											}
										},
										{
											"id": 11816,
											"name": "shape",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the shape."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46195,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.shape",
												"id": 13894
											}
										},
										{
											"id": 11817,
											"name": "size",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the size."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46199,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.size",
												"id": 13895
											}
										},
										{
											"id": 11810,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46171,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 16897
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.style",
												"id": 13888
											}
										},
										{
											"id": 11813,
											"name": "text",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the text config."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46183,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "IPlotConfigTextOption",
												"id": 17268
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.text",
												"id": 13891
											}
										},
										{
											"id": 11814,
											"name": "tooltip",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the tooltip config."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46187,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"name": "IPlotConfigTooltipOption",
												"id": 17286
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.tooltip",
												"id": 13892
											}
										},
										{
											"id": 11822,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46269,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1686
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.type",
												"id": 13919
											}
										},
										{
											"id": 11812,
											"name": "unselectedStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the unselected style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46179,
													"character": 32
												}
											],
											"type": {
												"type": "reference",
												"name": "ISelectionStyleOption",
												"id": 17812
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.unselectedStyle",
												"id": 13890
											}
										},
										{
											"id": 11803,
											"name": "value",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the point value."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 39798,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 11800,
											"name": "valueDefinition",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the value definition."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 39786,
													"character": 32
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 11824,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 11825,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 11826,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												11818,
												11804,
												11815,
												11802,
												11820,
												11821,
												11805,
												11809,
												11801,
												11823,
												11819,
												11811,
												11816,
												11817,
												11810,
												11813,
												11814,
												11822,
												11812,
												11803,
												11800
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												11824
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 39782,
											"character": 44
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IPointModel",
											"id": 13882
										}
									]
								},
								{
									"id": 12701,
									"name": "IHoverInteraction",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a hover interaction."
									},
									"children": [
										{
											"id": 12703,
											"name": "model",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the current model."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 41932,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "IModel",
												"id": 7919
											}
										},
										{
											"id": 12702,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the name."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 41928,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 12721,
											"name": "dispose",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 12722,
													"name": "dispose",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Disposes and releases resources."
													},
													"type": {
														"type": "intrinsic",
														"name": "void"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IDisposable.dispose"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5571,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IDisposable.dispose"
											}
										},
										{
											"id": 12704,
											"name": "hover",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 12705,
													"name": "hover",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Checks whether the model can be hover.",
														"returns": "True if it can be hover, otherwise false.\n"
													},
													"parameters": [
														{
															"id": 12706,
															"name": "evt",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The motion event."
															},
															"type": {
																"type": "reference",
																"name": "MotionEvent",
																"id": 955
															}
														},
														{
															"id": 12707,
															"name": "model",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The model.\n"
															},
															"type": {
																"type": "reference",
																"name": "IViewModel",
																"id": 13918
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 41942,
													"character": 13
												}
											]
										},
										{
											"id": 12708,
											"name": "isModel",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 12709,
													"name": "isModel",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Checks whether the model is the same.",
														"returns": "True if it is same, otherwise false.\n"
													},
													"parameters": [
														{
															"id": 12710,
															"name": "evt",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The motion event."
															},
															"type": {
																"type": "reference",
																"name": "MotionEvent",
																"id": 955
															}
														},
														{
															"id": 12711,
															"name": "model",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The model.\n"
															},
															"type": {
																"type": "reference",
																"name": "IViewModel",
																"id": 13918
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 41951,
													"character": 15
												}
											]
										},
										{
											"id": 12712,
											"name": "onEnter",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 12713,
													"name": "onEnter",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Enter the model."
													},
													"parameters": [
														{
															"id": 12714,
															"name": "evt",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The motion event.\n"
															},
															"type": {
																"type": "reference",
																"name": "MotionEvent",
																"id": 955
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 41957,
													"character": 15
												}
											]
										},
										{
											"id": 12715,
											"name": "onLeave",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 12716,
													"name": "onLeave",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Leave the model."
													},
													"parameters": [
														{
															"id": 12717,
															"name": "evt",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The motion event.\n"
															},
															"type": {
																"type": "reference",
																"name": "MotionEvent",
																"id": 955
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 41963,
													"character": 15
												}
											]
										},
										{
											"id": 12718,
											"name": "onMove",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 12719,
													"name": "onMove",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Hover the model."
													},
													"parameters": [
														{
															"id": 12720,
															"name": "evt",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The motion event.\n"
															},
															"type": {
																"type": "reference",
																"name": "MotionEvent",
																"id": 955
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 41969,
													"character": 14
												}
											]
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												12703,
												12702
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												12721,
												12704,
												12708,
												12712,
												12715,
												12718
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 41924,
											"character": 38
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IDisposable"
										}
									]
								},
								{
									"id": 13924,
									"name": "IItemizedLegendModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents an itemized legend model."
									},
									"children": [
										{
											"id": 13925,
											"name": "items",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the legend items."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46288,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "ILegendItemModel",
													"id": 13933
												}
											}
										},
										{
											"id": 13927,
											"name": "kind",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the kind."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46351,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ILegendModel.kind",
												"id": 13950
											}
										},
										{
											"id": 13929,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46273,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IViewModel",
												"id": 13918
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.parent",
												"id": 13920
											}
										},
										{
											"id": 13926,
											"name": "title",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the title."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46347,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ILegendModel.title",
												"id": 13949
											}
										},
										{
											"id": 13928,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46269,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1686
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.type",
												"id": 13919
											}
										},
										{
											"id": 13930,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13931,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 13932,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13925,
												13927,
												13929,
												13926,
												13928
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13930
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 46284,
											"character": 41
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "ILegendModel",
											"id": 13948
										}
									]
								},
								{
									"id": 13848,
									"name": "ILayer",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a layer object."
									},
									"children": [
										{
											"id": 13852,
											"name": "hitTest",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13853,
													"name": "hitTest",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Hit test the layer.",
														"returns": "@HitInfo the result of hittest\n"
													},
													"parameters": [
														{
															"id": 13854,
															"name": "point",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "-The location in the control."
															},
															"type": {
																"type": "reference",
																"name": "Point"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "HitTestResult",
														"id": 1989
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46080,
													"character": 15
												}
											]
										},
										{
											"id": 13849,
											"name": "render",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13850,
													"name": "render",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Render the layer."
													},
													"parameters": [
														{
															"id": 13851,
															"name": "render",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "-The render.\n"
															},
															"type": {
																"type": "reference",
																"name": "IRender",
																"id": 26830
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46072,
													"character": 14
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13852,
												13849
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 46066,
											"character": 27
										}
									]
								},
								{
									"id": 13933,
									"name": "ILegendItemModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a legend item object."
									},
									"children": [
										{
											"id": 13936,
											"name": "color",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46311,
													"character": 22
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ILinearGradientColor",
														"id": 3692
													},
													{
														"type": "reference",
														"name": "IRadialGradientColor",
														"id": 3697
													}
												]
											}
										},
										{
											"id": 13939,
											"name": "filtered",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether it is filtered out."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46323,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 13940,
											"name": "hover",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the mouse pointer is on it."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46327,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 13944,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46273,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IViewModel",
												"id": 13918
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.parent",
												"id": 13920
											}
										},
										{
											"id": 13938,
											"name": "selected",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether it is selected."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46319,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 13937,
											"name": "shape",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the shape."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46315,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13935,
											"name": "size",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the size."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46307,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13934,
											"name": "title",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Get the title."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46303,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13943,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46269,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1686
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.type",
												"id": 13919
											}
										},
										{
											"id": 13945,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13946,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 13947,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										},
										{
											"id": 13941,
											"name": "relatedModels",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13942,
													"name": "relatedModels",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the related models."
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "IViewModel",
															"id": 13918
														}
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46332,
													"character": 21
												}
											]
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13936,
												13939,
												13940,
												13944,
												13938,
												13937,
												13935,
												13934,
												13943
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13945,
												13941
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 46299,
											"character": 37
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IViewModel",
											"id": 13918
										}
									]
								},
								{
									"id": 13948,
									"name": "ILegendModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a legend model."
									},
									"children": [
										{
											"id": 13950,
											"name": "kind",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the kind."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46351,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13952,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46273,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IViewModel",
												"id": 13918
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.parent",
												"id": 13920
											}
										},
										{
											"id": 13949,
											"name": "title",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the title."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46347,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13951,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46269,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1686
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.type",
												"id": 13919
											}
										},
										{
											"id": 13953,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13954,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 13955,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13950,
												13952,
												13949,
												13951
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13953
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 46343,
											"character": 33
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IViewModel",
											"id": 13918
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "IItemizedLegendModel",
											"id": 13924
										}
									]
								},
								{
									"id": 13956,
									"name": "ILegendTitleModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a legend title model."
									},
									"children": [
										{
											"id": 13959,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46273,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IViewModel",
												"id": 13918
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.parent",
												"id": 13920
											}
										},
										{
											"id": 13957,
											"name": "title",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the title."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46366,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13958,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46269,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1686
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.type",
												"id": 13919
											}
										},
										{
											"id": 13960,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13961,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 13962,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13959,
												13957,
												13958
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13960
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 46362,
											"character": 38
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IViewModel",
											"id": 13918
										}
									]
								},
								{
									"id": 3692,
									"name": "ILinearGradientColor",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the linear gradient color."
									},
									"children": [
										{
											"id": 3694,
											"name": "colorStops",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the list containing color and offset."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 18570,
													"character": 27
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IColorStop",
													"id": 3685
												}
											}
										},
										{
											"id": 3693,
											"name": "degree",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the degree."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 18566,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 3696,
											"name": "isTransparent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets whether it is transparent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 18517,
													"character": 30
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IColor.isTransparent",
												"id": 3684
											}
										},
										{
											"id": 3695,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 18513,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ColorType",
												"id": 3678
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IColor.type",
												"id": 3683
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3694,
												3693,
												3696,
												3695
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 18562,
											"character": 41
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IColor",
											"id": 3682
										}
									]
								},
								{
									"id": 2358,
									"name": "IMeasurer",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the measurer."
									},
									"children": [
										{
											"id": 2359,
											"name": "measureString",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2360,
													"name": "measureString",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Measure string."
													},
													"parameters": [
														{
															"id": 2361,
															"name": "s",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The measure string."
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2362,
															"name": "fontSize",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2363,
															"name": "fontFamily",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2364,
															"name": "fontWeight",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2365,
															"name": "fontStyle",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "Size"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 12309,
													"character": 21
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												2359
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 12299,
											"character": 30
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "ICanvasMeasurer",
											"id": 2345
										},
										{
											"type": "reference",
											"name": "ISvgMeasurer",
											"id": 2366
										}
									]
								},
								{
									"id": 7919,
									"name": "IModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a model object."
									},
									"children": [
										{
											"id": 7920,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 7921,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 7922,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												7920
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 29446,
											"character": 27
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IQueryInterface",
											"id": 1048
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "IDataModel",
											"id": 11839
										},
										{
											"type": "reference",
											"name": "IViewModel",
											"id": 13918
										}
									]
								},
								{
									"id": 20058,
									"name": "IOverlayItemModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the overlayItem view context model."
									},
									"children": [
										{
											"id": 20061,
											"name": "hover",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 64551,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 20060,
											"name": "overlay",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the overlay which current overlayitem belongs to."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 64549,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"name": "IOverlayModel",
												"id": 20067
											}
										},
										{
											"id": 20063,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46273,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IViewModel",
												"id": 13918
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.parent",
												"id": 13920
											}
										},
										{
											"id": 20059,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 64545,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "IStyle",
												"id": 27000
											}
										},
										{
											"id": 20062,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46269,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1686
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.type",
												"id": 13919
											}
										},
										{
											"id": 20064,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 20065,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 20066,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												20061,
												20060,
												20063,
												20059,
												20062
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												20064
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 64541,
											"character": 38
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IViewModel",
											"id": 13918
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "IErrorBarOverlayItemModel",
											"id": 20033
										},
										{
											"type": "reference",
											"name": "ITrendlineOverlayItemModel",
											"id": 20169
										}
									]
								},
								{
									"id": 20067,
									"name": "IOverlayModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the overlay model."
									},
									"children": [
										{
											"id": 20068,
											"name": "option",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the overlay option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 64564,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IOverlayOption",
												"id": 17161
											}
										},
										{
											"id": 20070,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46273,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IViewModel",
												"id": 13918
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.parent",
												"id": 13920
											}
										},
										{
											"id": 20069,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46269,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1686
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.type",
												"id": 13919
											}
										},
										{
											"id": 20071,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 20072,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 20073,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												20068,
												20070,
												20069
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												20071
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 64560,
											"character": 34
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IViewModel",
											"id": 13918
										}
									]
								},
								{
									"id": 12142,
									"name": "IParallelPlotModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the parallel plot object."
									},
									"children": [
										{
											"id": 12144,
											"name": "items",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the data items."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46121,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "object"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPlotModel.items",
												"id": 13866
											}
										},
										{
											"id": 12146,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the name."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46129,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPlotModel.name",
												"id": 13868
											}
										},
										{
											"id": 12147,
											"name": "option",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the plot option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46133,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IPlotOption",
												"id": 17311
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPlotModel.option",
												"id": 13869
											}
										},
										{
											"id": 12149,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46273,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IViewModel",
												"id": 13918
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.parent",
												"id": 13920
											}
										},
										{
											"id": 12145,
											"name": "points",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the points."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46125,
													"character": 23
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IPointModel",
													"id": 13882
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPlotModel.points",
												"id": 13867
											}
										},
										{
											"id": 12143,
											"name": "seriesList",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the series list."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 40737,
													"character": 27
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IParallelSeriesModel",
													"id": 12177
												}
											}
										},
										{
											"id": 12148,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46269,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1686
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.type",
												"id": 13919
											}
										},
										{
											"id": 12150,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 12151,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 12152,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												12144,
												12146,
												12147,
												12149,
												12145,
												12143,
												12148
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												12150
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 40733,
											"character": 39
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IPlotModel",
											"id": 13865
										}
									]
								},
								{
									"id": 12153,
									"name": "IParallelPointModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the parallel point object."
									},
									"children": [
										{
											"id": 12168,
											"name": "additionalKind",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the additional kind."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46203,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.additionalKind",
												"id": 13896
											}
										},
										{
											"id": 12165,
											"name": "color",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46191,
													"character": 13
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ILinearGradientColor",
														"id": 3692
													},
													{
														"type": "reference",
														"name": "IRadialGradientColor",
														"id": 3697
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.color",
												"id": 13893
											}
										},
										{
											"id": 12154,
											"name": "dimension",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the dimension name."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 40752,
													"character": 26
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 12170,
											"name": "filtered",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether it is filtered out."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46211,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.filtered",
												"id": 13898
											}
										},
										{
											"id": 12171,
											"name": "hover",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the mouse pointer is on it."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46215,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.hover",
												"id": 13899
											}
										},
										{
											"id": 12155,
											"name": "item",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the item."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46163,
													"character": 21
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 12156,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": [
														{
															"id": 12157,
															"name": "__index",
															"kind": 8192,
															"kindString": "Index signature",
															"flags": {},
															"parameters": [
																{
																	"id": 12158,
																	"name": "key",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "DataValueType",
																"id": 27533
															}
														}
													],
													"sources": [
														{
															"fileName": "source/core/modules/core.ts",
															"line": 46163,
															"character": 22
														}
													]
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.item",
												"id": 13883
											}
										},
										{
											"id": 12159,
											"name": "items",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the data items."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46167,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "object"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.items",
												"id": 13887
											}
										},
										{
											"id": 12173,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46273,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IViewModel",
												"id": 13918
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.parent",
												"id": 13920
											}
										},
										{
											"id": 12169,
											"name": "selected",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether it is selected."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46207,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.selected",
												"id": 13897
											}
										},
										{
											"id": 12161,
											"name": "selectedStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the selected style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46175,
													"character": 30
												}
											],
											"type": {
												"type": "reference",
												"name": "ISelectionStyleOption",
												"id": 17812
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.selectedStyle",
												"id": 13889
											}
										},
										{
											"id": 12166,
											"name": "shape",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the shape."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46195,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.shape",
												"id": 13894
											}
										},
										{
											"id": 12167,
											"name": "size",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the size."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46199,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.size",
												"id": 13895
											}
										},
										{
											"id": 12160,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46171,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 16897
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.style",
												"id": 13888
											}
										},
										{
											"id": 12163,
											"name": "text",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the text config."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46183,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "IPlotConfigTextOption",
												"id": 17268
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.text",
												"id": 13891
											}
										},
										{
											"id": 12164,
											"name": "tooltip",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the tooltip config."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46187,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"name": "IPlotConfigTooltipOption",
												"id": 17286
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.tooltip",
												"id": 13892
											}
										},
										{
											"id": 12172,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46269,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1686
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.type",
												"id": 13919
											}
										},
										{
											"id": 12162,
											"name": "unselectedStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the unselected style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46179,
													"character": 32
												}
											],
											"type": {
												"type": "reference",
												"name": "ISelectionStyleOption",
												"id": 17812
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.unselectedStyle",
												"id": 13890
											}
										},
										{
											"id": 12174,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 12175,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 12176,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												12168,
												12165,
												12154,
												12170,
												12171,
												12155,
												12159,
												12173,
												12169,
												12161,
												12166,
												12167,
												12160,
												12163,
												12164,
												12172,
												12162
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												12174
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 40748,
											"character": 40
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IPointModel",
											"id": 13882
										}
									]
								},
								{
									"id": 12177,
									"name": "IParallelSeriesModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the parallel series object."
									},
									"children": [
										{
											"id": 12179,
											"name": "color",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the color of the data point."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 40771,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"overwrites": {
												"type": "reference",
												"name": "ISeriesModel.color",
												"id": 13909
											}
										},
										{
											"id": 12183,
											"name": "filtered",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether it is filtered out."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46250,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ISeriesModel.filtered",
												"id": 13911
											}
										},
										{
											"id": 12184,
											"name": "hover",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the mouse pointer is on it."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46254,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ISeriesModel.hover",
												"id": 13912
											}
										},
										{
											"id": 12180,
											"name": "items",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the data items."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46230,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "object"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ISeriesModel.items",
												"id": 13906
											}
										},
										{
											"id": 12186,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46273,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IViewModel",
												"id": 13918
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.parent",
												"id": 13920
											}
										},
										{
											"id": 12178,
											"name": "points",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the points."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 40767,
													"character": 23
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IParallelPointModel",
													"id": 12153
												}
											},
											"overwrites": {
												"type": "reference",
												"name": "ISeriesModel.points",
												"id": 13907
											}
										},
										{
											"id": 12182,
											"name": "selected",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether it is selected."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46246,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ISeriesModel.selected",
												"id": 13910
											}
										},
										{
											"id": 12181,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46238,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 16897
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ISeriesModel.style",
												"id": 13908
											}
										},
										{
											"id": 12185,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46269,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1686
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.type",
												"id": 13919
											}
										},
										{
											"id": 12187,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 12188,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 12189,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												12179,
												12183,
												12184,
												12180,
												12186,
												12178,
												12182,
												12181,
												12185
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												12187
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 40763,
											"character": 41
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "ISeriesModel",
											"id": 13905
										}
									]
								},
								{
									"id": 13855,
									"name": "IPlotAreaModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a plot area."
									},
									"children": [
										{
											"id": 13857,
											"name": "column",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the column index."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46098,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13858,
											"name": "legends",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the legends."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46102,
													"character": 24
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "ILegendModel",
													"id": 13948
												}
											}
										},
										{
											"id": 13861,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46273,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IViewModel",
												"id": 13918
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.parent",
												"id": 13920
											}
										},
										{
											"id": 13859,
											"name": "plotsPanes",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the plot panes."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46106,
													"character": 27
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IPlotsPaneModel",
													"id": 13875
												}
											}
										},
										{
											"id": 13856,
											"name": "row",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the row index."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46094,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13860,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46269,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1686
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.type",
												"id": 13919
											}
										},
										{
											"id": 13862,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13863,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 13864,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13857,
												13858,
												13861,
												13859,
												13856,
												13860
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13862
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 46090,
											"character": 35
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IViewModel",
											"id": 13918
										}
									]
								},
								{
									"id": 13865,
									"name": "IPlotModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the plot model."
									},
									"children": [
										{
											"id": 13866,
											"name": "items",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the data items."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46121,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										},
										{
											"id": 13868,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the name."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46129,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13869,
											"name": "option",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the plot option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46133,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IPlotOption",
												"id": 17311
											}
										},
										{
											"id": 13871,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46273,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IViewModel",
												"id": 13918
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.parent",
												"id": 13920
											}
										},
										{
											"id": 13867,
											"name": "points",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the points."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46125,
													"character": 23
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IPointModel",
													"id": 13882
												}
											}
										},
										{
											"id": 13870,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46269,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1686
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.type",
												"id": 13919
											}
										},
										{
											"id": 13872,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13873,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 13874,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13866,
												13868,
												13869,
												13871,
												13867,
												13870
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13872
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 46117,
											"character": 31
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IViewModel",
											"id": 13918
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "ICartesianPlotModel",
											"id": 11019
										},
										{
											"type": "reference",
											"name": "IHierarchicalPlotModel",
											"id": 11788
										},
										{
											"type": "reference",
											"name": "IParallelPlotModel",
											"id": 12142
										}
									]
								},
								{
									"id": 13875,
									"name": "IPlotsPaneModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a plots."
									},
									"children": [
										{
											"id": 13878,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46273,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IViewModel",
												"id": 13918
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.parent",
												"id": 13920
											}
										},
										{
											"id": 13876,
											"name": "plots",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the plots."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46148,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IPlotModel",
													"id": 13865
												}
											}
										},
										{
											"id": 13877,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46269,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1686
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.type",
												"id": 13919
											}
										},
										{
											"id": 13879,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13880,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 13881,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13878,
												13876,
												13877
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13879
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 46144,
											"character": 36
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IViewModel",
											"id": 13918
										}
									]
								},
								{
									"id": 13882,
									"name": "IPointModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the point object."
									},
									"children": [
										{
											"id": 13896,
											"name": "additionalKind",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the additional kind."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46203,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13893,
											"name": "color",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46191,
													"character": 13
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ILinearGradientColor",
														"id": 3692
													},
													{
														"type": "reference",
														"name": "IRadialGradientColor",
														"id": 3697
													}
												]
											}
										},
										{
											"id": 13898,
											"name": "filtered",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether it is filtered out."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46211,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 13899,
											"name": "hover",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the mouse pointer is on it."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46215,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 13883,
											"name": "item",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the item."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46163,
													"character": 21
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 13884,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": [
														{
															"id": 13885,
															"name": "__index",
															"kind": 8192,
															"kindString": "Index signature",
															"flags": {},
															"parameters": [
																{
																	"id": 13886,
																	"name": "key",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "DataValueType",
																"id": 27533
															}
														}
													],
													"sources": [
														{
															"fileName": "source/core/modules/core.ts",
															"line": 46163,
															"character": 22
														}
													]
												}
											}
										},
										{
											"id": 13887,
											"name": "items",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the data items."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46167,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										},
										{
											"id": 13901,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46273,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IViewModel",
												"id": 13918
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.parent",
												"id": 13920
											}
										},
										{
											"id": 13897,
											"name": "selected",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether it is selected."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46207,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 13889,
											"name": "selectedStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the selected style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46175,
													"character": 30
												}
											],
											"type": {
												"type": "reference",
												"name": "ISelectionStyleOption",
												"id": 17812
											}
										},
										{
											"id": 13894,
											"name": "shape",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the shape."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46195,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13895,
											"name": "size",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the size."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46199,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13888,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46171,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 16897
											}
										},
										{
											"id": 13891,
											"name": "text",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the text config."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46183,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "IPlotConfigTextOption",
												"id": 17268
											}
										},
										{
											"id": 13892,
											"name": "tooltip",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the tooltip config."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46187,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"name": "IPlotConfigTooltipOption",
												"id": 17286
											}
										},
										{
											"id": 13900,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46269,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1686
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.type",
												"id": 13919
											}
										},
										{
											"id": 13890,
											"name": "unselectedStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the unselected style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46179,
													"character": 32
												}
											],
											"type": {
												"type": "reference",
												"name": "ISelectionStyleOption",
												"id": 17812
											}
										},
										{
											"id": 13902,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13903,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 13904,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13896,
												13893,
												13898,
												13899,
												13883,
												13887,
												13901,
												13897,
												13889,
												13894,
												13895,
												13888,
												13891,
												13892,
												13900,
												13890
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13902
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 46159,
											"character": 32
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IViewModel",
											"id": 13918
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "ICartesianPointModel",
											"id": 11030
										},
										{
											"type": "reference",
											"name": "IHierarchicalPointModel",
											"id": 11799
										},
										{
											"type": "reference",
											"name": "IParallelPointModel",
											"id": 12153
										}
									]
								},
								{
									"id": 7923,
									"name": "IPrediction",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the prediction template."
									},
									"typeParameter": [
										{
											"id": 7924,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"children": [
										{
											"id": 7925,
											"name": "predicate",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 7926,
													"name": "predicate",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Predicate."
													},
													"parameters": [
														{
															"id": 7927,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 29461,
													"character": 17
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												7925
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 29457,
											"character": 32
										}
									],
									"implementedBy": [
										{
											"type": "reference",
											"name": "ExcludingModelPrediction",
											"id": 7903
										},
										{
											"type": "reference",
											"name": "IncludingModelPrediction",
											"id": 7911
										}
									]
								},
								{
									"id": 3697,
									"name": "IRadialGradientColor",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the radial gradient color."
									},
									"children": [
										{
											"id": 3702,
											"name": "colorStops",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the list containing color and offset."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 18601,
													"character": 27
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IColorStop",
													"id": 3685
												}
											}
										},
										{
											"id": 3700,
											"name": "end",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the end location."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 18593,
													"character": 20
												}
											],
											"type": {
												"type": "reference",
												"name": "Point"
											}
										},
										{
											"id": 3701,
											"name": "endRadius",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the end radius."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 18597,
													"character": 26
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 3704,
											"name": "isTransparent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets whether it is transparent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 18517,
													"character": 30
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IColor.isTransparent",
												"id": 3684
											}
										},
										{
											"id": 3698,
											"name": "start",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the start location."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 18585,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "Point"
											}
										},
										{
											"id": 3699,
											"name": "startRadius",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the start radius."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 18589,
													"character": 28
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 3703,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 18513,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ColorType",
												"id": 3678
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IColor.type",
												"id": 3683
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3702,
												3700,
												3701,
												3704,
												3698,
												3699,
												3703
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 18581,
											"character": 41
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IColor",
											"id": 3682
										}
									]
								},
								{
									"id": 2171,
									"name": "IRenderEngine",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the render engine."
									},
									"children": [
										{
											"id": 2183,
											"name": "devicePixelRatio",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the devicePixelRatio for canvas renderengine"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 11985,
													"character": 24
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2173,
											"name": "fill",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the color used to fill the element."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 11945,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ILinearGradientColor",
														"id": 3692
													},
													{
														"type": "reference",
														"name": "IRadialGradientColor",
														"id": 3697
													}
												]
											}
										},
										{
											"id": 2179,
											"name": "fontFamily",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the font family for the text output."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 11969,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2178,
											"name": "fontSize",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the font size for the text output."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 11965,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2181,
											"name": "fontStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the font style for the text output."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 11977,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "FontStyle",
												"id": 1722
											}
										},
										{
											"id": 2180,
											"name": "fontWeight",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the font weight for the text output."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 11973,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2172,
											"name": "opacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the opacity used to fill the element."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 11941,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2174,
											"name": "stroke",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the color used to outline the element."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 11949,
													"character": 14
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ILinearGradientColor",
														"id": 3692
													},
													{
														"type": "reference",
														"name": "IRadialGradientColor",
														"id": 3697
													}
												]
											}
										},
										{
											"id": 2176,
											"name": "strokeDasharray",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the pattern of dashes and gaps of the outline."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 11957,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2175,
											"name": "strokeWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the thickness of the outline."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 11953,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2182,
											"name": "textDecoration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text decoration for the text output."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 11981,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextDecorationOption",
												"id": 17391
											}
										},
										{
											"id": 2177,
											"name": "textFill",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 11961,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2295,
											"name": "addClipRect",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2296,
													"name": "addClipRect",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2297,
															"name": "clipRect",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Rect"
															}
														},
														{
															"id": 2298,
															"name": "id",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 12019,
													"character": 19
												}
											]
										},
										{
											"id": 2184,
											"name": "beginRender",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2185,
													"name": "beginRender",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Clear the viewport and start the rendering cycle."
													},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 11991,
													"character": 19
												}
											]
										},
										{
											"id": 2256,
											"name": "drawDonutSegment",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2257,
													"name": "drawDonutSegment",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2258,
															"name": "cx",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2259,
															"name": "cy",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2260,
															"name": "radius",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2261,
															"name": "innerRadius",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2262,
															"name": "startAngle",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2263,
															"name": "sweepAngle",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2264,
															"name": "className",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2265,
															"name": "style",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2266,
															"name": "clipPath",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 12014,
													"character": 24
												}
											]
										},
										{
											"id": 2199,
											"name": "drawEllipse",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2200,
													"name": "drawEllipse",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2201,
															"name": "cx",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2202,
															"name": "cy",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2203,
															"name": "rx",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2204,
															"name": "ry",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2205,
															"name": "className",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2206,
															"name": "style",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2207,
															"name": "clipPath",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 12007,
													"character": 19
												}
											]
										},
										{
											"id": 2281,
											"name": "drawImage",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2282,
													"name": "drawImage",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2283,
															"name": "imageHref",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2284,
															"name": "x",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2285,
															"name": "y",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2286,
															"name": "w",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2287,
															"name": "h",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2288,
															"name": "matrix",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 12017,
													"character": 17
												}
											]
										},
										{
											"id": 2217,
											"name": "drawLine",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2218,
													"name": "drawLine",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2219,
															"name": "x1",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2220,
															"name": "y1",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2221,
															"name": "x2",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2222,
															"name": "y2",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2223,
															"name": "className",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2224,
															"name": "style",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 12009,
													"character": 16
												}
											]
										},
										{
											"id": 2225,
											"name": "drawLines",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2226,
													"name": "drawLines",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2227,
															"name": "xs",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														},
														{
															"id": 2228,
															"name": "ys",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														},
														{
															"id": 2229,
															"name": "className",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2230,
															"name": "style",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2231,
															"name": "clipPath",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 12010,
													"character": 17
												}
											]
										},
										{
											"id": 2246,
											"name": "drawPieSegment",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2247,
													"name": "drawPieSegment",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2248,
															"name": "cx",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2249,
															"name": "cy",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2250,
															"name": "radius",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2251,
															"name": "startAngle",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2252,
															"name": "sweepAngle",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2253,
															"name": "className",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2254,
															"name": "style",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2255,
															"name": "clipPath",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 12013,
													"character": 22
												}
											]
										},
										{
											"id": 2239,
											"name": "drawPolygon",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2240,
													"name": "drawPolygon",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2241,
															"name": "xs",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														},
														{
															"id": 2242,
															"name": "ys",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														},
														{
															"id": 2243,
															"name": "className",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2244,
															"name": "style",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2245,
															"name": "clipPath",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 12012,
													"character": 19
												}
											]
										},
										{
											"id": 2208,
											"name": "drawRect",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2209,
													"name": "drawRect",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2210,
															"name": "x",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2211,
															"name": "y",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2212,
															"name": "w",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2213,
															"name": "h",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2214,
															"name": "className",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2215,
															"name": "style",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2216,
															"name": "clipPath",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 12008,
													"character": 16
												}
											]
										},
										{
											"id": 2232,
											"name": "drawSplines",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2233,
													"name": "drawSplines",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2234,
															"name": "xs",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														},
														{
															"id": 2235,
															"name": "ys",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														},
														{
															"id": 2236,
															"name": "className",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2237,
															"name": "style",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2238,
															"name": "clipPath",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 12011,
													"character": 19
												}
											]
										},
										{
											"id": 2267,
											"name": "drawString",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2268,
													"name": "drawString",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2269,
															"name": "s",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2270,
															"name": "pt",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Point"
															}
														},
														{
															"id": 2271,
															"name": "className",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2272,
															"name": "style",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 12015,
													"character": 18
												}
											]
										},
										{
											"id": 2273,
											"name": "drawStringRotated",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2274,
													"name": "drawStringRotated",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2275,
															"name": "label",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2276,
															"name": "pt",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Point"
															}
														},
														{
															"id": 2277,
															"name": "center",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Point"
															}
														},
														{
															"id": 2278,
															"name": "angle",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2279,
															"name": "className",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2280,
															"name": "style",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 12016,
													"character": 25
												}
											]
										},
										{
											"id": 2197,
											"name": "endGroup",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2198,
													"name": "endGroup",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 12005,
													"character": 16
												}
											]
										},
										{
											"id": 2186,
											"name": "endRender",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2187,
													"name": "endRender",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Ends the rendering cycle."
													},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 11995,
													"character": 17
												}
											]
										},
										{
											"id": 2289,
											"name": "measureString",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2290,
													"name": "measureString",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2291,
															"name": "s",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2292,
															"name": "className",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2293,
															"name": "groupName",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2294,
															"name": "style",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "Size"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 12018,
													"character": 21
												}
											]
										},
										{
											"id": 2188,
											"name": "setViewportSize",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2189,
													"name": "setViewportSize",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Sets the size of the viewport."
													},
													"parameters": [
														{
															"id": 2190,
															"name": "width",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The viewport width."
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2191,
															"name": "height",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The viewport height.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 12002,
													"character": 23
												}
											]
										},
										{
											"id": 2192,
											"name": "startGroup",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2193,
													"name": "startGroup",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2194,
															"name": "className",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2195,
															"name": "clipPath",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2196,
															"name": "createTransform",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 12004,
													"character": 18
												}
											]
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												2183,
												2173,
												2179,
												2178,
												2181,
												2180,
												2172,
												2174,
												2176,
												2175,
												2182,
												2177
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												2295,
												2184,
												2256,
												2199,
												2281,
												2217,
												2225,
												2246,
												2239,
												2208,
												2232,
												2267,
												2273,
												2197,
												2186,
												2289,
												2188,
												2192
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11937,
											"character": 34
										}
									]
								},
								{
									"id": 13905,
									"name": "ISeriesModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the series object."
									},
									"children": [
										{
											"id": 13909,
											"name": "color",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46242,
													"character": 13
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ILinearGradientColor",
														"id": 3692
													},
													{
														"type": "reference",
														"name": "IRadialGradientColor",
														"id": 3697
													}
												]
											}
										},
										{
											"id": 13911,
											"name": "filtered",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether it is filtered out."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46250,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 13912,
											"name": "hover",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the mouse pointer is on it."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46254,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 13906,
											"name": "items",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the data items."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46230,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										},
										{
											"id": 13914,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46273,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IViewModel",
												"id": 13918
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.parent",
												"id": 13920
											}
										},
										{
											"id": 13907,
											"name": "points",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the points."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46234,
													"character": 23
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IPointModel",
													"id": 13882
												}
											}
										},
										{
											"id": 13910,
											"name": "selected",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether it is selected."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46246,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 13908,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46238,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 16897
											}
										},
										{
											"id": 13913,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46269,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1686
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.type",
												"id": 13919
											}
										},
										{
											"id": 13915,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13916,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 13917,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13909,
												13911,
												13912,
												13906,
												13914,
												13907,
												13910,
												13908,
												13913
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13915
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 46226,
											"character": 33
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IViewModel",
											"id": 13918
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "ICartesianSeriesModel",
											"id": 11058
										},
										{
											"type": "reference",
											"name": "IParallelSeriesModel",
											"id": 12177
										}
									]
								},
								{
									"id": 12745,
									"name": "IShapeElement",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the shape element."
									},
									"children": [
										{
											"id": 12748,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 12749,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 12750,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										},
										{
											"id": 12746,
											"name": "shape",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 12747,
													"name": "shape",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Query the model shape.",
														"returns": "The shape.\n"
													},
													"type": {
														"type": "reference",
														"name": "IShape",
														"id": 27486
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 42068,
													"character": 13
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												12748,
												12746
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 42062,
											"character": 34
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IQueryInterface",
											"id": 1048
										}
									]
								},
								{
									"id": 12723,
									"name": "IStringFormatting",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the string formatting."
									},
									"children": [
										{
											"id": 12728,
											"name": "defaultFormat",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 12729,
													"name": "defaultFormat",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the default format of the data type.",
														"returns": "The default format.\n"
													},
													"parameters": [
														{
															"id": 12730,
															"name": "dataType",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The data type.\n"
															},
															"type": {
																"type": "reference",
																"name": "DataType"
															}
														},
														{
															"id": 12731,
															"name": "percentage",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 41996,
													"character": 21
												}
											]
										},
										{
											"id": 12724,
											"name": "format",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 12725,
													"name": "format",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the formatting string of the object.",
														"returns": "The formatting string.\n"
													},
													"parameters": [
														{
															"id": 12726,
															"name": "format",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 12727,
															"name": "obj",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The object.\n"
															},
															"type": {
																"type": "reference",
																"name": "DataValueType",
																"id": 27533
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 41988,
													"character": 14
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												12728,
												12724
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 41980,
											"character": 38
										}
									]
								},
								{
									"id": 27000,
									"name": "IStyle",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the style for render."
									},
									"children": [
										{
											"id": 27002,
											"name": "fill",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 86375,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ILinearGradientColor",
														"id": 3692
													},
													{
														"type": "reference",
														"name": "IRadialGradientColor",
														"id": 3697
													}
												]
											}
										},
										{
											"id": 27001,
											"name": "fillOpacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 86374,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 27010,
											"name": "fontFamily",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 86383,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 27009,
											"name": "fontSize",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 86382,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 27012,
											"name": "fontStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 86385,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "FontStyle",
												"id": 1722
											}
										},
										{
											"id": 27011,
											"name": "fontWeight",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 86384,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 27004,
											"name": "stroke",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 86377,
													"character": 14
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ILinearGradientColor",
														"id": 3692
													},
													{
														"type": "reference",
														"name": "IRadialGradientColor",
														"id": 3697
													}
												]
											}
										},
										{
											"id": 27006,
											"name": "strokeDasharray",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 86379,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 27003,
											"name": "strokeOpacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 86376,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 27005,
											"name": "strokeWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 86378,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 27013,
											"name": "textDecoration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 86386,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextDecorationOption",
												"id": 17391
											}
										},
										{
											"id": 27008,
											"name": "textFill",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 86381,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 27007,
											"name": "textOpacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 86380,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 27014,
											"name": "clone",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 27015,
													"name": "clone",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 86388,
													"character": 13
												}
											]
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												27002,
												27001,
												27010,
												27009,
												27012,
												27011,
												27004,
												27006,
												27003,
												27005,
												27013,
												27008,
												27007
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												27014
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 86373,
											"character": 27
										}
									]
								},
								{
									"id": 2366,
									"name": "ISvgMeasurer",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the svg measurer interface."
									},
									"children": [
										{
											"id": 2367,
											"name": "begin",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2368,
													"name": "begin",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Begin the measure and init the svg element."
													},
													"parameters": [
														{
															"id": 2369,
															"name": "svgTextElement",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The svg text element.\n"
															},
															"type": {
																"type": "reference",
																"name": "SVGTextElement"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 12325,
													"character": 13
												}
											]
										},
										{
											"id": 2370,
											"name": "end",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2371,
													"name": "end",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "End the measure."
													},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 12330,
													"character": 11
												}
											]
										},
										{
											"id": 2372,
											"name": "getBBox",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2373,
													"name": "getBBox",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Get BBox."
													},
													"type": {
														"type": "reference",
														"name": "Rect"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 12335,
													"character": 15
												}
											]
										},
										{
											"id": 2374,
											"name": "measureString",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2375,
													"name": "measureString",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Measure string."
													},
													"parameters": [
														{
															"id": 2376,
															"name": "s",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The measure string."
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2377,
															"name": "fontSize",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2378,
															"name": "fontFamily",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2379,
															"name": "fontWeight",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2380,
															"name": "fontStyle",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "Size"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IMeasurer.measureString",
														"id": 2359
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 12309,
													"character": 21
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IMeasurer.measureString",
												"id": 2359
											}
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												2367,
												2370,
												2372,
												2374
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 12319,
											"character": 33
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IMeasurer",
											"id": 2358
										}
									]
								},
								{
									"id": 12732,
									"name": "ISymbol",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the symbol."
									},
									"children": [
										{
											"id": 12733,
											"name": "color",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets color value"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 42011,
													"character": 13
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ILinearGradientColor",
														"id": 3692
													},
													{
														"type": "reference",
														"name": "IRadialGradientColor",
														"id": 3697
													}
												]
											}
										},
										{
											"id": 12734,
											"name": "render",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 12735,
													"name": "render",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Draws the symbol."
													},
													"parameters": [
														{
															"id": 12736,
															"name": "render",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The render."
															},
															"type": {
																"type": "reference",
																"name": "IRender",
																"id": 26830
															}
														},
														{
															"id": 12737,
															"name": "rectangle",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The symbol rectangle."
															},
															"type": {
																"type": "reference",
																"name": "Rect"
															}
														},
														{
															"id": 12738,
															"name": "style",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The data point style.\n"
															},
															"type": {
																"type": "reference",
																"name": "IStyle",
																"id": 27000
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 42020,
													"character": 14
												}
											]
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												12733
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												12734
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 42007,
											"character": 28
										}
									]
								},
								{
									"id": 7931,
									"name": "ISymbolProvider",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the symbol provider."
									},
									"children": [
										{
											"id": 7932,
											"name": "getSymbol",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 7933,
													"name": "getSymbol",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the symbol name.",
														"returns": "The symbol.\n"
													},
													"parameters": [
														{
															"id": 7934,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 29493,
													"character": 17
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												7932
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 29487,
											"character": 36
										}
									]
								},
								{
									"id": 20169,
									"name": "ITrendlineOverlayItemModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the trend line overlay model."
									},
									"children": [
										{
											"id": 20173,
											"name": "hover",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 64551,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayItemModel.hover",
												"id": 20061
											}
										},
										{
											"id": 20172,
											"name": "overlay",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the overlay which current overlayitem belongs to."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 64549,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"name": "IOverlayModel",
												"id": 20067
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayItemModel.overlay",
												"id": 20060
											}
										},
										{
											"id": 20175,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46273,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IViewModel",
												"id": 13918
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.parent",
												"id": 13920
											}
										},
										{
											"id": 20170,
											"name": "seriesName",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "The series name of current trendline referenced.\nIf can't find a specific sereis, return null."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 64763,
													"character": 27
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										},
										{
											"id": 20171,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 64545,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "IStyle",
												"id": 27000
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayItemModel.style",
												"id": 20059
											}
										},
										{
											"id": 20174,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46269,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1686
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.type",
												"id": 13919
											}
										},
										{
											"id": 20176,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 20177,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 20178,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												20173,
												20172,
												20175,
												20170,
												20171,
												20174
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												20176
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 64758,
											"character": 47
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOverlayItemModel",
											"id": 20058
										}
									]
								},
								{
									"id": 13918,
									"name": "IViewModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a model object."
									},
									"children": [
										{
											"id": 13920,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46273,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IViewModel",
												"id": 13918
											}
										},
										{
											"id": 13919,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46269,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1686
											}
										},
										{
											"id": 13921,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13922,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 13923,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13920,
												13919
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13921
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 46265,
											"character": 31
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IModel",
											"id": 7919
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "IAxisLabelModel",
											"id": 13760
										},
										{
											"type": "reference",
											"name": "IAxisModel",
											"id": 13771
										},
										{
											"type": "reference",
											"name": "IAxisTitleModel",
											"id": 13783
										},
										{
											"type": "reference",
											"name": "IGridLineModel",
											"id": 13807
										},
										{
											"type": "reference",
											"name": "IDataLabelModel",
											"id": 13823
										},
										{
											"type": "reference",
											"name": "IDvModel",
											"id": 13831
										},
										{
											"type": "reference",
											"name": "IHeaderFooterModel",
											"id": 13841
										},
										{
											"type": "reference",
											"name": "IPlotAreaModel",
											"id": 13855
										},
										{
											"type": "reference",
											"name": "IPlotModel",
											"id": 13865
										},
										{
											"type": "reference",
											"name": "IPlotsPaneModel",
											"id": 13875
										},
										{
											"type": "reference",
											"name": "IPointModel",
											"id": 13882
										},
										{
											"type": "reference",
											"name": "ISeriesModel",
											"id": 13905
										},
										{
											"type": "reference",
											"name": "ILegendItemModel",
											"id": 13933
										},
										{
											"type": "reference",
											"name": "ILegendModel",
											"id": 13948
										},
										{
											"type": "reference",
											"name": "ILegendTitleModel",
											"id": 13956
										},
										{
											"type": "reference",
											"name": "IOverlayItemModel",
											"id": 20058
										},
										{
											"type": "reference",
											"name": "IOverlayModel",
											"id": 20067
										},
										{
											"type": "reference",
											"name": "ITrellisCellModel",
											"id": 64993
										},
										{
											"type": "reference",
											"name": "ITrellisColumnHeaderModel",
											"id": 65003
										},
										{
											"type": "reference",
											"name": "ITrellisColumnModel",
											"id": 65018
										},
										{
											"type": "reference",
											"name": "ITrellisModel",
											"id": 65028
										},
										{
											"type": "reference",
											"name": "ITrellisRowHeaderModel",
											"id": 65040
										},
										{
											"type": "reference",
											"name": "ITrellisRowModel",
											"id": 65055
										}
									]
								},
								{
									"id": 8478,
									"name": "CheckFunction",
									"kind": 4194304,
									"kindString": "Type alias",
									"flags": {},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 30633,
											"character": 22
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 8479,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 8480,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 8481,
															"name": "a",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ISeriesStyleOption",
																"id": 17343
															}
														},
														{
															"id": 8482,
															"name": "b",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "ISeriesStyleOption",
																"id": 17343
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 30633,
													"character": 24
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Enumerations",
									"kind": 4,
									"children": [
										3678
									]
								},
								{
									"title": "Classes",
									"kind": 128,
									"children": [
										7903,
										7911
									]
								},
								{
									"title": "Interfaces",
									"kind": 256,
									"children": [
										12655,
										10912,
										13760,
										13771,
										10918,
										13783,
										2345,
										11019,
										11030,
										11058,
										13796,
										12675,
										3682,
										3685,
										12680,
										3688,
										10987,
										13823,
										11839,
										12691,
										13831,
										20033,
										12696,
										11013,
										13807,
										13841,
										11788,
										11799,
										12701,
										13924,
										13848,
										13933,
										13948,
										13956,
										3692,
										2358,
										7919,
										20058,
										20067,
										12142,
										12153,
										12177,
										13855,
										13865,
										13875,
										13882,
										7923,
										3697,
										2171,
										13905,
										12745,
										12723,
										27000,
										2366,
										12732,
										7931,
										20169,
										13918
									]
								},
								{
									"title": "Type aliases",
									"kind": 4194304,
									"children": [
										8478
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 8587,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 11931,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 12046,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 12147,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 12272,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 12293,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 12313,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 12339,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 12614,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 13931,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 15099,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 16083,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 16594,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 16613,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 16630,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 16646,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 17814,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 17906,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 17943,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 18056,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 18108,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 18159,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 18181,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 18203,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 18286,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 18328,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 18386,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 18480,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 18503,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 18522,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 18541,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 18556,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 18575,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 18607,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 18639,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 18755,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 18789,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 18836,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 18975,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 19152,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 19405,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 19560,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 19756,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 19863,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 20024,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 20182,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 20207,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 20232,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 20249,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 20274,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 20299,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 20378,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 20439,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 20563,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 20643,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 20698,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 20741,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 20773,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 20816,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 20848,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 20891,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 20923,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 20962,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 20994,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 21036,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 21052,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 21080,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 21098,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 21192,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 21324,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 21469,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 21807,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 22070,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 22103,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 22260,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 22393,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 22597,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 22786,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 22803,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 22939,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 22992,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 23045,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 23098,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 23151,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 23211,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 23264,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 23317,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 23370,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 23390,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 23414,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 23481,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 23510,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 23540,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 23600,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 23706,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 23728,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 23775,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 23790,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 23904,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 23936,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 24002,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 24093,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 24152,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 24220,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 24297,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 24452,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 24494,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 24546,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 24597,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 24613,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 24634,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 24654,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 24913,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 25025,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 25076,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 25291,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 25332,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 25364,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 25406,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 25438,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 25540,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 25578,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 25610,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 25651,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 25683,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 25724,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 25756,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 25900,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 26035,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 26093,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 26135,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 26173,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 26205,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 26241,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 26261,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 26406,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 26461,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 26502,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 26587,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 26642,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 26683,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 26821,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 26882,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 26914,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 26959,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 27044,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 27081,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 27199,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 27252,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 27296,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 27344,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 27385,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 27462,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 27534,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 27556,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 27589,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 27652,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 27699,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 27754,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 27832,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 27930,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 28043,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 28121,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 28157,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 28210,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 28267,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 28366,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 28388,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 28401,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 28413,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 28430,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 28441,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 28502,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 28533,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 28610,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 28658,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 28671,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 28694,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 28714,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 28734,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 28754,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 28775,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 28875,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 28930,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 28989,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 29066,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 29128,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 29141,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 29158,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 29171,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 29221,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 29238,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 29378,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 29409,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 29440,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 29451,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 29481,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 29498,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 29641,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 29699,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 29733,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 29766,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 29806,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 29840,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 29879,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 29920,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 29985,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 30048,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 30076,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 30108,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 30125,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 30172,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 30205,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 30251,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 30272,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 30286,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 30353,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 30370,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 30388,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 30451,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 30525,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 30630,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 30791,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 30891,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 30926,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 31108,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 31140,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 31406,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 31472,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 31501,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 31555,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 31902,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 31940,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 32865,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 32913,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 32955,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 32997,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 33039,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 33081,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 33123,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 33165,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 33193,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 33235,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 33455,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 33510,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 33531,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 33578,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 33805,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 33931,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 33989,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 34053,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 34181,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 34220,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 34274,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 34304,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 34463,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 34569,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 34622,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 34672,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 34724,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 34852,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 34996,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 35061,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 35167,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 35381,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 35752,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 35994,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 36178,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 36373,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 36688,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 36761,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 36857,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 36996,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 37070,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 37216,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 37271,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 37293,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 37315,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 37330,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 37345,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 37404,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 37477,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 37500,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 37516,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 37569,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 37592,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 37607,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 37622,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 37653,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 37680,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 37775,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 37878,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 37981,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 38141,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 38189,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 38223,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 38252,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 38278,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 38311,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 38343,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 38392,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 38525,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 38619,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 38815,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 38988,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 39097,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 39210,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 39335,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 39467,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 39609,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 39684,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 39759,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 39776,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 39807,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 39848,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 39863,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 39956,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 40044,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 40099,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 40318,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 40488,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 40586,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 40662,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 40727,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 40742,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 40757,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 40776,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 40874,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 40912,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 40950,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 41094,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 41134,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 41170,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 41276,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 41316,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 41420,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 41606,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 41750,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 41767,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 41786,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 41818,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 41836,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 41853,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 41881,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 41900,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 41918,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 41974,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 42001,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 42025,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 42056,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 42073,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 42219,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 42311,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 44378,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 44429,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 44801,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 44844,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 44871,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 45029,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 45188,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 45205,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 45244,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 45299,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 45371,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 45410,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 45481,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 45520,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 45559,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 45575,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 45591,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 45619,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 45635,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 45663,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 45679,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 45695,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 45714,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 45843,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 45859,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 45886,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 45920,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 45935,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 45948,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 45959,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 45978,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 45998,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 46018,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 46045,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 46060,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 46084,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 46111,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 46138,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 46153,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 46220,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 46259,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 46278,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 46293,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 46337,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 46356,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 59338,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 59384,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 59428,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 60284,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 60330,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 60374,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 60542,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 60588,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 60632,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 60945,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 60991,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 61034,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 62541,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 63017,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 63063,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 63106,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 63173,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 64472,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 64486,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 64500,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 64522,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 64536,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 64555,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 64568,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 64584,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 64596,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 64665,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 64686,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 64701,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 64722,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 64736,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 64752,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 64768,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 64812,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 65031,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 65077,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 65127,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 67880,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 67926,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 67975,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 69971,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 70027,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 70075,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 74020,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 74173,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 74323,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 74616,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 74772,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 74965,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 75003,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 75091,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 75204,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 75288,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 75331,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 75367,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 75447,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 75482,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 75614,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 75664,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 75784,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 75809,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 75845,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 75977,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 76027,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 76147,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 76194,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 76299,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 76336,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 76494,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 76694,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 76812,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 76889,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 77086,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 77146,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 77311,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 77513,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 77726,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 77882,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 77929,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 77998,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 78035,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 78083,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 78166,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 78214,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 78274,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 78397,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 78621,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 78799,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 78832,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 78873,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 79276,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 79327,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 79592,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 79737,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 79874,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 79915,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 80132,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 80241,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 80344,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 80497,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 80606,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 81503,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 82674,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 82956,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 83010,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 83064,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 83121,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 83191,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 83344,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 83420,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 85952,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 86367,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 103167,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 103217,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 108160,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 108203,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 108230,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 112600,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 112630,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 115553,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 118651,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 119409,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 119617,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 121363,
									"character": 19
								}
							]
						},
						{
							"id": 13963,
							"name": "options",
							"kind": 2,
							"kindString": "Module",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 16775,
									"name": "IAnimationOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the animation option."
									},
									"children": [
										{
											"id": 16777,
											"name": "duration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the animation duration in milliseconds."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56191,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 16778,
											"name": "easing",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the topWidth."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56195,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "AnimationEasing",
												"id": 1613
											}
										},
										{
											"id": 16776,
											"name": "mode",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the mode."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56187,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "AnimationMode",
												"id": 1646
											}
										},
										{
											"id": 16780,
											"name": "staggering",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets staggering."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56203,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 16779,
											"name": "startDelay",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets time in milliseconds before the animation should start."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56199,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 16783,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16784,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 16781,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16782,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												16777,
												16778,
												16776,
												16780,
												16779
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												16783,
												16781
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 56183,
											"character": 37
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "IHoverAnimationOption",
											"id": 17004
										}
									]
								},
								{
									"id": 18131,
									"name": "IAnnotationOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the annotation overlay option."
									},
									"children": [
										{
											"id": 18139,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57442,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1822
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 17163
											}
										},
										{
											"id": 18134,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the label."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59877,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 18132,
											"name": "offset",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the offset."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59869,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 18135,
											"name": "placement",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the placement."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59881,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "Placement",
												"id": 1873
											}
										},
										{
											"id": 18137,
											"name": "pointPath",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the pointPath."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59889,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 18136,
											"name": "position",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the placement."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59885,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "AnnotationPosition"
											}
										},
										{
											"id": 18140,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57446,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 17335
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 17164
											}
										},
										{
											"id": 18133,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59873,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IOverlayStyleOption",
												"id": 18145
											}
										},
										{
											"id": 18138,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57438,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 17162
											}
										},
										{
											"id": 18143,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 18144,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 18141,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 18142,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												18139,
												18134,
												18132,
												18135,
												18137,
												18136,
												18140,
												18133,
												18138
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												18143,
												18141
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 59865,
											"character": 45
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOverlayOption",
											"id": 17161
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "IEllipseOverlayOption",
											"id": 18252
										},
										{
											"type": "reference",
											"name": "IImageOverlayOption",
											"id": 18346
										},
										{
											"type": "reference",
											"name": "ILineOverlayOption",
											"id": 18469
										},
										{
											"type": "reference",
											"name": "IRectangleOverlayOption",
											"id": 18689
										},
										{
											"type": "reference",
											"name": "ITextOverlayOption",
											"id": 18972
										}
									]
								},
								{
									"id": 16785,
									"name": "IAxisOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the option of the axis."
									},
									"children": [
										{
											"id": 16818,
											"name": "axisLine",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets axisLine hidden or show"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56348,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 16803,
											"name": "dateMode",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the date mode."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56286,
													"character": 16
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "DateMode",
														"id": 1677
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										},
										{
											"id": 16794,
											"name": "format",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the format of axis labels."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56250,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16826,
											"name": "groupGrid",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the group gridlines of the axis."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56380,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "TickMark",
												"id": 1939
											}
										},
										{
											"id": 16827,
											"name": "groupGridStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the group gridlines style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56384,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "ILineStyleOption",
												"id": 17121
											}
										},
										{
											"id": 16821,
											"name": "height",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the percentage of plot in view on the axis, value is 0-1."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56360,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 17419
											}
										},
										{
											"id": 16798,
											"name": "hoverStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the hover text style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56266,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 17399
											}
										},
										{
											"id": 16817,
											"name": "labelAngle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the rotation angle of the axis labels.",
												"text": "The angle is measured in degrees with valid values ranging from -90 to 90.\n"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56344,
													"character": 18
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										},
										{
											"id": 16799,
											"name": "labelStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the axis label style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56270,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "ILabelStyleOption",
												"id": 17798
											}
										},
										{
											"id": 16791,
											"name": "labels",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the axis labels is shown."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56238,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 16814,
											"name": "lineStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the axis line style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56330,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ILineStyleOption",
												"id": 17121
											}
										},
										{
											"id": 16819,
											"name": "logBase",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the log base."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56352,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 16810,
											"name": "majorGrid",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the axis includes major grid lines."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56314,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 16812,
											"name": "majorGridStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the major grid line style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56322,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "ILineStyleOption",
												"id": 17121
											}
										},
										{
											"id": 16806,
											"name": "majorTickSize",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the major size."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56298,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 16808,
											"name": "majorTickStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the major tick style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56306,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "ILineStyleOption",
												"id": 17121
											}
										},
										{
											"id": 16804,
											"name": "majorTicks",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the localtion of the major axis tick marks."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56290,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "TickMark",
												"id": 1939
											}
										},
										{
											"id": 16801,
											"name": "majorUnit",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the number of units between the major axis ticks."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56278,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "IAxisUnitOption",
												"id": 16837
											}
										},
										{
											"id": 16793,
											"name": "max",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the max value."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56246,
													"character": 11
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 17419
											}
										},
										{
											"id": 16823,
											"name": "maxHeight",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the max height."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56368,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 17419
											}
										},
										{
											"id": 16822,
											"name": "maxWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the max width."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56364,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 17419
											}
										},
										{
											"id": 16792,
											"name": "min",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the min value."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56242,
													"character": 11
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 17419
											}
										},
										{
											"id": 16811,
											"name": "minorGrid",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the axis includes minor grid lines."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56318,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 16813,
											"name": "minorGridStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the minor grid line style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56326,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "ILineStyleOption",
												"id": 17121
											}
										},
										{
											"id": 16807,
											"name": "minorTickSize",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the minor size."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56302,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 16809,
											"name": "minorTickStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the minor tick style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56310,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "ILineStyleOption",
												"id": 17121
											}
										},
										{
											"id": 16805,
											"name": "minorTicks",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the localtion of the minor axis tick marks."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56294,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "TickMark",
												"id": 1939
											}
										},
										{
											"id": 16802,
											"name": "minorUnit",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the number of units between the minor axis ticks."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56282,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "IAxisUnitOption",
												"id": 16837
											}
										},
										{
											"id": 16815,
											"name": "origin",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the value at which an axis crosses the perpendicular axis."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56334,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 16790,
											"name": "overlappingLabels",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the labels can be overlapped."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56234,
													"character": 25
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlappingLabels",
												"id": 1804
											}
										},
										{
											"id": 16787,
											"name": "plots",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the name of plots using the axis."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56222,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 16789,
											"name": "position",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the axis position."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56230,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "AxisPosition",
												"id": 1654
											}
										},
										{
											"id": 16816,
											"name": "reversed",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the axis is reversed (top to bottom or right to left)."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56338,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 16830,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56396,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 17335
												}
											}
										},
										{
											"id": 16795,
											"name": "scale",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the axis scale."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56254,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueScaleOption",
												"id": 17426
											}
										},
										{
											"id": 16825,
											"name": "scrollbarVisible",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the scrollbar show or hide."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56376,
													"character": 24
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 16796,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the axis style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56258,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IStyleOption",
												"id": 17378
											}
										},
										{
											"id": 16797,
											"name": "textStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the axis text style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56262,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 17399
											}
										},
										{
											"id": 16788,
											"name": "title",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the axis title."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56226,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16800,
											"name": "titleStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the axis title style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56274,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "ILabelStyleOption",
												"id": 17798
											}
										},
										{
											"id": 16786,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the axis type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56218,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "AxisType",
												"id": 1658
											}
										},
										{
											"id": 16831,
											"name": "unitLabel",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the unit label."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56400,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "IUnitLabelOption",
												"id": 17412
											}
										},
										{
											"id": 16828,
											"name": "useActualMax",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the actual max value is used."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56388,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 16829,
											"name": "useActualMin",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the actual min value is used."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56392,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 16824,
											"name": "viewSize",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the width."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56372,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 16820,
											"name": "width",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the width."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56356,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 17419
											}
										},
										{
											"id": 16835,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16836,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 16833,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16834,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												16818,
												16803,
												16794,
												16826,
												16827,
												16821,
												16798,
												16817,
												16799,
												16791,
												16814,
												16819,
												16810,
												16812,
												16806,
												16808,
												16804,
												16801,
												16793,
												16823,
												16822,
												16792,
												16811,
												16813,
												16807,
												16809,
												16805,
												16802,
												16815,
												16790,
												16787,
												16789,
												16816,
												16830,
												16795,
												16825,
												16796,
												16797,
												16788,
												16800,
												16786,
												16831,
												16828,
												16829,
												16824,
												16820
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												16835,
												16833
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 56214,
											"character": 32
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 16837,
									"name": "IAxisUnitOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the unit option of the axis."
									},
									"children": [
										{
											"id": 16839,
											"name": "dateMode",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the date model option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56425,
													"character": 16
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "DateMode",
														"id": 1677
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										},
										{
											"id": 16838,
											"name": "value",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the unit value option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56421,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 16842,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16843,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 16840,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16841,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												16839,
												16838
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												16842,
												16840
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 56417,
											"character": 36
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 17536,
									"name": "IBarGroupOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the bar group option."
									},
									"children": [
										{
											"id": 17540,
											"name": "cluster",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the cluster of group."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58692,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 17538,
											"name": "key",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the key."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58680,
													"character": 11
												}
											],
											"type": {
												"type": "reference",
												"name": "DataValueType",
												"id": 27533
											}
										},
										{
											"id": 17537,
											"name": "valueField",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the value field name."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58676,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 17539,
											"name": "width",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the width for bar clusters.",
												"text": "The width can be specified as percentage (0-1) of the available space.\nThe default value is 0.7 which means the bars take up 70% of the available\nspace and the other 30% is the gap. This property does not support negative values.\n"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58688,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17543,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17544,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 17541,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17542,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17540,
												17538,
												17537,
												17539
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17543,
												17541
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 58672,
											"character": 36
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 17545,
									"name": "IBarOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the text style option."
									},
									"children": [
										{
											"id": 17551,
											"name": "borderRadius",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the border radius."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58736,
													"character": 20
												}
											],
											"type": {
												"type": "reference",
												"name": "IBorderRadiusOption",
												"id": 16844
											}
										},
										{
											"id": 17546,
											"name": "bottomWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the bottomWidth."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58706,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17548,
											"name": "neckHeight",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the neckHeight"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58715,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17550,
											"name": "overlap",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the amount of overlap between multiple bar plots.",
												"text": "The overlap can be specified as a percentage (0-1) where 0 means no overlap,\nand 1 means completely overlapped. This property also supports\na negative value (-1 to 0) which creates a gap between clustered bars.\n"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58732,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17547,
											"name": "topWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the topWidth."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58710,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17549,
											"name": "width",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the width for bar clusters.",
												"text": "The width can be specified as percentage (0-1) of the available space.\nThe default value is 0.7 which means the bars take up 70% of the available\nspace and the other 30% is the gap. This property does not support negative values.\n"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58723,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17554,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17555,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 17552,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17553,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17551,
												17546,
												17548,
												17550,
												17547,
												17549
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17554,
												17552
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 58702,
											"character": 31
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 17891,
									"name": "IBinOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the bin option."
									},
									"children": [
										{
											"id": 17892,
											"name": "steps",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the steps."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59222,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										},
										{
											"id": 17895,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17896,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 17893,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17894,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17892
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17895,
												17893
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 59218,
											"character": 31
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 17897,
									"name": "IBinTransformOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the bin transform option."
									},
									"children": [
										{
											"id": 17898,
											"name": "bin",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the bin."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59237,
													"character": 11
												}
											],
											"type": {
												"type": "reference",
												"name": "IBinOption",
												"id": 17891
											}
										},
										{
											"id": 17899,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59241,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 17900,
											"name": "outputAs",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the as."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59245,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 17903,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17904,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 17901,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17902,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17898,
												17899,
												17900
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17903,
												17901
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 59233,
											"character": 40
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 16844,
									"name": "IBorderRadiusOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the border radius option."
									},
									"children": [
										{
											"id": 16845,
											"name": "horizontalRadius",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the horizontal radius."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56440,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"name": "IBorderRadiusValueOption",
												"id": 16851
											}
										},
										{
											"id": 16846,
											"name": "verticalRadius",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the vertical radius."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56445,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "IBorderRadiusValueOption",
												"id": 16851
											}
										},
										{
											"id": 16849,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16850,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 16847,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16848,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												16845,
												16846
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												16849,
												16847
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 56436,
											"character": 40
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 16851,
									"name": "IBorderRadiusValueOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the border radius."
									},
									"children": [
										{
											"id": 16855,
											"name": "bottomLeft",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the bottom left."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56472,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 17419
											}
										},
										{
											"id": 16854,
											"name": "bottomRight",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the bottom right."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56468,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 17419
											}
										},
										{
											"id": 16852,
											"name": "topLeft",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the top left."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56460,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 17419
											}
										},
										{
											"id": 16853,
											"name": "topRight",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the top right."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56464,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 17419
											}
										},
										{
											"id": 16858,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16859,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 16856,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16857,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												16855,
												16854,
												16852,
												16853
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												16858,
												16856
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 56456,
											"character": 45
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 16221,
									"name": "ICategoryEncodingOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the category encoding option."
									},
									"children": [
										{
											"id": 16223,
											"name": "excludeNulls",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the null category is shown."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 53620,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 16224,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field name."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56771,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IEncodingOption.field",
												"id": 16930
											}
										},
										{
											"id": 16225,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field label."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56775,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IEncodingOption.label",
												"id": 16931
											}
										},
										{
											"id": 16222,
											"name": "sort",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the sort option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 53615,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "ISortEncodingOption",
												"id": 16283
											}
										},
										{
											"id": 16228,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16229,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 16226,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16227,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												16223,
												16224,
												16225,
												16222
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												16228,
												16226
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 53611,
											"character": 44
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IEncodingOption",
											"id": 16929
										}
									]
								},
								{
									"id": 16230,
									"name": "IColorEncodingOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the color encoding option."
									},
									"children": [
										{
											"id": 16231,
											"name": "aggregate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the aggregate option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 53635,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "Aggregate",
												"id": 1600
											}
										},
										{
											"id": 16233,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field name."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56771,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IEncodingOption.field",
												"id": 16930
											}
										},
										{
											"id": 16234,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field label."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56775,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IEncodingOption.label",
												"id": 16931
											}
										},
										{
											"id": 16232,
											"name": "sort",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the sort option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 53639,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "OrderType",
												"id": 1796
											}
										},
										{
											"id": 16237,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16238,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 16235,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16236,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												16231,
												16233,
												16234,
												16232
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												16237,
												16235
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 53631,
											"character": 41
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IEncodingOption",
											"id": 16929
										}
									]
								},
								{
									"id": 16723,
									"name": "IColorOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents color option."
									},
									"children": [
										{
											"id": 16724,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the color type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56086,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ColorOptionType",
												"id": 1665
											}
										},
										{
											"id": 16730,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16731,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 16728,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16729,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												16724
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												16730,
												16728
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 56082,
											"character": 33
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "ICssColorOption",
											"id": 16742
										},
										{
											"type": "reference",
											"name": "ILinearGradientOption",
											"id": 16752
										},
										{
											"type": "reference",
											"name": "IRadialGradientOption",
											"id": 16763
										}
									]
								},
								{
									"id": 16732,
									"name": "IColorStopOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents color stop option."
									},
									"children": [
										{
											"id": 16733,
											"name": "color",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56106,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16734,
											"name": "stop",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stop."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56110,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 16740,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16741,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 16738,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16739,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												16733,
												16734
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												16740,
												16738
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 56102,
											"character": 37
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 16860,
									"name": "IConfigOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the config option of the control."
									},
									"children": [
										{
											"id": 16866,
											"name": "backgroundColor",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the background color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56507,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 16723
											}
										},
										{
											"id": 16876,
											"name": "bar",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the bar option;"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56547,
													"character": 11
												}
											],
											"type": {
												"type": "reference",
												"name": "IBarOption",
												"id": 17545
											}
										},
										{
											"id": 16875,
											"name": "borderStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the border style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56543,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "ILineStyleOption",
												"id": 17121
											}
										},
										{
											"id": 16862,
											"name": "footer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the chart footer option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56491,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "IFooterOption",
												"id": 16936
											}
										},
										{
											"id": 16861,
											"name": "header",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the chart header option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56487,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "IHeaderOption",
												"id": 16977
											}
										},
										{
											"id": 16867,
											"name": "legend",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the global legend config."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56511,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "IGlobalLegendOption",
												"id": 16951
											}
										},
										{
											"id": 16877,
											"name": "padding",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the padding;"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56551,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "IPaddingOption",
												"id": 17169
											}
										},
										{
											"id": 16863,
											"name": "palette",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the palette."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56495,
													"character": 15
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IColorOption",
													"id": 16723
												}
											}
										},
										{
											"id": 16865,
											"name": "plotAreaLayout",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the layout of the plot areas."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56503,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "IPlotAreaLayoutOption",
												"id": 17187
											}
										},
										{
											"id": 16864,
											"name": "plotAreas",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the plot area."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56499,
													"character": 17
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IPlotAreaOption",
													"id": 17194
												}
											}
										},
										{
											"id": 16869,
											"name": "selectedStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the selection style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56519,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ISelectionStyleOption",
												"id": 17812
											}
										},
										{
											"id": 16871,
											"name": "selectedTextStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the selection text style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56527,
													"character": 25
												}
											],
											"type": {
												"type": "reference",
												"name": "ISelectionTextStyleOption",
												"id": 17836
											}
										},
										{
											"id": 16868,
											"name": "selectionMode",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the selection model."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56515,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "SelectionMode",
												"id": 1902
											}
										},
										{
											"id": 16873,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56535,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IStyleOption",
												"id": 17378
											}
										},
										{
											"id": 16874,
											"name": "textStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56539,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 17399
											}
										},
										{
											"id": 16870,
											"name": "unselectedStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the unselection style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56523,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "ISelectionStyleOption",
												"id": 17812
											}
										},
										{
											"id": 16872,
											"name": "unselectedTextStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the unselection text style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56531,
													"character": 27
												}
											],
											"type": {
												"type": "reference",
												"name": "ISelectionTextStyleOption",
												"id": 17836
											}
										},
										{
											"id": 16880,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16881,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 16878,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16879,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												16866,
												16876,
												16875,
												16862,
												16861,
												16867,
												16877,
												16863,
												16865,
												16864,
												16869,
												16871,
												16868,
												16873,
												16874,
												16870,
												16872
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												16880,
												16878
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 56483,
											"character": 34
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 16239,
									"name": "IContentEncodingOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the content encoding option.",
										"text": "The example defines a custom data label in the plot option:\n\n     {\n         type: 'Bar',\n         encodings: {\n             values: [{\n                 field: 'Sales'\n             }],\n             category: {\n                 field: 'Country'\n             },\n             text: [{\n                 field: 'Downloads'\n             }, {\n                 field: 'Salesman'\n             }]\n         },\n         config: {\n             text: {\n                 template: '{xField.name} : {xField.value} \\n{valueField.name} : {valueField.value}'\n             }\n         }\n     }\n\nThe example defines a custom tooltip in the plot option:\n\n     {\n         type: 'Bar',\n         encodings: {\n             values: [{\n                 field: 'Sales'\n             }],\n             category: {\n                 field: 'Country'\n             },\n             tooltip: [{\n                 field: 'Downloads'\n             }, {\n                 field: 'Salesman'\n             }]\n         },\n         config: {\n             tooltip: {\n                 scope: 'Default',\n                 template: '{xField.name} : {xField.value} \\n{valueField.name} : {valueField.value}'\n             }\n         }\n     }\n\n"
									},
									"children": [
										{
											"id": 16240,
											"name": "aggregate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the aggregate option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 53704,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "Aggregate",
												"id": 1600
											}
										},
										{
											"id": 16241,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field name."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56771,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IEncodingOption.field",
												"id": 16930
											}
										},
										{
											"id": 16242,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field label."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56775,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IEncodingOption.label",
												"id": 16931
											}
										},
										{
											"id": 16245,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16246,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 16243,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16244,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												16240,
												16241,
												16242
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												16245,
												16243
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 53700,
											"character": 43
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IEncodingOption",
											"id": 16929
										}
									]
								},
								{
									"id": 16742,
									"name": "ICssColorOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the css color option."
									},
									"children": [
										{
											"id": 16743,
											"name": "color",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56130,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16744,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the color type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56086,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ColorOptionType",
												"id": 1665
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IColorOption.type",
												"id": 16724
											}
										},
										{
											"id": 16750,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16751,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 16748,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16749,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												16743,
												16744
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												16750,
												16748
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 56126,
											"character": 36
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IColorOption",
											"id": 16723
										}
									]
								},
								{
									"id": 21624,
									"name": "ICumulativeMovingAverageTrendlineOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents CMA trend line overlay option."
									},
									"children": [
										{
											"id": 21630,
											"name": "detailKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail key."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68410,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailKey",
												"id": 21497
											}
										},
										{
											"id": 21629,
											"name": "detailLevel",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail level."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68406,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "DetailLevel",
												"id": 46036
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailLevel",
												"id": 21496
											}
										},
										{
											"id": 21634,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57442,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1822
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 17163
											}
										},
										{
											"id": 21628,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68402,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.field",
												"id": 21495
											}
										},
										{
											"id": 21627,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the label."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68398,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.label",
												"id": 21494
											}
										},
										{
											"id": 21625,
											"name": "period",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the period."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68521,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 21635,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57446,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 17335
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 17164
											}
										},
										{
											"id": 21626,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the style"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68394,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 16897
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.style",
												"id": 21493
											}
										},
										{
											"id": 21631,
											"name": "text",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68414,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "ITrendlineTextOption",
												"id": 21687
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.text",
												"id": 21498
											}
										},
										{
											"id": 21633,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57438,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 17162
											}
										},
										{
											"id": 21638,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 21639,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 21636,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 21637,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												21630,
												21629,
												21634,
												21628,
												21627,
												21625,
												21635,
												21626,
												21631,
												21633
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												21638,
												21636
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 68517,
											"character": 67
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "ITrendLineOverlayOption",
											"id": 21492
										}
									]
								},
								{
									"id": 16889,
									"name": "IDataOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the data option.",
										"text": "The example defines data in the option:\n\n     {\n         name: 'samples',\n         values: [ {\n             country: 'US',\n             sales: 300\n         }, {\n             country: 'CHINA',\n             sales: 500\n         }]\n     }\n\n"
									},
									"children": [
										{
											"id": 16892,
											"name": "dateFormats",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the date format list or whether no data format is acceptable.",
												"text": "When the string data is given in the values, the data format is used to verify whether it is a date value.\nIf it is false, no any data format is used to verity the date value.\nIf it is true, the following date formats are used to verify the date value.\n\n * r\n\nUser can give a date string format list to verify the date format.\n"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56616,
													"character": 19
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 16890,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the name of the data source."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56600,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16891,
											"name": "values",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the value list."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56604,
													"character": 14
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 16895,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16896,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 16893,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16894,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												16892,
												16890,
												16891
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												16895,
												16893
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 56596,
											"character": 32
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 16897,
									"name": "IDataPointStyleOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the style option."
									},
									"children": [
										{
											"id": 16901,
											"name": "backgroundColor",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the background color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56643,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 16723
											}
										},
										{
											"id": 16913,
											"name": "borderRadius",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the border radius."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56691,
													"character": 20
												}
											],
											"type": {
												"type": "reference",
												"name": "IBorderRadiusOption",
												"id": 16844
											}
										},
										{
											"id": 16900,
											"name": "fill",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the fill color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56639,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 16723
											}
										},
										{
											"id": 16898,
											"name": "opacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the opacity value of fill color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56631,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 16902,
											"name": "stroke",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56647,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 16723
											}
										},
										{
											"id": 16904,
											"name": "strokeDasharray",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke dash array."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56655,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16899,
											"name": "strokeOpacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the opacity value of stroke color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56635,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 16903,
											"name": "strokeWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke width."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56651,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "IStrokeWidthOption",
												"id": 17369
											}
										},
										{
											"id": 16908,
											"name": "symbolFill",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the background color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56671,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 16723
											}
										},
										{
											"id": 16906,
											"name": "symbolOpacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the opacity value of symbol fill color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56663,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 16905,
											"name": "symbolShape",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the shape of symbol."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56659,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16912,
											"name": "symbolSize",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke size."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56687,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 16909,
											"name": "symbolStroke",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56675,
													"character": 20
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 16723
											}
										},
										{
											"id": 16911,
											"name": "symbolStrokeDasharray",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke dash array."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56683,
													"character": 29
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16907,
											"name": "symbolStrokeOpacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the opacity value of symbol stroke color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56667,
													"character": 27
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 16910,
											"name": "symbolStrokeWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke width."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56679,
													"character": 25
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 16914,
											"name": "clone",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16915,
													"name": "clone",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a copy of this object."
													},
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56696,
													"character": 13
												}
											]
										},
										{
											"id": 16918,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16919,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 16916,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16917,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												16901,
												16913,
												16900,
												16898,
												16902,
												16904,
												16899,
												16903,
												16908,
												16906,
												16905,
												16912,
												16909,
												16911,
												16907,
												16910
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												16914,
												16918,
												16916
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 56627,
											"character": 42
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "ISeriesStyleOption",
											"id": 17343
										},
										{
											"type": "reference",
											"name": "ISelectionStyleOption",
											"id": 17812
										}
									]
								},
								{
									"id": 16247,
									"name": "IDetailEncodingOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the detail encoding option.",
										"text": "The option provides the field where the values is grouped. Currently, only string or boolean field type can be supported in the option.\n\nThe example defines detail in the plot option:\n\n     {\n         type: 'Bar',\n         encodings: {\n             values: [{\n                 field: 'Sales',\n                 aggregate: 'Sum'\n             }],\n             category: {\n                 field: 'Country'\n             },\n             details: [{\n                 field: 'Company',\n                 group: 'Cluster'\n             }]\n         }\n     }\n\n"
									},
									"children": [
										{
											"id": 16250,
											"name": "excludeNulls",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the null group is shown."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 53749,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 16251,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field name."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56771,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IEncodingOption.field",
												"id": 16930
											}
										},
										{
											"id": 16249,
											"name": "group",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the group option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 53745,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "Group",
												"id": 1757
											}
										},
										{
											"id": 16252,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field label."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56775,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IEncodingOption.label",
												"id": 16931
											}
										},
										{
											"id": 16248,
											"name": "sort",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the sort option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 53741,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "ISortEncodingOption",
												"id": 16283
											}
										},
										{
											"id": 16255,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16256,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 16253,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16254,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												16250,
												16251,
												16249,
												16252,
												16248
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												16255,
												16253
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 53737,
											"character": 42
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IEncodingOption",
											"id": 16929
										}
									]
								},
								{
									"id": 16920,
									"name": "IDvOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the option for dv."
									},
									"children": [
										{
											"id": 16922,
											"name": "config",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the config option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56715,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "IConfigOption",
												"id": 16860
											}
										},
										{
											"id": 16923,
											"name": "data",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the data option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56719,
													"character": 12
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IDataOption",
													"id": 16889
												}
											}
										},
										{
											"id": 16921,
											"name": "plots",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the plot options."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56711,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IPlotOption",
													"id": 17311
												}
											}
										},
										{
											"id": 16924,
											"name": "transform",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the transform option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56723,
													"character": 17
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IBinTransformOption",
													"id": 17897
												}
											}
										},
										{
											"id": 16927,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16928,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 16925,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16926,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												16922,
												16923,
												16921,
												16924
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												16927,
												16925
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 56707,
											"character": 30
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 18252,
									"name": "IEllipseOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the ellipse overlay option."
									},
									"children": [
										{
											"id": 18255,
											"name": "angle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the rotate angle."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 60097,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 18263,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57442,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1822
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 17163
											}
										},
										{
											"id": 18254,
											"name": "height",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the height."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 60093,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 18258,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the label."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59877,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.label",
												"id": 18134
											}
										},
										{
											"id": 18256,
											"name": "offset",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the offset."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59869,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.offset",
												"id": 18132
											}
										},
										{
											"id": 18259,
											"name": "placement",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the placement."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59881,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "Placement",
												"id": 1873
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.placement",
												"id": 18135
											}
										},
										{
											"id": 18261,
											"name": "pointPath",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the pointPath."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59889,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.pointPath",
												"id": 18137
											}
										},
										{
											"id": 18260,
											"name": "position",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the placement."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59885,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "AnnotationPosition"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.position",
												"id": 18136
											}
										},
										{
											"id": 18264,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57446,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 17335
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 17164
											}
										},
										{
											"id": 18257,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59873,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IOverlayStyleOption",
												"id": 18145
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.style",
												"id": 18133
											}
										},
										{
											"id": 18262,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57438,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 17162
											}
										},
										{
											"id": 18253,
											"name": "width",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the width."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 60089,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 18267,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 18268,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 18265,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 18266,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												18255,
												18263,
												18254,
												18258,
												18256,
												18259,
												18261,
												18260,
												18264,
												18257,
												18262,
												18253
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												18267,
												18265
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 60085,
											"character": 42
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IAnnotationOverlayOption",
											"id": 18131
										}
									]
								},
								{
									"id": 16929,
									"name": "IEncodingOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the encoding option inficating the binding field.",
										"text": "The option provides the field where the values is bound.\n\nThe example defines color encoding in the plot option:\n\n     {\n         type: 'Line',\n         encodings: {\n             values: [{\n                 field: 'Sales',\n                 aggregate: 'Sum'\n             }],\n             color: {\n                 field: 'Country'\n             }\n         }\n     }\n\nThe example defines size in the plot option:\n\n     {\n         type: 'Line',\n         encodings: {\n             values: [{\n                 field: 'Sales',\n                 aggregate: 'Sum'\n             }],\n             size: {\n                 field: 'Sales'\n             }\n         }\n     }\n\n"
									},
									"children": [
										{
											"id": 16930,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field name."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56771,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16931,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field label."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56775,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16934,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16935,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 16932,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16933,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												16930,
												16931
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												16934,
												16932
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 56767,
											"character": 36
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "ICategoryEncodingOption",
											"id": 16221
										},
										{
											"type": "reference",
											"name": "IColorEncodingOption",
											"id": 16230
										},
										{
											"type": "reference",
											"name": "IContentEncodingOption",
											"id": 16239
										},
										{
											"type": "reference",
											"name": "IDetailEncodingOption",
											"id": 16247
										},
										{
											"type": "reference",
											"name": "ILayoutEncodingOption",
											"id": 16257
										},
										{
											"type": "reference",
											"name": "IShapeEncodingOption",
											"id": 16265
										},
										{
											"type": "reference",
											"name": "ISizeEncodingOption",
											"id": 16274
										},
										{
											"type": "reference",
											"name": "ISortEncodingOption",
											"id": 16283
										}
									]
								},
								{
									"id": 19716,
									"name": "IErrorBarOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the error bar overlay option."
									},
									"children": [
										{
											"id": 19729,
											"name": "aggregate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the aggergate method to error field values."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 63535,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "Aggregate",
												"id": 1600
											}
										},
										{
											"id": 19726,
											"name": "detailKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail key."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 63523,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 19725,
											"name": "detailLevel",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail level."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 63519,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "DetailLevel",
												"id": 46036
											}
										},
										{
											"id": 19721,
											"name": "direction",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Determines the display option of the error bar."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 63503,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ErrorBarDirection",
												"id": 19465
											}
										},
										{
											"id": 19731,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57442,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1822
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 17163
											}
										},
										{
											"id": 19719,
											"name": "endCap",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Whether an end cap is displayed on the error bar. Default value is true."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 63495,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 19728,
											"name": "errorField",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the error field for custom error bar."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 63531,
													"character": 18
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										},
										{
											"id": 19720,
											"name": "errorType",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "The type of erro bar type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 63499,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ErrorBarErrorType",
												"id": 19469
											}
										},
										{
											"id": 19727,
											"name": "errorValues",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the error values for custom error bar."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 63527,
													"character": 19
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "IErrorValueOption",
															"id": 19737
														}
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										},
										{
											"id": 19724,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 63515,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 19718,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the label."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 63491,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 19722,
											"name": "orientation",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Determines the orientation option of the error bar."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 63507,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "ErrorBarOrientation",
												"id": 19475
											}
										},
										{
											"id": 19732,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57446,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 17335
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 17164
											}
										},
										{
											"id": 19717,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 63487,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IOverlayStyleOption",
												"id": 18145
											}
										},
										{
											"id": 19730,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57438,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 17162
											}
										},
										{
											"id": 19723,
											"name": "value",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "The value used for number of standard deviations, or percentage or fixed value. This property may have no effect if errorType == StandardError."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 63511,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 19735,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 19736,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 19733,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 19734,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												19729,
												19726,
												19725,
												19721,
												19731,
												19719,
												19728,
												19720,
												19727,
												19724,
												19718,
												19722,
												19732,
												19717,
												19730,
												19723
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												19735,
												19733
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 63483,
											"character": 36
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOverlayOption",
											"id": 17161
										}
									]
								},
								{
									"id": 19737,
									"name": "IErrorValueOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the error bar overlay value option."
									},
									"children": [
										{
											"id": 19739,
											"name": "negative",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "The negative value of error bar."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 63553,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 19738,
											"name": "positive",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "The positive value of error bar."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 63549,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 19742,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 19743,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 19740,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 19741,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												19739,
												19738
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												19742,
												19740
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 63545,
											"character": 38
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 21672,
									"name": "IExponentialMovingAverageTrendlineOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents EWMA trend line overlay option."
									},
									"children": [
										{
											"id": 21677,
											"name": "detailKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail key."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68410,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailKey",
												"id": 21497
											}
										},
										{
											"id": 21676,
											"name": "detailLevel",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail level."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68406,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "DetailLevel",
												"id": 46036
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailLevel",
												"id": 21496
											}
										},
										{
											"id": 21681,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57442,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1822
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 17163
											}
										},
										{
											"id": 21675,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68402,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.field",
												"id": 21495
											}
										},
										{
											"id": 21674,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the label."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68398,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.label",
												"id": 21494
											}
										},
										{
											"id": 21682,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57446,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 17335
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 17164
											}
										},
										{
											"id": 21673,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the style"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68394,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 16897
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.style",
												"id": 21493
											}
										},
										{
											"id": 21678,
											"name": "text",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68414,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "ITrendlineTextOption",
												"id": 21687
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.text",
												"id": 21498
											}
										},
										{
											"id": 21680,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57438,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 17162
											}
										},
										{
											"id": 21685,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 21686,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 21683,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 21684,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												21677,
												21676,
												21681,
												21675,
												21674,
												21682,
												21673,
												21678,
												21680
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												21685,
												21683
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 68547,
											"character": 68
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "ITrendLineOverlayOption",
											"id": 21492
										}
									]
								},
								{
									"id": 21525,
									"name": "IExponentialTrendLineOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents exponential trend line overlay option."
									},
									"children": [
										{
											"id": 21532,
											"name": "detailKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail key."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68410,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailKey",
												"id": 21497
											}
										},
										{
											"id": 21531,
											"name": "detailLevel",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail level."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68406,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "DetailLevel",
												"id": 46036
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailLevel",
												"id": 21496
											}
										},
										{
											"id": 21536,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57442,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1822
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 17163
											}
										},
										{
											"id": 21530,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68402,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.field",
												"id": 21495
											}
										},
										{
											"id": 21527,
											"name": "forecast",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the forecast."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68452,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "ITrendlineForecastOption",
												"id": 21485
											}
										},
										{
											"id": 21526,
											"name": "intercept",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the intercept."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68448,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 21529,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the label."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68398,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.label",
												"id": 21494
											}
										},
										{
											"id": 21537,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57446,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 17335
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 17164
											}
										},
										{
											"id": 21528,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the style"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68394,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 16897
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.style",
												"id": 21493
											}
										},
										{
											"id": 21533,
											"name": "text",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68414,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "ITrendlineTextOption",
												"id": 21687
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.text",
												"id": 21498
											}
										},
										{
											"id": 21535,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57438,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 17162
											}
										},
										{
											"id": 21540,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 21541,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 21538,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 21539,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												21532,
												21531,
												21536,
												21530,
												21527,
												21526,
												21529,
												21537,
												21528,
												21533,
												21535
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												21540,
												21538
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 68444,
											"character": 55
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "ITrendLineOverlayOption",
											"id": 21492
										}
									]
								},
								{
									"id": 16376,
									"name": "IFieldsValueEncodingOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the field value encoding option."
									},
									"children": [
										{
											"id": 16379,
											"name": "aggregate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the aggregate option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 54103,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "Aggregate",
												"id": 1600
											}
										},
										{
											"id": 16380,
											"name": "excludeNulls",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the null values is shown."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 54107,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 16377,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field name."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 54095,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16378,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field label."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 54099,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16381,
											"name": "sort",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the sort option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 54111,
													"character": 12
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "ISortEncodingOption",
													"id": 16283
												}
											}
										},
										{
											"id": 16382,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets option type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 54172,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IValueEncodingOption.type",
												"id": 16405
											}
										},
										{
											"id": 16385,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16386,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 16383,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16384,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												16379,
												16380,
												16377,
												16378,
												16381,
												16382
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												16385,
												16383
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 54091,
											"character": 47
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IValueEncodingOption",
											"id": 16404
										}
									]
								},
								{
									"id": 16936,
									"name": "IFooterOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents footer option."
									},
									"children": [
										{
											"id": 16945,
											"name": "borderStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the border."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56822,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "ILineStyleOption",
												"id": 17121
											}
										},
										{
											"id": 16941,
											"name": "hAlign",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the horizontal alignment."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56806,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "HAlign",
												"id": 1760
											}
										},
										{
											"id": 16938,
											"name": "height",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the footer height."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56794,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 17419
											}
										},
										{
											"id": 16939,
											"name": "maxHeight",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the max footer height."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56798,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 17419
											}
										},
										{
											"id": 16940,
											"name": "padding",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the footer padding."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56802,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "IPaddingOption",
												"id": 17169
											}
										},
										{
											"id": 16943,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the footer style"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56814,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IStyleOption",
												"id": 17378
											}
										},
										{
											"id": 16944,
											"name": "textStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the footer title style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56818,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 17399
											}
										},
										{
											"id": 16937,
											"name": "title",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the footer title."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56790,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16942,
											"name": "vAlign",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the vertical alignment."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56810,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "VAlign",
												"id": 1944
											}
										},
										{
											"id": 16946,
											"name": "width",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the width with pixel or \"Auto\"."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56826,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 17419
											}
										},
										{
											"id": 16949,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16950,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 16947,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16948,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												16945,
												16941,
												16938,
												16939,
												16940,
												16943,
												16944,
												16937,
												16942,
												16946
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												16949,
												16947
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 56786,
											"character": 34
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 16951,
									"name": "IGlobalLegendOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents global legend option."
									},
									"children": [
										{
											"id": 16958,
											"name": "borderStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the border."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56865,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "ILineStyleOption",
												"id": 17121
											}
										},
										{
											"id": 16961,
											"name": "filteredOutStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the filtered out text style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56877,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 17399
											}
										},
										{
											"id": 16972,
											"name": "groupHAlign",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the hAlign of the legends list."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57250,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "HAlign",
												"id": 1760
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ILegendsOption.groupHAlign"
											}
										},
										{
											"id": 16976,
											"name": "groupOrientation",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the orientation of the legends in list."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57266,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"name": "Orientation",
												"id": 1800
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ILegendsOption.groupOrientation"
											}
										},
										{
											"id": 16970,
											"name": "groupPadding",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the padding for legends list."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57242,
													"character": 20
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "IPaddingOption",
														"id": 17169
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ILegendsOption.groupPadding"
											}
										},
										{
											"id": 16973,
											"name": "groupVAlign",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the vAlign of the legends list."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57254,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "VAlign",
												"id": 1944
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ILegendsOption.groupVAlign"
											}
										},
										{
											"id": 16960,
											"name": "hoverStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the hover text style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56873,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 17399
											}
										},
										{
											"id": 16963,
											"name": "itemPadding",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the item padding;"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56885,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "IPaddingOption",
												"id": 17169
											}
										},
										{
											"id": 16974,
											"name": "left",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the left offset of the legends list."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57258,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ILegendsOption.left"
											}
										},
										{
											"id": 16952,
											"name": "margin",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the margin;"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56841,
													"character": 14
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "IMarginOption",
														"id": 17130
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										},
										{
											"id": 16953,
											"name": "orientation",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the legend orientation."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56845,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "Orientation",
												"id": 1800
											}
										},
										{
											"id": 16962,
											"name": "padding",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the padding;"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56881,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "IPaddingOption",
												"id": 17169
											}
										},
										{
											"id": 16971,
											"name": "position",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the legend position."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57246,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "LegendPosition",
												"id": 1767
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ILegendsOption.position"
											}
										},
										{
											"id": 16956,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the style"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56857,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "ILegendStyleOption",
												"id": 17107
											}
										},
										{
											"id": 16957,
											"name": "textStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56861,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 17399
											}
										},
										{
											"id": 16954,
											"name": "titlePosition",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the legend title position."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56849,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "Position",
												"id": 1884
											}
										},
										{
											"id": 16959,
											"name": "titleStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets title style"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56869,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 17399
											}
										},
										{
											"id": 16975,
											"name": "top",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the top offset of the legends list."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57262,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ILegendsOption.top"
											}
										},
										{
											"id": 16955,
											"name": "wrapping",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the title is wrapped."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56853,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 16968,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16969,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 16966,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16967,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												16958,
												16961,
												16972,
												16976,
												16970,
												16973,
												16960,
												16963,
												16974,
												16952,
												16953,
												16962,
												16971,
												16956,
												16957,
												16954,
												16959,
												16975,
												16955
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												16968,
												16966
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 56837,
											"character": 40
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										},
										{
											"type": "reference",
											"name": "ILegendsOption"
										}
									]
								},
								{
									"id": 16977,
									"name": "IHeaderOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents header option."
									},
									"children": [
										{
											"id": 16986,
											"name": "borderStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the border."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56942,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "ILineStyleOption",
												"id": 17121
											}
										},
										{
											"id": 16982,
											"name": "hAlign",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the horizontal alignment."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56926,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "HAlign",
												"id": 1760
											}
										},
										{
											"id": 16979,
											"name": "height",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the header height."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56914,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 17419
											}
										},
										{
											"id": 16980,
											"name": "maxHeight",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the max header height."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56918,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 17419
											}
										},
										{
											"id": 16981,
											"name": "padding",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the header padding."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56922,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "IPaddingOption",
												"id": 17169
											}
										},
										{
											"id": 16984,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the header style"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56934,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IStyleOption",
												"id": 17378
											}
										},
										{
											"id": 16985,
											"name": "textStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the header title style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56938,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 17399
											}
										},
										{
											"id": 16978,
											"name": "title",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the header title."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56910,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16983,
											"name": "vAlign",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the vertical alignment."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56930,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "VAlign",
												"id": 1944
											}
										},
										{
											"id": 16987,
											"name": "width",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the width with pixel or \"Auto\"."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56946,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 17419
											}
										},
										{
											"id": 16990,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16991,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 16988,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16989,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												16986,
												16982,
												16979,
												16980,
												16981,
												16984,
												16985,
												16978,
												16983,
												16987
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												16990,
												16988
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 56906,
											"character": 34
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 16992,
									"name": "IHighlightAnimationOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the hover animation option."
									},
									"children": [
										{
											"id": 16996,
											"name": "duration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the animation duration in milliseconds."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56191,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnimationOption.duration",
												"id": 16777
											}
										},
										{
											"id": 16997,
											"name": "easing",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the topWidth."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56195,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "AnimationEasing",
												"id": 1613
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnimationOption.easing",
												"id": 16778
											}
										},
										{
											"id": 16995,
											"name": "mode",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the mode."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56187,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "AnimationMode",
												"id": 1646
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnimationOption.mode",
												"id": 16776
											}
										},
										{
											"id": 16994,
											"name": "scale",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the scale."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56976,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 17419
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IHoverAnimationOption.scale",
												"id": 17005
											}
										},
										{
											"id": 16999,
											"name": "staggering",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets staggering."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56203,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnimationOption.staggering",
												"id": 16780
											}
										},
										{
											"id": 16998,
											"name": "startDelay",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets time in milliseconds before the animation should start."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56199,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnimationOption.startDelay",
												"id": 16779
											}
										},
										{
											"id": 16993,
											"name": "stay",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the duration bettween highlight and playdown animation in milliseconds."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56961,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17002,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17003,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 17000,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17001,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												16996,
												16997,
												16995,
												16994,
												16999,
												16998,
												16993
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17002,
												17000
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 56957,
											"character": 46
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IHoverAnimationOption",
											"id": 17004
										}
									]
								},
								{
									"id": 17004,
									"name": "IHoverAnimationOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the hover animation option."
									},
									"children": [
										{
											"id": 17007,
											"name": "duration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the animation duration in milliseconds."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56191,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnimationOption.duration",
												"id": 16777
											}
										},
										{
											"id": 17008,
											"name": "easing",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the topWidth."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56195,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "AnimationEasing",
												"id": 1613
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnimationOption.easing",
												"id": 16778
											}
										},
										{
											"id": 17006,
											"name": "mode",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the mode."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56187,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "AnimationMode",
												"id": 1646
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnimationOption.mode",
												"id": 16776
											}
										},
										{
											"id": 17005,
											"name": "scale",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the scale."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56976,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 17419
											}
										},
										{
											"id": 17010,
											"name": "staggering",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets staggering."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56203,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnimationOption.staggering",
												"id": 16780
											}
										},
										{
											"id": 17009,
											"name": "startDelay",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets time in milliseconds before the animation should start."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56199,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnimationOption.startDelay",
												"id": 16779
											}
										},
										{
											"id": 17013,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17014,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 17011,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17012,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17007,
												17008,
												17006,
												17005,
												17010,
												17009
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17013,
												17011
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 56972,
											"character": 42
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IAnimationOption",
											"id": 16775
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "IHighlightAnimationOption",
											"id": 16992
										}
									]
								},
								{
									"id": 18346,
									"name": "IImageOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the image overlay option."
									},
									"children": [
										{
											"id": 18349,
											"name": "angle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the rotate angle."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 60230,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 18358,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57442,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1822
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 17163
											}
										},
										{
											"id": 18348,
											"name": "height",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the height."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 60226,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 18353,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the label."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59877,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.label",
												"id": 18134
											}
										},
										{
											"id": 18351,
											"name": "offset",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the offset."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59869,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.offset",
												"id": 18132
											}
										},
										{
											"id": 18354,
											"name": "placement",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the placement."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59881,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "Placement",
												"id": 1873
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.placement",
												"id": 18135
											}
										},
										{
											"id": 18356,
											"name": "pointPath",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the pointPath."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59889,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.pointPath",
												"id": 18137
											}
										},
										{
											"id": 18355,
											"name": "position",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the placement."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59885,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "AnnotationPosition"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.position",
												"id": 18136
											}
										},
										{
											"id": 18359,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57446,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 17335
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 17164
											}
										},
										{
											"id": 18350,
											"name": "source",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the source url."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 60234,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 18352,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59873,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IOverlayStyleOption",
												"id": 18145
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.style",
												"id": 18133
											}
										},
										{
											"id": 18357,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57438,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 17162
											}
										},
										{
											"id": 18347,
											"name": "width",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the width."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 60222,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 18362,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 18363,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 18360,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 18361,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												18349,
												18358,
												18348,
												18353,
												18351,
												18354,
												18356,
												18355,
												18359,
												18350,
												18352,
												18357,
												18347
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												18362,
												18360
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 60218,
											"character": 40
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IAnnotationOverlayOption",
											"id": 18131
										}
									]
								},
								{
									"id": 17798,
									"name": "ILabelStyleOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the style option of the label."
									},
									"children": [
										{
											"id": 17800,
											"name": "color",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58247,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITextStyleOption.color",
												"id": 17400
											}
										},
										{
											"id": 17803,
											"name": "fontFamily",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the font family."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58259,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITextStyleOption.fontFamily",
												"id": 17403
											}
										},
										{
											"id": 17802,
											"name": "fontSize",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the font size."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58255,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITextStyleOption.fontSize",
												"id": 17402
											}
										},
										{
											"id": 17805,
											"name": "fontStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the font style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58267,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "FontStyle",
												"id": 1722
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITextStyleOption.fontStyle",
												"id": 17405
											}
										},
										{
											"id": 17804,
											"name": "fontWeight",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the font weight"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58263,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITextStyleOption.fontWeight",
												"id": 17404
											}
										},
										{
											"id": 17801,
											"name": "opacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the opacity value of the color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58251,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITextStyleOption.opacity",
												"id": 17401
											}
										},
										{
											"id": 17807,
											"name": "overflow",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text overflow."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58275,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "TextOverflow",
												"id": 1929
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITextStyleOption.overflow",
												"id": 17407
											}
										},
										{
											"id": 17799,
											"name": "padding",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the padding."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59056,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "IPaddingOption",
												"id": 17169
											}
										},
										{
											"id": 17806,
											"name": "textDecoration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text decoration."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58271,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextDecorationOption",
												"id": 17391
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITextStyleOption.textDecoration",
												"id": 17406
											}
										},
										{
											"id": 17810,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17811,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 17808,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17809,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17800,
												17803,
												17802,
												17805,
												17804,
												17801,
												17807,
												17799,
												17806
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17810,
												17808
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 59052,
											"character": 38
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "ITextStyleOption",
											"id": 17399
										}
									]
								},
								{
									"id": 16257,
									"name": "ILayoutEncodingOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the layout encoding option."
									},
									"children": [
										{
											"id": 16259,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field name."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56771,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IEncodingOption.field",
												"id": 16930
											}
										},
										{
											"id": 16260,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field label."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56775,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IEncodingOption.label",
												"id": 16931
											}
										},
										{
											"id": 16258,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 53764,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16263,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16264,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 16261,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16262,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												16259,
												16260,
												16258
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												16263,
												16261
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 53760,
											"character": 42
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IEncodingOption",
											"id": 16929
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "ITrellisLayoutEncodingOption",
											"id": 65147
										}
									]
								},
								{
									"id": 17015,
									"name": "ILegendGradientOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Legend gradient color option."
									},
									"children": [
										{
											"id": 17016,
											"name": "enabled",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether it is enabled."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56991,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 17018,
											"name": "max",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the max value."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56999,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17017,
											"name": "min",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the min value."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56995,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17020,
											"name": "palette",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the palette of gradient color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57007,
													"character": 15
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 17019,
											"name": "unit",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the unit."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57003,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17023,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17024,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 17021,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17022,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17016,
												17018,
												17017,
												17020,
												17019
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17023,
												17021
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 56987,
											"character": 42
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 17053,
									"name": "ILegendOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the legend option."
									},
									"children": [
										{
											"id": 17060,
											"name": "borderStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the border."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57117,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "ILineStyleOption",
												"id": 17121
											}
										},
										{
											"id": 17063,
											"name": "filteredOutStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the filtered out text style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57129,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 17399
											}
										},
										{
											"id": 17065,
											"name": "gradient",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the gradient of the legend."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57137,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "ILegendGradientOption",
												"id": 17015
											}
										},
										{
											"id": 17087,
											"name": "groupHAlign",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the hAlign of the legends list."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57250,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "HAlign",
												"id": 1760
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ILegendsOption.groupHAlign"
											}
										},
										{
											"id": 17091,
											"name": "groupOrientation",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the orientation of the legends in list."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57266,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"name": "Orientation",
												"id": 1800
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ILegendsOption.groupOrientation"
											}
										},
										{
											"id": 17085,
											"name": "groupPadding",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the padding for legends list."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57242,
													"character": 20
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "IPaddingOption",
														"id": 17169
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ILegendsOption.groupPadding"
											}
										},
										{
											"id": 17088,
											"name": "groupVAlign",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the vAlign of the legends list."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57254,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "VAlign",
												"id": 1944
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ILegendsOption.groupVAlign"
											}
										},
										{
											"id": 17076,
											"name": "hAlign",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the hAlign of the legend."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57182,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "HAlign",
												"id": 1760
											}
										},
										{
											"id": 17070,
											"name": "height",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the height."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57158,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 17419
											}
										},
										{
											"id": 17062,
											"name": "hoverStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the hover text style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57125,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 17399
											}
										},
										{
											"id": 17067,
											"name": "itemPadding",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the item padding;"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57145,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "IPaddingOption",
												"id": 17169
											}
										},
										{
											"id": 17074,
											"name": "items",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets options to the items in legend."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57174,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "ILegendItemOption"
												}
											}
										},
										{
											"id": 17089,
											"name": "left",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the left offset of the legends list."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57258,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ILegendsOption.left"
											}
										},
										{
											"id": 17080,
											"name": "margin",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the margin;"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57200,
													"character": 14
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "IMarginOption",
														"id": 17130
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										},
										{
											"id": 17072,
											"name": "maxHeight",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the max height."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57166,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 17419
											}
										},
										{
											"id": 17071,
											"name": "maxWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the max width."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57162,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 17419
											}
										},
										{
											"id": 17055,
											"name": "orientation",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the legend orientation."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57097,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "Orientation",
												"id": 1800
											}
										},
										{
											"id": 17066,
											"name": "padding",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the padding;"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57141,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "IPaddingOption",
												"id": 17169
											}
										},
										{
											"id": 17086,
											"name": "position",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the legend position."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57246,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "LegendPosition",
												"id": 1767
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ILegendsOption.position"
											}
										},
										{
											"id": 17064,
											"name": "ranges",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the ranges of the legend item value."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57133,
													"character": 14
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "ILegendRangeOption",
															"id": 17092
														}
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										},
										{
											"id": 17073,
											"name": "sortOrder",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the sort order of the items in the legend."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57170,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "SortOrder",
												"id": 1919
											}
										},
										{
											"id": 17058,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the style"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57109,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "ILegendStyleOption",
												"id": 17107
											}
										},
										{
											"id": 17075,
											"name": "template",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the template of the legend."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57178,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 17059,
											"name": "textStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57113,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 17399
											}
										},
										{
											"id": 17056,
											"name": "title",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the legend title."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57101,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 17057,
											"name": "titlePosition",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the legend title position."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57105,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "Position",
												"id": 1884
											}
										},
										{
											"id": 17061,
											"name": "titleStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets title style"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57121,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 17399
											}
										},
										{
											"id": 17090,
											"name": "top",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the top offset of the legends list."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57262,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ILegendsOption.top"
											}
										},
										{
											"id": 17054,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the legend type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57093,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "LegendType",
												"id": 1774
											}
										},
										{
											"id": 17077,
											"name": "vAlign",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the vAlign of the legend."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57186,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "VAlign",
												"id": 1944
											}
										},
										{
											"id": 17069,
											"name": "width",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the width."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57154,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 17419
											}
										},
										{
											"id": 17083,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17084,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 17081,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17082,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17060,
												17063,
												17065,
												17087,
												17091,
												17085,
												17088,
												17076,
												17070,
												17062,
												17067,
												17074,
												17089,
												17080,
												17072,
												17071,
												17055,
												17066,
												17086,
												17064,
												17073,
												17058,
												17075,
												17059,
												17056,
												17057,
												17061,
												17090,
												17054,
												17077,
												17069
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17083,
												17081
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 57089,
											"character": 34
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										},
										{
											"type": "reference",
											"name": "ILegendsOption"
										}
									]
								},
								{
									"id": 17092,
									"name": "ILegendRangeOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the legend range option."
									},
									"children": [
										{
											"id": 17093,
											"name": "title",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the title."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57222,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 17094,
											"name": "to",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the value that upper edge of the range."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57226,
													"character": 10
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17097,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17098,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 17095,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17096,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17093,
												17094
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17097,
												17095
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 57218,
											"character": 39
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 17107,
									"name": "ILegendStyleOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the legend style option."
									},
									"children": [
										{
											"id": 17109,
											"name": "backgroundColor",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the background color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58181,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 16723
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IStyleOption.backgroundColor",
												"id": 17379
											}
										},
										{
											"id": 17116,
											"name": "fill",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the fill."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58209,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 16723
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IStyleOption.fill",
												"id": 17386
											}
										},
										{
											"id": 17108,
											"name": "iconColor",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the color of symbol."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57280,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 16723
											}
										},
										{
											"id": 17113,
											"name": "innerStroke",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the inner stroke color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58197,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 16723
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IStyleOption.innerStroke",
												"id": 17383
											}
										},
										{
											"id": 17115,
											"name": "innerStrokeDasharray",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the inner stroke dash array."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58205,
													"character": 28
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IStyleOption.innerStrokeDasharray",
												"id": 17385
											}
										},
										{
											"id": 17114,
											"name": "innerStrokeWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the inner stroke width."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58201,
													"character": 24
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IStyleOption.innerStrokeWidth",
												"id": 17384
											}
										},
										{
											"id": 17110,
											"name": "stroke",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58185,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 16723
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IStyleOption.stroke",
												"id": 17380
											}
										},
										{
											"id": 17112,
											"name": "strokeDasharray",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke dash array."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58193,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IStyleOption.strokeDasharray",
												"id": 17382
											}
										},
										{
											"id": 17111,
											"name": "strokeWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke width."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58189,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IStyleOption.strokeWidth",
												"id": 17381
											}
										},
										{
											"id": 17119,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17120,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 17117,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17118,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17109,
												17116,
												17108,
												17113,
												17115,
												17114,
												17110,
												17112,
												17111
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17119,
												17117
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 57276,
											"character": 39
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IStyleOption",
											"id": 17378
										}
									]
								},
								{
									"id": 18469,
									"name": "ILineOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the line overlay option."
									},
									"children": [
										{
											"id": 18479,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57442,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1822
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 17163
											}
										},
										{
											"id": 18471,
											"name": "end",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the end."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 60492,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 18474,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the label."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59877,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.label",
												"id": 18134
											}
										},
										{
											"id": 18472,
											"name": "offset",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the offset."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59869,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.offset",
												"id": 18132
											}
										},
										{
											"id": 18475,
											"name": "placement",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the placement."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59881,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "Placement",
												"id": 1873
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.placement",
												"id": 18135
											}
										},
										{
											"id": 18477,
											"name": "pointPath",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the pointPath."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59889,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.pointPath",
												"id": 18137
											}
										},
										{
											"id": 18476,
											"name": "position",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the placement."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59885,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "AnnotationPosition"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.position",
												"id": 18136
											}
										},
										{
											"id": 18480,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57446,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 17335
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 17164
											}
										},
										{
											"id": 18470,
											"name": "start",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the start."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 60488,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 18473,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59873,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IOverlayStyleOption",
												"id": 18145
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.style",
												"id": 18133
											}
										},
										{
											"id": 18478,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57438,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 17162
											}
										},
										{
											"id": 18483,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 18484,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 18481,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 18482,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												18479,
												18471,
												18474,
												18472,
												18475,
												18477,
												18476,
												18480,
												18470,
												18473,
												18478
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												18483,
												18481
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 60484,
											"character": 39
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IAnnotationOverlayOption",
											"id": 18131
										}
									]
								},
								{
									"id": 17121,
									"name": "ILineStyleOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the line style option.",
										"text": "The example defines line style:\n\n     {\n         stroke: 'yellow',\n         strokeWidth: 2,\n         strokeDasharray: '3, 3'\n     }\n\n"
									},
									"children": [
										{
											"id": 17122,
											"name": "opacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke opacity."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57304,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17123,
											"name": "stroke",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57308,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 16723
											}
										},
										{
											"id": 17125,
											"name": "strokeDasharray",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke dash array."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57316,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 17124,
											"name": "strokeWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke width."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57312,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17128,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17129,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 17126,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17127,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17122,
												17123,
												17125,
												17124
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17128,
												17126
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 57300,
											"character": 37
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 16752,
									"name": "ILinearGradientOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the linear gradient option."
									},
									"children": [
										{
											"id": 16753,
											"name": "angle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the gradient lines' angle of direction."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56145,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 16754,
											"name": "colorStops",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the the color-stop list."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56149,
													"character": 18
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IColorStopOption",
													"id": 16732
												}
											}
										},
										{
											"id": 16755,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the color type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56086,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ColorOptionType",
												"id": 1665
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IColorOption.type",
												"id": 16724
											}
										},
										{
											"id": 16761,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16762,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 16759,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16760,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												16753,
												16754,
												16755
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												16761,
												16759
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 56141,
											"character": 42
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IColorOption",
											"id": 16723
										}
									]
								},
								{
									"id": 21558,
									"name": "ILinearTrendLineOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents linear trend line overlay option."
									},
									"children": [
										{
											"id": 21565,
											"name": "detailKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail key."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68410,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailKey",
												"id": 21497
											}
										},
										{
											"id": 21564,
											"name": "detailLevel",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail level."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68406,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "DetailLevel",
												"id": 46036
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailLevel",
												"id": 21496
											}
										},
										{
											"id": 21569,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57442,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1822
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 17163
											}
										},
										{
											"id": 21563,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68402,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.field",
												"id": 21495
											}
										},
										{
											"id": 21560,
											"name": "forecast",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the forecast."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68476,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "ITrendlineForecastOption",
												"id": 21485
											}
										},
										{
											"id": 21559,
											"name": "intercept",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the intercept."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68472,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 21562,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the label."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68398,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.label",
												"id": 21494
											}
										},
										{
											"id": 21570,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57446,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 17335
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 17164
											}
										},
										{
											"id": 21561,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the style"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68394,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 16897
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.style",
												"id": 21493
											}
										},
										{
											"id": 21566,
											"name": "text",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68414,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "ITrendlineTextOption",
												"id": 21687
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.text",
												"id": 21498
											}
										},
										{
											"id": 21568,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57438,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 17162
											}
										},
										{
											"id": 21573,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 21574,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 21571,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 21572,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												21565,
												21564,
												21569,
												21563,
												21560,
												21559,
												21562,
												21570,
												21561,
												21566,
												21568
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												21573,
												21571
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 68468,
											"character": 50
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "ITrendLineOverlayOption",
											"id": 21492
										}
									]
								},
								{
									"id": 21575,
									"name": "ILogarithmicTrendlineOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents logarithmic trend line overlay option."
									},
									"children": [
										{
											"id": 21581,
											"name": "detailKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail key."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68410,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailKey",
												"id": 21497
											}
										},
										{
											"id": 21580,
											"name": "detailLevel",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail level."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68406,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "DetailLevel",
												"id": 46036
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailLevel",
												"id": 21496
											}
										},
										{
											"id": 21585,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57442,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1822
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 17163
											}
										},
										{
											"id": 21579,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68402,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.field",
												"id": 21495
											}
										},
										{
											"id": 21576,
											"name": "forecast",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the forecast."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68486,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "ITrendlineForecastOption",
												"id": 21485
											}
										},
										{
											"id": 21578,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the label."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68398,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.label",
												"id": 21494
											}
										},
										{
											"id": 21586,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57446,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 17335
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 17164
											}
										},
										{
											"id": 21577,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the style"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68394,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 16897
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.style",
												"id": 21493
											}
										},
										{
											"id": 21582,
											"name": "text",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68414,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "ITrendlineTextOption",
												"id": 21687
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.text",
												"id": 21498
											}
										},
										{
											"id": 21584,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57438,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 17162
											}
										},
										{
											"id": 21589,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 21590,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 21587,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 21588,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												21581,
												21580,
												21585,
												21579,
												21576,
												21578,
												21586,
												21577,
												21582,
												21584
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												21589,
												21587
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 68482,
											"character": 55
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "ITrendLineOverlayOption",
											"id": 21492
										}
									]
								},
								{
									"id": 17130,
									"name": "IMarginOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the margin option."
									},
									"children": [
										{
											"id": 17134,
											"name": "bottom",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the bottom."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57343,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17131,
											"name": "left",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the left."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57331,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17133,
											"name": "right",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the right."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57339,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17132,
											"name": "top",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the top."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57335,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17137,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17138,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 17135,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17136,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17134,
												17131,
												17133,
												17132
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17137,
												17135
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 57327,
											"character": 34
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 21656,
									"name": "IMovingAnnualTotalTrendlineOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents MovingAnnualTotal trend line overlay option."
									},
									"children": [
										{
											"id": 21662,
											"name": "detailKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail key."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68410,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailKey",
												"id": 21497
											}
										},
										{
											"id": 21661,
											"name": "detailLevel",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail level."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68406,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "DetailLevel",
												"id": 46036
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailLevel",
												"id": 21496
											}
										},
										{
											"id": 21666,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57442,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1822
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 17163
											}
										},
										{
											"id": 21660,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68402,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.field",
												"id": 21495
											}
										},
										{
											"id": 21659,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the label."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68398,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.label",
												"id": 21494
											}
										},
										{
											"id": 21657,
											"name": "period",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the period."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68541,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 21667,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57446,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 17335
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 17164
											}
										},
										{
											"id": 21658,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the style"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68394,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 16897
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.style",
												"id": 21493
											}
										},
										{
											"id": 21663,
											"name": "text",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68414,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "ITrendlineTextOption",
												"id": 21687
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.text",
												"id": 21498
											}
										},
										{
											"id": 21665,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57438,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 17162
											}
										},
										{
											"id": 21670,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 21671,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 21668,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 21669,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												21662,
												21661,
												21666,
												21660,
												21659,
												21657,
												21667,
												21658,
												21663,
												21665
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												21670,
												21668
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 68537,
											"character": 61
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "ITrendLineOverlayOption",
											"id": 21492
										}
									]
								},
								{
									"id": 17156,
									"name": "IOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents overlay option."
									},
									"children": [
										{
											"id": 17159,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17160,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											]
										},
										{
											"id": 17157,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17158,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17159,
												17157
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 57415,
											"character": 28
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "IRangeFieldOption",
											"id": 16387
										},
										{
											"type": "reference",
											"name": "IValueEncodingOption",
											"id": 16404
										},
										{
											"type": "reference",
											"name": "IColorOption",
											"id": 16723
										},
										{
											"type": "reference",
											"name": "IColorStopOption",
											"id": 16732
										},
										{
											"type": "reference",
											"name": "IAnimationOption",
											"id": 16775
										},
										{
											"type": "reference",
											"name": "IAxisOption",
											"id": 16785
										},
										{
											"type": "reference",
											"name": "IAxisUnitOption",
											"id": 16837
										},
										{
											"type": "reference",
											"name": "IBorderRadiusOption",
											"id": 16844
										},
										{
											"type": "reference",
											"name": "IBorderRadiusValueOption",
											"id": 16851
										},
										{
											"type": "reference",
											"name": "IConfigOption",
											"id": 16860
										},
										{
											"type": "reference",
											"name": "IDataOption",
											"id": 16889
										},
										{
											"type": "reference",
											"name": "IDataPointStyleOption",
											"id": 16897
										},
										{
											"type": "reference",
											"name": "IDvOption",
											"id": 16920
										},
										{
											"type": "reference",
											"name": "IEncodingOption",
											"id": 16929
										},
										{
											"type": "reference",
											"name": "IFooterOption",
											"id": 16936
										},
										{
											"type": "reference",
											"name": "IGlobalLegendOption",
											"id": 16951
										},
										{
											"type": "reference",
											"name": "IHeaderOption",
											"id": 16977
										},
										{
											"type": "reference",
											"name": "ILegendGradientOption",
											"id": 17015
										},
										{
											"type": "reference",
											"name": "ILegendOption",
											"id": 17053
										},
										{
											"type": "reference",
											"name": "ILegendRangeOption",
											"id": 17092
										},
										{
											"type": "reference",
											"name": "ILineStyleOption",
											"id": 17121
										},
										{
											"type": "reference",
											"name": "IMarginOption",
											"id": 17130
										},
										{
											"type": "reference",
											"name": "IOverlayOption",
											"id": 17161
										},
										{
											"type": "reference",
											"name": "IPaddingOption",
											"id": 17169
										},
										{
											"type": "reference",
											"name": "IPlotAreaLayoutOption",
											"id": 17187
										},
										{
											"type": "reference",
											"name": "IPlotAreaOption",
											"id": 17194
										},
										{
											"type": "reference",
											"name": "IPlotConfigOption",
											"id": 17221
										},
										{
											"type": "reference",
											"name": "IPlotConfigTextOption",
											"id": 17268
										},
										{
											"type": "reference",
											"name": "IPlotConfigTooltipOption",
											"id": 17286
										},
										{
											"type": "reference",
											"name": "IPlotEncodingsOption",
											"id": 17297
										},
										{
											"type": "reference",
											"name": "IPlotOption",
											"id": 17311
										},
										{
											"type": "reference",
											"name": "IRuleActionPropertyOption",
											"id": 17321
										},
										{
											"type": "reference",
											"name": "IRuleActionOption",
											"id": 17328
										},
										{
											"type": "reference",
											"name": "IRuleOption",
											"id": 17335
										},
										{
											"type": "reference",
											"name": "IStrokeWidthOption",
											"id": 17369
										},
										{
											"type": "reference",
											"name": "IStyleOption",
											"id": 17378
										},
										{
											"type": "reference",
											"name": "ITextDecorationOption",
											"id": 17391
										},
										{
											"type": "reference",
											"name": "ITextStyleOption",
											"id": 17399
										},
										{
											"type": "reference",
											"name": "IUnitLabelOption",
											"id": 17412
										},
										{
											"type": "reference",
											"name": "IValueOption",
											"id": 17419
										},
										{
											"type": "reference",
											"name": "IValueScaleOption",
											"id": 17426
										},
										{
											"type": "reference",
											"name": "IBarGroupOption",
											"id": 17536
										},
										{
											"type": "reference",
											"name": "IBarOption",
											"id": 17545
										},
										{
											"type": "reference",
											"name": "IPlotBarOption",
											"id": 17556
										},
										{
											"type": "reference",
											"name": "ITextPlotConfigOption",
											"id": 17601
										},
										{
											"type": "reference",
											"name": "IBinOption",
											"id": 17891
										},
										{
											"type": "reference",
											"name": "IBinTransformOption",
											"id": 17897
										},
										{
											"type": "reference",
											"name": "IOverlayStyleOption",
											"id": 18145
										},
										{
											"type": "reference",
											"name": "IErrorValueOption",
											"id": 19737
										},
										{
											"type": "reference",
											"name": "ITrendlineForecastOption",
											"id": 21485
										},
										{
											"type": "reference",
											"name": "ITrendlineTextOption",
											"id": 21687
										},
										{
											"type": "reference",
											"name": "IStockFieldOption",
											"id": 57067
										},
										{
											"type": "reference",
											"name": "IMapConfigOption",
											"id": 62029
										},
										{
											"type": "reference",
											"name": "IPlotConfigTrellisOption",
											"id": 65136
										}
									]
								},
								{
									"id": 20421,
									"name": "IOverlayLabelOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents overlay option."
									},
									"children": [
										{
											"id": 20423,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 65506,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayLabelDisplay",
												"id": 1810
											}
										},
										{
											"id": 20424,
											"name": "position",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the position type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 65510,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayLabelPosition",
												"id": 1815
											}
										},
										{
											"id": 20422,
											"name": "text",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text of label."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 65502,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 20425,
											"name": "textStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text style of overlay datalabel."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 65514,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 17399
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												20423,
												20424,
												20422,
												20425
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 65498,
											"character": 40
										}
									]
								},
								{
									"id": 17161,
									"name": "IOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents overlay option."
									},
									"children": [
										{
											"id": 17163,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57442,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1822
											}
										},
										{
											"id": 17164,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57446,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 17335
												}
											}
										},
										{
											"id": 17162,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57438,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 17167,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17168,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 17165,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17166,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17163,
												17164,
												17162
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17167,
												17165
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 57434,
											"character": 35
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "IAnnotationOverlayOption",
											"id": 18131
										},
										{
											"type": "reference",
											"name": "IErrorBarOption",
											"id": 19716
										},
										{
											"type": "reference",
											"name": "IReferenceBandOverlayOption",
											"id": 20246
										},
										{
											"type": "reference",
											"name": "IReferenceLineOverlayOption",
											"id": 20429
										},
										{
											"type": "reference",
											"name": "ITrendLineOverlayOption",
											"id": 21492
										}
									]
								},
								{
									"id": 18145,
									"name": "IOverlayStyleOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the style option for overlay."
									},
									"children": [
										{
											"id": 18149,
											"name": "backgroundColor",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the background color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59915,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 16723
											}
										},
										{
											"id": 18148,
											"name": "fill",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the fill color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59911,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 16723
											}
										},
										{
											"id": 18146,
											"name": "opacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the opacity value of fill color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59903,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 18150,
											"name": "stroke",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59919,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 16723
											}
										},
										{
											"id": 18152,
											"name": "strokeDasharray",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke dash array."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59927,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 18147,
											"name": "strokeOpacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the opacity value of stroke color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59907,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 18151,
											"name": "strokeWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke width."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59923,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 18155,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 18156,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 18153,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 18154,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												18149,
												18148,
												18146,
												18150,
												18152,
												18147,
												18151
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												18155,
												18153
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 59899,
											"character": 40
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 17169,
									"name": "IPaddingOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the padding option."
									},
									"children": [
										{
											"id": 17173,
											"name": "bottom",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the bottom."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57473,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17170,
											"name": "left",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the left."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57461,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17172,
											"name": "right",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the right."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57469,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17171,
											"name": "top",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the top."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57465,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17176,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17177,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 17174,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17175,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17173,
												17170,
												17172,
												17171
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17176,
												17174
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 57457,
											"character": 35
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 17187,
									"name": "IPlotAreaLayoutOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the Layout of plot area columns and rows."
									},
									"children": [
										{
											"id": 17188,
											"name": "columnWidths",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the array of column widths."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57504,
													"character": 20
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IValueOption",
													"id": 17419
												}
											}
										},
										{
											"id": 17189,
											"name": "rowHeights",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the array of row heights."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57508,
													"character": 18
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IValueOption",
													"id": 17419
												}
											}
										},
										{
											"id": 17192,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17193,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 17190,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17191,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17188,
												17189
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17192,
												17190
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 57500,
											"character": 42
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 17194,
									"name": "IPlotAreaOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents plot area.",
										"text": "The plot area may contain several plots.\n"
									},
									"children": [
										{
											"id": 17197,
											"name": "axes",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the axis options."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57533,
													"character": 12
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IAxisOption",
													"id": 16785
												}
											}
										},
										{
											"id": 17201,
											"name": "backgroundColor",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the background color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57549,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 16723
											}
										},
										{
											"id": 17200,
											"name": "borderStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the border style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57545,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "ILineStyleOption",
												"id": 17121
											}
										},
										{
											"id": 17196,
											"name": "column",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the column index of plot area."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57529,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17198,
											"name": "legend",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the legend config of all legends in the plot area."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57537,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "IGlobalLegendOption",
												"id": 16951
											}
										},
										{
											"id": 17199,
											"name": "legends",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the legend config."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57541,
													"character": 15
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "ILegendOption",
													"id": 17053
												}
											}
										},
										{
											"id": 17202,
											"name": "padding",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the padding."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57553,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "IPaddingOption",
												"id": 17169
											}
										},
										{
											"id": 17195,
											"name": "row",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the row index of plot area."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57525,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17203,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the element style in the plot area."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57557,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IStyleOption",
												"id": 17378
											}
										},
										{
											"id": 17204,
											"name": "textStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the element text style in the plot area."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57561,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 17399
											}
										},
										{
											"id": 17207,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17208,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 17205,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17206,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										},
										{
											"id": 17209,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17210,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 17211,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17197,
												17201,
												17200,
												17196,
												17198,
												17199,
												17202,
												17195,
												17203,
												17204
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17207,
												17205,
												17209
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 57521,
											"character": 36
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										},
										{
											"type": "reference",
											"name": "IQueryInterface",
											"id": 1048
										}
									]
								},
								{
									"id": 17556,
									"name": "IPlotBarOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the plot bar option."
									},
									"children": [
										{
											"id": 17559,
											"name": "groups",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the group options."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58768,
													"character": 14
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IBarGroupOption",
													"id": 17536
												}
											}
										},
										{
											"id": 17558,
											"name": "overlap",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the amount of overlap between multiple bar plots.",
												"text": "The overlap can be specified as a percentage (0-1) where 0 means no overlap,\nand 1 means completely overlapped. This property also supports\na negative value (-1 to 0) which creates a gap between clustered bars.\n"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58763,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17557,
											"name": "width",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the width for bar clusters.",
												"text": "The width can be specified as percentage (0-1) of the available space.\nThe default value is 0.7 which means the bars take up 70% of the available\nspace and the other 30% is the gap. This property does not support negative values.\n"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58754,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17562,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17563,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 17560,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17561,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17559,
												17558,
												17557
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17562,
												17560
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 58746,
											"character": 35
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 17221,
									"name": "IPlotConfigOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the config option of the plot."
									},
									"children": [
										{
											"id": 17222,
											"name": "axisMode",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets a value indicating axis mode."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57593,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "AxisMode",
												"id": 1650
											}
										},
										{
											"id": 17253,
											"name": "bar",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the bar option;"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57719,
													"character": 11
												}
											],
											"type": {
												"type": "reference",
												"name": "IPlotBarOption",
												"id": 17556
											}
										},
										{
											"id": 17234,
											"name": "barLines",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the bar lines is shown."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57643,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 17225,
											"name": "clippingMode",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the clipping mode"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57605,
													"character": 20
												}
											],
											"type": {
												"type": "reference",
												"name": "ClippingMode",
												"id": 1661
											}
										},
										{
											"id": 17254,
											"name": "gradientFillDirection",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the radial gradient fill direction."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57723,
													"character": 29
												}
											],
											"type": {
												"type": "reference",
												"name": "GradientFillDirection",
												"id": 1743
											}
										},
										{
											"id": 17249,
											"name": "hAlign",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the horizontal alignment."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57703,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "HAlign",
												"id": 1760
											}
										},
										{
											"id": 17242,
											"name": "hoverAnimation",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the hover animation config."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57675,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "IHoverAnimationOption",
												"id": 17004
											}
										},
										{
											"id": 17237,
											"name": "hoverStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the hover style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57655,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 16897
											}
										},
										{
											"id": 17230,
											"name": "innerRadius",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the inner radius(for radial plots)."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57625,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17228,
											"name": "lineAspect",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the type of the line of the line and area chart."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57617,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "LineAspect",
												"id": 1779
											}
										},
										{
											"id": 17240,
											"name": "loadAnimation",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the loading animation config."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57667,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "IAnimationOption",
												"id": 16775
											}
										},
										{
											"id": 17229,
											"name": "offset",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the offset of data point."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57621,
													"character": 14
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										},
										{
											"id": 17243,
											"name": "overlays",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlays options"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57679,
													"character": 16
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IOverlayOption",
													"id": 17161
												}
											}
										},
										{
											"id": 17251,
											"name": "palette",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the palette."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57711,
													"character": 15
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IColorOption",
													"id": 16723
												}
											}
										},
										{
											"id": 17233,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57639,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 17335
												}
											}
										},
										{
											"id": 17245,
											"name": "selectedStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the selection style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57687,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ISelectionStyleOption",
												"id": 17812
											}
										},
										{
											"id": 17247,
											"name": "selectedTextStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the selection text style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57695,
													"character": 25
												}
											],
											"type": {
												"type": "reference",
												"name": "ISelectionTextStyleOption",
												"id": 17836
											}
										},
										{
											"id": 17252,
											"name": "seriesStyles",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the series styles."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57715,
													"character": 20
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "ISeriesStyleOption",
													"id": 17343
												}
											}
										},
										{
											"id": 17227,
											"name": "showNaNs",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets a value indicating how to show the NaN value."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57613,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "ShowNulls",
												"id": 1915
											}
										},
										{
											"id": 17226,
											"name": "showNulls",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets a value indicating how to show the null or empty value."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57609,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ShowNulls",
												"id": 1915
											}
										},
										{
											"id": 17232,
											"name": "startAngle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the starting angle of the plot."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57635,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17235,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the element style in the plot."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57647,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 16897
											}
										},
										{
											"id": 17224,
											"name": "swapAxes",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets a value indicating whether the axes is swapped."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57601,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 17231,
											"name": "sweep",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the sweep of plot for radial plots.",
												"text": "The valid value should be between 0 to 360.\n"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57631,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17223,
											"name": "symbols",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets a value indicating whether to show data point symbols."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57597,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 17238,
											"name": "text",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text config."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57659,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "IPlotConfigTextOption",
												"id": 17268
											}
										},
										{
											"id": 17244,
											"name": "textConfig",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the config for the text plot."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57683,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextPlotConfigOption",
												"id": 17601
											}
										},
										{
											"id": 17236,
											"name": "textStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets text style in the plot."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57651,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 17399
											}
										},
										{
											"id": 17239,
											"name": "tooltip",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the tooltip config."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57663,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "IPlotConfigTooltipOption",
												"id": 17286
											}
										},
										{
											"id": 17246,
											"name": "unselectedStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the unselection style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57691,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "ISelectionStyleOption",
												"id": 17812
											}
										},
										{
											"id": 17248,
											"name": "unselectedTextStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the unselection text style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57699,
													"character": 27
												}
											],
											"type": {
												"type": "reference",
												"name": "ISelectionTextStyleOption",
												"id": 17836
											}
										},
										{
											"id": 17241,
											"name": "updateAnimation",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the update animation config."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57671,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IAnimationOption",
												"id": 16775
											}
										},
										{
											"id": 17250,
											"name": "vAlign",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the vertical alignment."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57707,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "VAlign",
												"id": 1944
											}
										},
										{
											"id": 17257,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17258,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 17255,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17256,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										},
										{
											"id": 17259,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17260,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 17261,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17222,
												17253,
												17234,
												17225,
												17254,
												17249,
												17242,
												17237,
												17230,
												17228,
												17240,
												17229,
												17243,
												17251,
												17233,
												17245,
												17247,
												17252,
												17227,
												17226,
												17232,
												17235,
												17224,
												17231,
												17223,
												17238,
												17244,
												17236,
												17239,
												17246,
												17248,
												17241,
												17250
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17257,
												17255,
												17259
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 57589,
											"character": 38
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										},
										{
											"type": "reference",
											"name": "IQueryInterface",
											"id": 1048
										}
									]
								},
								{
									"id": 17268,
									"name": "IPlotConfigTextOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the config option for data label.",
										"text": "The option will be provided for the custom data label. It is only used after user set the text encoding.\nAbout the text encoding, please refer to [IContentEncodingOption]{@link dv.options.IContentEncodingOption}.\n\nThe example defines a custom data label in the plot option:\n\n     {\n         type: 'Bar',\n         encodings: {\n             values: [{\n                 field: 'Sales'\n             }],\n             category: {\n                 field: 'Country'\n             },\n             text: [{\n                 field: 'Downloads'\n             }, {\n                 field: 'Salesman'\n             }]\n         },\n         config: {\n             text: {\n                 scope: 'Default',\n                 template: '{xField.name} : {xField.value} \\n{valueField.name} : {valueField.value}'\n             }\n         }\n     }\n\nThe following token is supported within the template in the cartesian coordinate system:\n* {xField.name} - returns the field name in the x axis.\n* {xField.value} - returns the field value in the x axis.\n* {valueField.name} - returns the field name in the y axis.\n* {valueField.value} - returns the field value in the y axis.\n* {categoryField.name} - returns the category field name in the point.\n* {categoryField.value} - returns the category field value in the point.\n* {detailFields.name} - returns the detail field name in the point.\n* {detailFields.value} - returns the detail field value in the point.\n* {colorField.name} - returns the color field name in the point.\n* {colorField.value} - returns the color field value in the point.\n* {colorField.color} - returns the color symbol in the point.\n* {sizeField.name} - returns the size field name in the point.\n* {sizeField.value} - returns the size field value in the point.\n\nAlso, a field name can be supported within the template.\n* {Sales.name} - returns the Sales field name.\n* {Sales.value} or {Sales} - returns the Sales field value in the point.\n\nIf the field is aggregated, the aggregated value will be shown.\n"
									},
									"children": [
										{
											"id": 17279,
											"name": "borderStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the border."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57845,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "ILineStyleOption",
												"id": 17121
											}
										},
										{
											"id": 17275,
											"name": "connectingLine",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the connecting line option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57829,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "ILineStyleOption",
												"id": 17121
											}
										},
										{
											"id": 17276,
											"name": "linePosition",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the line position."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57833,
													"character": 20
												}
											],
											"type": {
												"type": "reference",
												"name": "LinePosition",
												"id": 1793
											}
										},
										{
											"id": 17273,
											"name": "offset",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text offset of the data label."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57821,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17274,
											"name": "overlappingLabels",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets how to handle overlapping labels."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57825,
													"character": 25
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlappingLabels",
												"id": 1804
											}
										},
										{
											"id": 17272,
											"name": "placement",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text placement of the data label."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57817,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "Placement",
												"id": 1873
											}
										},
										{
											"id": 17271,
											"name": "position",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text position of the data label."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57813,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "TextPosition",
												"id": 1933
											}
										},
										{
											"id": 17269,
											"name": "scope",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the scope definition of the template.",
												"text": "The default value is 'Default'\n"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57805,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 17277,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57837,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IStyleOption",
												"id": 17378
											}
										},
										{
											"id": 17270,
											"name": "template",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the data label template."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57809,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 17278,
											"name": "textStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets text style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57841,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 17399
											}
										},
										{
											"id": 17280,
											"name": "clone",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17281,
													"name": "clone",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a copy of this object."
													},
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57850,
													"character": 13
												}
											]
										},
										{
											"id": 17284,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17285,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 17282,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17283,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17279,
												17275,
												17276,
												17273,
												17274,
												17272,
												17271,
												17269,
												17277,
												17270,
												17278
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17280,
												17284,
												17282
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 57799,
											"character": 42
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 17286,
									"name": "IPlotConfigTooltipOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the config option for tooltip.",
										"text": "The option will be provided for the custom tooltips. It is only used after user set the tooltip encoding.\nAbout the tooltip encoding, please refer to [IContentEncodingOption]{@link dv.options.IContentEncodingOption}.\n\nThe example defines a custom tooltip in the plot option:\n\n     {\n         type: 'Bar',\n         encodings: {\n             values: [{\n                 field: 'Sales'\n             }],\n             category: {\n                 field: 'Country'\n             },\n             tooltip: [{\n                 field: 'Downloads'\n             }, {\n                 field: 'Salesman'\n             }]\n         },\n         config: {\n             tooltip: {\n                 scope: 'Default',\n                 template: '{xField.name} : {xField.value} \\n{valueField.name} : {valueField.value}'\n             }\n         }\n     }\n\nThe following token is supported within the template in the cartesian coordinate system:\n* {xField.name} - returns the field name in the x axis.\n* {xField.value} - returns the field value in the x axis.\n* {valueField.name} - returns the field name in the y axis.\n* {valueField.value} - returns the field value in the y axis.\n* {categoryField.name} - returns the category field name in the point.\n* {categoryField.value} - returns the category field value in the point.\n* {detailFields.name} - returns the detail field name in the point.\n* {detailFields.value} - returns the detail field value in the point.\n* {colorField.name} - returns the color field name in the point.\n* {colorField.value} - returns the color field value in the point.\n* {colorField.color} - returns the color symbol in the point.\n* {sizeField.name} - returns the size field name in the point.\n* {sizeField.value} - returns the size field value in the point.\n\nAlso, a field name can be supported within the template.\n* {Sales.name} - returns the Sales field name.\n* {Sales.value} or {Sales} - returns the Sales field value in the point.\n\nIf the field is aggregated, the aggregated value will be shown.\n"
									},
									"children": [
										{
											"id": 17287,
											"name": "scope",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the scope definition of the template. The default value is 'DataPoint'"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57914,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 17289,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57922,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IStyleOption",
												"id": 17378
											}
										},
										{
											"id": 17288,
											"name": "template",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the tooltip template."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57918,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 17290,
											"name": "textStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets text style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57926,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 17399
											}
										},
										{
											"id": 17291,
											"name": "clone",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17292,
													"name": "clone",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a copy of this object."
													},
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57931,
													"character": 13
												}
											]
										},
										{
											"id": 17295,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17296,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 17293,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17294,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17287,
												17289,
												17288,
												17290
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17291,
												17295,
												17293
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 57910,
											"character": 45
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 17297,
									"name": "IPlotEncodingsOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the encodings option of the plot.",
										"text": "The option provides how the data items is bound.\n\nThe example defines encodings in the plot option:\n\n     {\n         type: 'Bar',\n         encodings: {\n             values: [{\n                 field: 'Sales',\n                 aggregate: 'Sum'\n             }, {\n                 field: 'Downloads',\n                 aggregate: 'Sum'\n             }],\n             category: {\n                 field: 'Country'\n             },\n             details: [{\n                 field: 'Company',\n                 group: 'Cluster'\n             }]\n         }\n     }\n\n"
									},
									"children": [
										{
											"id": 17299,
											"name": "category",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the category encoding."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57975,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "ICategoryEncodingOption",
												"id": 16221
											}
										},
										{
											"id": 17301,
											"name": "color",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the color encoding."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57983,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorEncodingOption",
												"id": 16230
											}
										},
										{
											"id": 17300,
											"name": "details",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail encodings."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57979,
													"character": 15
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IDetailEncodingOption",
													"id": 16247
												}
											}
										},
										{
											"id": 17306,
											"name": "layout",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the layout encodings."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58003,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "ILayoutEncodingOption",
												"id": 16257
											}
										},
										{
											"id": 17303,
											"name": "shape",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the shape encoding."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57991,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IShapeEncodingOption",
												"id": 16265
											}
										},
										{
											"id": 17302,
											"name": "size",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the size encoding."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57987,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "ISizeEncodingOption",
												"id": 16274
											}
										},
										{
											"id": 17304,
											"name": "text",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text encodings."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57995,
													"character": 12
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IContentEncodingOption",
													"id": 16239
												}
											}
										},
										{
											"id": 17305,
											"name": "tooltip",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the tooltip encodings."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57999,
													"character": 15
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IContentEncodingOption",
													"id": 16239
												}
											}
										},
										{
											"id": 17298,
											"name": "values",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the value encodings."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57971,
													"character": 14
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IValueEncodingOption",
													"id": 16404
												}
											}
										},
										{
											"id": 17309,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17310,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 17307,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17308,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17299,
												17301,
												17300,
												17306,
												17303,
												17302,
												17304,
												17305,
												17298
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17309,
												17307
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 57967,
											"character": 41
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 17311,
									"name": "IPlotOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents plot option."
									},
									"children": [
										{
											"id": 17315,
											"name": "config",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the plot config."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58030,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "IPlotConfigOption",
												"id": 17221
											}
										},
										{
											"id": 17316,
											"name": "data",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the plot data source name."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58034,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 17314,
											"name": "encodings",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the plot encodings."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58026,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "IPlotEncodingsOption",
												"id": 17297
											}
										},
										{
											"id": 17312,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the plot name."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58018,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 17313,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the plot type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58022,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 17319,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17320,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 17317,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17318,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17315,
												17316,
												17314,
												17312,
												17313
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17319,
												17317
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 58014,
											"character": 32
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 21507,
									"name": "IPolynomialTrendLineOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents polynomial trend line overlay option."
									},
									"children": [
										{
											"id": 21515,
											"name": "detailKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail key."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68410,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailKey",
												"id": 21497
											}
										},
										{
											"id": 21514,
											"name": "detailLevel",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail level."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68406,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "DetailLevel",
												"id": 46036
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailLevel",
												"id": 21496
											}
										},
										{
											"id": 21519,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57442,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1822
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 17163
											}
										},
										{
											"id": 21513,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68402,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.field",
												"id": 21495
											}
										},
										{
											"id": 21510,
											"name": "forecast",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the forecast."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68438,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "ITrendlineForecastOption",
												"id": 21485
											}
										},
										{
											"id": 21509,
											"name": "intercept",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the intercept."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68434,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 21512,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the label."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68398,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.label",
												"id": 21494
											}
										},
										{
											"id": 21508,
											"name": "order",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the order."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68430,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 21520,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57446,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 17335
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 17164
											}
										},
										{
											"id": 21511,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the style"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68394,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 16897
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.style",
												"id": 21493
											}
										},
										{
											"id": 21516,
											"name": "text",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68414,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "ITrendlineTextOption",
												"id": 21687
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.text",
												"id": 21498
											}
										},
										{
											"id": 21518,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57438,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 17162
											}
										},
										{
											"id": 21523,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 21524,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 21521,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 21522,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												21515,
												21514,
												21519,
												21513,
												21510,
												21509,
												21512,
												21508,
												21520,
												21511,
												21516,
												21518
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												21523,
												21521
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 68426,
											"character": 54
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "ITrendLineOverlayOption",
											"id": 21492
										}
									]
								},
								{
									"id": 21542,
									"name": "IPowerTrendLineOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents power trend line overlay option."
									},
									"children": [
										{
											"id": 21548,
											"name": "detailKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail key."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68410,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailKey",
												"id": 21497
											}
										},
										{
											"id": 21547,
											"name": "detailLevel",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail level."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68406,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "DetailLevel",
												"id": 46036
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailLevel",
												"id": 21496
											}
										},
										{
											"id": 21552,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57442,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1822
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 17163
											}
										},
										{
											"id": 21546,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68402,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.field",
												"id": 21495
											}
										},
										{
											"id": 21543,
											"name": "forecast",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the forecast."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68462,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "ITrendlineForecastOption",
												"id": 21485
											}
										},
										{
											"id": 21545,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the label."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68398,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.label",
												"id": 21494
											}
										},
										{
											"id": 21553,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57446,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 17335
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 17164
											}
										},
										{
											"id": 21544,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the style"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68394,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 16897
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.style",
												"id": 21493
											}
										},
										{
											"id": 21549,
											"name": "text",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68414,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "ITrendlineTextOption",
												"id": 21687
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.text",
												"id": 21498
											}
										},
										{
											"id": 21551,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57438,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 17162
											}
										},
										{
											"id": 21556,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 21557,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 21554,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 21555,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												21548,
												21547,
												21552,
												21546,
												21543,
												21545,
												21553,
												21544,
												21549,
												21551
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												21556,
												21554
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 68458,
											"character": 49
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "ITrendLineOverlayOption",
											"id": 21492
										}
									]
								},
								{
									"id": 16763,
									"name": "IRadialGradientOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the radial gradient option."
									},
									"children": [
										{
											"id": 16766,
											"name": "colorStops",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the the color-stop list."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56172,
													"character": 18
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IColorStopOption",
													"id": 16732
												}
											}
										},
										{
											"id": 16764,
											"name": "extentKeyword",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the keyword describing how big the ending shape must be."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56164,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "GradientExtentKeyword",
												"id": 1738
											}
										},
										{
											"id": 16765,
											"name": "position",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the position of the gradient."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56168,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "GradientPosition",
												"id": 1747
											}
										},
										{
											"id": 16767,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the color type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56086,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ColorOptionType",
												"id": 1665
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IColorOption.type",
												"id": 16724
											}
										},
										{
											"id": 16773,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16774,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 16771,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16772,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												16766,
												16764,
												16765,
												16767
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												16773,
												16771
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 56160,
											"character": 42
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IColorOption",
											"id": 16723
										}
									]
								},
								{
									"id": 16387,
									"name": "IRangeFieldOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the range field option."
									},
									"children": [
										{
											"id": 16388,
											"name": "lower",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the lower field name."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 54126,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16389,
											"name": "upper",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the upper field name."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 54130,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16392,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16393,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 16390,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16391,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												16388,
												16389
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												16392,
												16390
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 54122,
											"character": 38
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 16394,
									"name": "IRangeFieldValueEncodingOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the range value encoding option."
									},
									"children": [
										{
											"id": 16397,
											"name": "aggregate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the aggregate option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 54153,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "Aggregate",
												"id": 1600
											}
										},
										{
											"id": 16398,
											"name": "excludeNulls",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the null values is shown."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 54157,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 16395,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field name."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 54145,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IRangeFieldOption",
												"id": 16387
											}
										},
										{
											"id": 16396,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field label."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 54149,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IRangeFieldOption",
												"id": 16387
											}
										},
										{
											"id": 16399,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets option type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 54172,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IValueEncodingOption.type",
												"id": 16405
											}
										},
										{
											"id": 16402,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16403,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 16400,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16401,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												16397,
												16398,
												16395,
												16396,
												16399
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												16402,
												16400
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 54141,
											"character": 51
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IValueEncodingOption",
											"id": 16404
										}
									]
								},
								{
									"id": 18689,
									"name": "IRectangleOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the rectangle overlay option."
									},
									"children": [
										{
											"id": 18692,
											"name": "angle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the rotate angle."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 60895,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 18700,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57442,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1822
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 17163
											}
										},
										{
											"id": 18691,
											"name": "height",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the height."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 60891,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 18695,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the label."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59877,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.label",
												"id": 18134
											}
										},
										{
											"id": 18693,
											"name": "offset",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the offset."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59869,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.offset",
												"id": 18132
											}
										},
										{
											"id": 18696,
											"name": "placement",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the placement."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59881,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "Placement",
												"id": 1873
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.placement",
												"id": 18135
											}
										},
										{
											"id": 18698,
											"name": "pointPath",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the pointPath."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59889,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.pointPath",
												"id": 18137
											}
										},
										{
											"id": 18697,
											"name": "position",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the placement."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59885,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "AnnotationPosition"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.position",
												"id": 18136
											}
										},
										{
											"id": 18701,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57446,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 17335
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 17164
											}
										},
										{
											"id": 18694,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59873,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IOverlayStyleOption",
												"id": 18145
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.style",
												"id": 18133
											}
										},
										{
											"id": 18699,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57438,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 17162
											}
										},
										{
											"id": 18690,
											"name": "width",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the width."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 60887,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 18704,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 18705,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 18702,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 18703,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												18692,
												18700,
												18691,
												18695,
												18693,
												18696,
												18698,
												18697,
												18701,
												18694,
												18699,
												18690
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												18704,
												18702
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 60883,
											"character": 44
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IAnnotationOverlayOption",
											"id": 18131
										}
									]
								},
								{
									"id": 20246,
									"name": "IReferenceBandOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents overlay option."
									},
									"children": [
										{
											"id": 20247,
											"name": "axis",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the axis"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 64964,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "AxisType",
												"id": 1658
											}
										},
										{
											"id": 20252,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57442,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1822
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 17163
											}
										},
										{
											"id": 20250,
											"name": "end",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the end"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 64976,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 20253,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57446,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 17335
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 17164
											}
										},
										{
											"id": 20249,
											"name": "start",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the start"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 64972,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 20248,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the style"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 64968,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "_DataPointStyleOption"
											}
										},
										{
											"id": 20251,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57438,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 17162
											}
										},
										{
											"id": 20256,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 20257,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 20254,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 20255,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												20247,
												20252,
												20250,
												20253,
												20249,
												20248,
												20251
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												20256,
												20254
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 64960,
											"character": 48
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOverlayOption",
											"id": 17161
										}
									]
								},
								{
									"id": 20426,
									"name": "IReferenceLineOverlayArgumentsOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the arguments in the reference line overlay option."
									},
									"children": [
										{
											"id": 20427,
											"name": "k",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "The percentile value in the range 0 to 1."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 65529,
													"character": 9
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 20428,
											"name": "percentileType",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "The percentile type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 65533,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "PercentileType",
												"id": 1870
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												20427,
												20428
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 65525,
											"character": 57
										}
									]
								},
								{
									"id": 20429,
									"name": "IReferenceLineOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents overlay option."
									},
									"children": [
										{
											"id": 20432,
											"name": "aggregate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the aggregate."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 65556,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ReferenceLineAggregate",
												"id": 1890
											}
										},
										{
											"id": 20438,
											"name": "arguments",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the arguments."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 65580,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "IReferenceLineOverlayArgumentsOption",
												"id": 20426
											}
										},
										{
											"id": 20430,
											"name": "axis",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the axis"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 65548,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "AxisType",
												"id": 1658
											}
										},
										{
											"id": 20437,
											"name": "detailKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail key."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 65576,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 20435,
											"name": "detailLevel",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail level."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 65568,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "DetailLevel",
												"id": 46036
											}
										},
										{
											"id": 20440,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57442,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1822
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 17163
											}
										},
										{
											"id": 20436,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 65572,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 20434,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the label."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 65564,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IOverlayLabelOption",
												"id": 20421
											}
										},
										{
											"id": 20441,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57446,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 17335
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 17164
											}
										},
										{
											"id": 20431,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the style"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 65552,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "_DataPointStyleOption"
											}
										},
										{
											"id": 20439,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57438,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 17162
											}
										},
										{
											"id": 20433,
											"name": "value",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the value"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 65560,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 20444,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 20445,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 20442,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 20443,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												20432,
												20438,
												20430,
												20437,
												20435,
												20440,
												20436,
												20434,
												20441,
												20431,
												20439,
												20433
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												20444,
												20442
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 65544,
											"character": 48
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOverlayOption",
											"id": 17161
										}
									]
								},
								{
									"id": 17328,
									"name": "IRuleActionOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the action in the conditional formatting rule option."
									},
									"children": [
										{
											"id": 17330,
											"name": "properties",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the collection of property name/value pairs.",
												"text": "The property value will be changed on the same target if the condition is true.\n"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58074,
													"character": 18
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleActionPropertyOption",
													"id": 17321
												}
											}
										},
										{
											"id": 17329,
											"name": "targetElement",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the target element."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58068,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 17333,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17334,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 17331,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17332,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17330,
												17329
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17333,
												17331
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 58064,
											"character": 38
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 17321,
									"name": "IRuleActionPropertyOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the property definition in the action of the conditional formatting rule."
									},
									"children": [
										{
											"id": 17322,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the property name."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58049,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 17323,
											"name": "value",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the property value will be set if the condition is true."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58053,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 17326,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17327,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 17324,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17325,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17322,
												17323
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17326,
												17324
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 58045,
											"character": 46
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 17335,
									"name": "IRuleOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the conditional formatting rule to change the property value if the condition is true.",
										"text": "Model example to define a rule to change the data point style based on the value:\n\n     {\n         condition: 'current.value > 1000',\n         type:'DataPoint',\n         actions:[{\n             targetElement:'DataPoint',\n             properties:[{\n                 name: 'color',\n                 value: 'red'\n             }]\n         }]\n     }\n"
									},
									"children": [
										{
											"id": 17338,
											"name": "actions",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the rule action list."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58115,
													"character": 15
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleActionOption",
													"id": 17328
												}
											}
										},
										{
											"id": 17336,
											"name": "condition",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets condition expression."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58103,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 17337,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the current instance type in the condition expression.",
												"text": "The value should be following:\n+ 'DataPoint' - The current instance should be point.\n+ 'Group' - The current instance should be series.\n"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58111,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 17341,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17342,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 17339,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17340,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17338,
												17336,
												17337
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17341,
												17339
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 58099,
											"character": 32
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 17812,
									"name": "ISelectionStyleOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the selection style option."
									},
									"children": [
										{
											"id": 17813,
											"name": "adorners",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the adorners are shown."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59071,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 17817,
											"name": "backgroundColor",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the background color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56643,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 16723
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.backgroundColor",
												"id": 16901
											}
										},
										{
											"id": 17829,
											"name": "borderRadius",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the border radius."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56691,
													"character": 20
												}
											],
											"type": {
												"type": "reference",
												"name": "IBorderRadiusOption",
												"id": 16844
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.borderRadius",
												"id": 16913
											}
										},
										{
											"id": 17816,
											"name": "fill",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the fill color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56639,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 16723
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.fill",
												"id": 16900
											}
										},
										{
											"id": 17814,
											"name": "opacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the opacity value of fill color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56631,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.opacity",
												"id": 16898
											}
										},
										{
											"id": 17818,
											"name": "stroke",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56647,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 16723
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.stroke",
												"id": 16902
											}
										},
										{
											"id": 17820,
											"name": "strokeDasharray",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke dash array."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56655,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.strokeDasharray",
												"id": 16904
											}
										},
										{
											"id": 17815,
											"name": "strokeOpacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the opacity value of stroke color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56635,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.strokeOpacity",
												"id": 16899
											}
										},
										{
											"id": 17819,
											"name": "strokeWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke width."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56651,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "IStrokeWidthOption",
												"id": 17369
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.strokeWidth",
												"id": 16903
											}
										},
										{
											"id": 17824,
											"name": "symbolFill",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the background color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56671,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 16723
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.symbolFill",
												"id": 16908
											}
										},
										{
											"id": 17822,
											"name": "symbolOpacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the opacity value of symbol fill color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56663,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.symbolOpacity",
												"id": 16906
											}
										},
										{
											"id": 17821,
											"name": "symbolShape",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the shape of symbol."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56659,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.symbolShape",
												"id": 16905
											}
										},
										{
											"id": 17828,
											"name": "symbolSize",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke size."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56687,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.symbolSize",
												"id": 16912
											}
										},
										{
											"id": 17825,
											"name": "symbolStroke",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56675,
													"character": 20
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 16723
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.symbolStroke",
												"id": 16909
											}
										},
										{
											"id": 17827,
											"name": "symbolStrokeDasharray",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke dash array."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56683,
													"character": 29
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.symbolStrokeDasharray",
												"id": 16911
											}
										},
										{
											"id": 17823,
											"name": "symbolStrokeOpacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the opacity value of symbol stroke color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56667,
													"character": 27
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.symbolStrokeOpacity",
												"id": 16907
											}
										},
										{
											"id": 17826,
											"name": "symbolStrokeWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke width."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56679,
													"character": 25
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.symbolStrokeWidth",
												"id": 16910
											}
										},
										{
											"id": 17830,
											"name": "clone",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17831,
													"name": "clone",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a copy of this object."
													},
													"type": {
														"type": "intrinsic",
														"name": "object"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IDataPointStyleOption.clone",
														"id": 16914
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56696,
													"character": 13
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.clone",
												"id": 16914
											}
										},
										{
											"id": 17834,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17835,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 17832,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17833,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17813,
												17817,
												17829,
												17816,
												17814,
												17818,
												17820,
												17815,
												17819,
												17824,
												17822,
												17821,
												17828,
												17825,
												17827,
												17823,
												17826
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17830,
												17834,
												17832
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 59067,
											"character": 42
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IDataPointStyleOption",
											"id": 16897
										}
									]
								},
								{
									"id": 17836,
									"name": "ISelectionTextStyleOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the selection style option."
									},
									"children": [
										{
											"id": 17837,
											"name": "color",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58247,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITextStyleOption.color",
												"id": 17400
											}
										},
										{
											"id": 17840,
											"name": "fontFamily",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the font family."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58259,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITextStyleOption.fontFamily",
												"id": 17403
											}
										},
										{
											"id": 17839,
											"name": "fontSize",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the font size."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58255,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITextStyleOption.fontSize",
												"id": 17402
											}
										},
										{
											"id": 17842,
											"name": "fontStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the font style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58267,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "FontStyle",
												"id": 1722
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITextStyleOption.fontStyle",
												"id": 17405
											}
										},
										{
											"id": 17841,
											"name": "fontWeight",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the font weight"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58263,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITextStyleOption.fontWeight",
												"id": 17404
											}
										},
										{
											"id": 17838,
											"name": "opacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the opacity value of the color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58251,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITextStyleOption.opacity",
												"id": 17401
											}
										},
										{
											"id": 17844,
											"name": "overflow",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text overflow."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58275,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "TextOverflow",
												"id": 1929
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITextStyleOption.overflow",
												"id": 17407
											}
										},
										{
											"id": 17843,
											"name": "textDecoration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text decoration."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58271,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextDecorationOption",
												"id": 17391
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITextStyleOption.textDecoration",
												"id": 17406
											}
										},
										{
											"id": 17847,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17848,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 17845,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17846,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17837,
												17840,
												17839,
												17842,
												17841,
												17838,
												17844,
												17843
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17847,
												17845
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 59082,
											"character": 46
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "ITextStyleOption",
											"id": 17399
										}
									]
								},
								{
									"id": 17343,
									"name": "ISeriesStyleOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents series style option."
									},
									"children": [
										{
											"id": 17350,
											"name": "backgroundColor",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the background color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56643,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 16723
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.backgroundColor",
												"id": 16901
											}
										},
										{
											"id": 17362,
											"name": "borderRadius",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the border radius."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56691,
													"character": 20
												}
											],
											"type": {
												"type": "reference",
												"name": "IBorderRadiusOption",
												"id": 16844
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.borderRadius",
												"id": 16913
											}
										},
										{
											"id": 17349,
											"name": "fill",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the fill color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56639,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 16723
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.fill",
												"id": 16900
											}
										},
										{
											"id": 17345,
											"name": "key",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the key."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58134,
													"character": 11
												}
											],
											"type": {
												"type": "reference",
												"name": "DataValueType",
												"id": 27533
											}
										},
										{
											"id": 17347,
											"name": "opacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the opacity value of fill color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56631,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.opacity",
												"id": 16898
											}
										},
										{
											"id": 17351,
											"name": "stroke",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56647,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 16723
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.stroke",
												"id": 16902
											}
										},
										{
											"id": 17353,
											"name": "strokeDasharray",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke dash array."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56655,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.strokeDasharray",
												"id": 16904
											}
										},
										{
											"id": 17348,
											"name": "strokeOpacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the opacity value of stroke color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56635,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.strokeOpacity",
												"id": 16899
											}
										},
										{
											"id": 17352,
											"name": "strokeWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke width."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56651,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "IStrokeWidthOption",
												"id": 17369
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.strokeWidth",
												"id": 16903
											}
										},
										{
											"id": 17357,
											"name": "symbolFill",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the background color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56671,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 16723
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.symbolFill",
												"id": 16908
											}
										},
										{
											"id": 17355,
											"name": "symbolOpacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the opacity value of symbol fill color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56663,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.symbolOpacity",
												"id": 16906
											}
										},
										{
											"id": 17354,
											"name": "symbolShape",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the shape of symbol."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56659,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.symbolShape",
												"id": 16905
											}
										},
										{
											"id": 17361,
											"name": "symbolSize",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke size."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56687,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.symbolSize",
												"id": 16912
											}
										},
										{
											"id": 17358,
											"name": "symbolStroke",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56675,
													"character": 20
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 16723
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.symbolStroke",
												"id": 16909
											}
										},
										{
											"id": 17360,
											"name": "symbolStrokeDasharray",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke dash array."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56683,
													"character": 29
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.symbolStrokeDasharray",
												"id": 16911
											}
										},
										{
											"id": 17356,
											"name": "symbolStrokeOpacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the opacity value of symbol stroke color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56667,
													"character": 27
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.symbolStrokeOpacity",
												"id": 16907
											}
										},
										{
											"id": 17359,
											"name": "symbolStrokeWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke width."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56679,
													"character": 25
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.symbolStrokeWidth",
												"id": 16910
											}
										},
										{
											"id": 17344,
											"name": "valueField",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the value field name."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58130,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 17363,
											"name": "clone",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17364,
													"name": "clone",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a copy of this object."
													},
													"type": {
														"type": "intrinsic",
														"name": "object"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IDataPointStyleOption.clone",
														"id": 16914
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56696,
													"character": 13
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.clone",
												"id": 16914
											}
										},
										{
											"id": 17367,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17368,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 17365,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17366,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17350,
												17362,
												17349,
												17345,
												17347,
												17351,
												17353,
												17348,
												17352,
												17357,
												17355,
												17354,
												17361,
												17358,
												17360,
												17356,
												17359,
												17344
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17363,
												17367,
												17365
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 58126,
											"character": 39
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IDataPointStyleOption",
											"id": 16897
										}
									]
								},
								{
									"id": 16265,
									"name": "IShapeEncodingOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the shape encoding option."
									},
									"children": [
										{
											"id": 16266,
											"name": "aggregate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the aggregate option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 53780,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "Aggregate",
												"id": 1600
											}
										},
										{
											"id": 16268,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field name."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56771,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IEncodingOption.field",
												"id": 16930
											}
										},
										{
											"id": 16269,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field label."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56775,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IEncodingOption.label",
												"id": 16931
											}
										},
										{
											"id": 16267,
											"name": "sort",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the sort option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 53784,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "OrderType",
												"id": 1796
											}
										},
										{
											"id": 16272,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16273,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 16270,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16271,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												16266,
												16268,
												16269,
												16267
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												16272,
												16270
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 53776,
											"character": 41
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IEncodingOption",
											"id": 16929
										}
									]
								},
								{
									"id": 21608,
									"name": "ISimpleMovingAverageTrendlineOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents SMA trend line overlay option."
									},
									"children": [
										{
											"id": 21614,
											"name": "detailKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail key."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68410,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailKey",
												"id": 21497
											}
										},
										{
											"id": 21613,
											"name": "detailLevel",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail level."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68406,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "DetailLevel",
												"id": 46036
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailLevel",
												"id": 21496
											}
										},
										{
											"id": 21618,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57442,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1822
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 17163
											}
										},
										{
											"id": 21612,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68402,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.field",
												"id": 21495
											}
										},
										{
											"id": 21611,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the label."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68398,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.label",
												"id": 21494
											}
										},
										{
											"id": 21609,
											"name": "period",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the period."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68511,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 21619,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57446,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 17335
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 17164
											}
										},
										{
											"id": 21610,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the style"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68394,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 16897
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.style",
												"id": 21493
											}
										},
										{
											"id": 21615,
											"name": "text",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68414,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "ITrendlineTextOption",
												"id": 21687
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.text",
												"id": 21498
											}
										},
										{
											"id": 21617,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57438,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 17162
											}
										},
										{
											"id": 21622,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 21623,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 21620,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 21621,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												21614,
												21613,
												21618,
												21612,
												21611,
												21609,
												21619,
												21610,
												21615,
												21617
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												21622,
												21620
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 68507,
											"character": 63
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "ITrendLineOverlayOption",
											"id": 21492
										}
									]
								},
								{
									"id": 16274,
									"name": "ISizeEncodingOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the size encoding option."
									},
									"children": [
										{
											"id": 16275,
											"name": "aggregate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the aggregate option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 53800,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "Aggregate",
												"id": 1600
											}
										},
										{
											"id": 16277,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field name."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56771,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IEncodingOption.field",
												"id": 16930
											}
										},
										{
											"id": 16278,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field label."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56775,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IEncodingOption.label",
												"id": 16931
											}
										},
										{
											"id": 16276,
											"name": "sort",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the sort option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 53804,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "OrderType",
												"id": 1796
											}
										},
										{
											"id": 16281,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16282,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 16279,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16280,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												16275,
												16277,
												16278,
												16276
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												16281,
												16279
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 53796,
											"character": 40
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IEncodingOption",
											"id": 16929
										}
									]
								},
								{
									"id": 16283,
									"name": "ISortEncodingOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents sort encoding option."
									},
									"children": [
										{
											"id": 16285,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field name."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56771,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IEncodingOption.field",
												"id": 16930
											}
										},
										{
											"id": 16286,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field label."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56775,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IEncodingOption.label",
												"id": 16931
											}
										},
										{
											"id": 16284,
											"name": "order",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the order option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 53819,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "OrderType",
												"id": 1796
											}
										},
										{
											"id": 16289,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16290,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 16287,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16288,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												16285,
												16286,
												16284
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												16289,
												16287
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 53815,
											"character": 40
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IEncodingOption",
											"id": 16929
										}
									]
								},
								{
									"id": 17369,
									"name": "IStrokeWidthOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the stroke width option."
									},
									"children": [
										{
											"id": 17373,
											"name": "bottom",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the bottom stroke width."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58166,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17370,
											"name": "left",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the left stroke width."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58154,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17372,
											"name": "right",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the right stroke width."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58162,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17371,
											"name": "top",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the top stroke width."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58158,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17376,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17377,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 17374,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17375,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17373,
												17370,
												17372,
												17371
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17376,
												17374
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 58150,
											"character": 39
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 17378,
									"name": "IStyleOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the style option."
									},
									"children": [
										{
											"id": 17379,
											"name": "backgroundColor",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the background color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58181,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 16723
											}
										},
										{
											"id": 17386,
											"name": "fill",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the fill."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58209,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 16723
											}
										},
										{
											"id": 17383,
											"name": "innerStroke",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the inner stroke color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58197,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 16723
											}
										},
										{
											"id": 17385,
											"name": "innerStrokeDasharray",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the inner stroke dash array."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58205,
													"character": 28
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 17384,
											"name": "innerStrokeWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the inner stroke width."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58201,
													"character": 24
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17380,
											"name": "stroke",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58185,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 16723
											}
										},
										{
											"id": 17382,
											"name": "strokeDasharray",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke dash array."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58193,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 17381,
											"name": "strokeWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke width."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58189,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17389,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17390,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 17387,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17388,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17379,
												17386,
												17383,
												17385,
												17384,
												17380,
												17382,
												17381
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17389,
												17387
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 58177,
											"character": 33
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "ILegendStyleOption",
											"id": 17107
										}
									]
								},
								{
									"id": 17391,
									"name": "ITextDecorationOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the text-decoration option."
									},
									"children": [
										{
											"id": 17393,
											"name": "lineThrough",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the linethrough."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58228,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 17392,
											"name": "overline",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overline."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58224,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 17394,
											"name": "underline",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the underline."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58232,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 17397,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17398,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 17395,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17396,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17393,
												17392,
												17394
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17397,
												17395
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 58220,
											"character": 42
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 18972,
									"name": "ITextOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the text overlay option."
									},
									"children": [
										{
											"id": 18974,
											"name": "angle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the rotate angle."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 61436,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 18984,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57442,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1822
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 17163
											}
										},
										{
											"id": 18979,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the label."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59877,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.label",
												"id": 18134
											}
										},
										{
											"id": 18977,
											"name": "offset",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the offset."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59869,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.offset",
												"id": 18132
											}
										},
										{
											"id": 18980,
											"name": "placement",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the placement."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59881,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "Placement",
												"id": 1873
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.placement",
												"id": 18135
											}
										},
										{
											"id": 18982,
											"name": "pointPath",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the pointPath."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59889,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.pointPath",
												"id": 18137
											}
										},
										{
											"id": 18981,
											"name": "position",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the placement."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59885,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "AnnotationPosition"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.position",
												"id": 18136
											}
										},
										{
											"id": 18985,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57446,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 17335
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 17164
											}
										},
										{
											"id": 18978,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 59873,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IOverlayStyleOption",
												"id": 18145
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.style",
												"id": 18133
											}
										},
										{
											"id": 18976,
											"name": "text",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the text."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 61444,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 18975,
											"name": "textStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the text style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 61440,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 17399
											}
										},
										{
											"id": 18983,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57438,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 17162
											}
										},
										{
											"id": 18973,
											"name": "width",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the width."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 61432,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 18988,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 18989,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 18986,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 18987,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												18974,
												18984,
												18979,
												18977,
												18980,
												18982,
												18981,
												18985,
												18978,
												18976,
												18975,
												18983,
												18973
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												18988,
												18986
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 61428,
											"character": 39
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IAnnotationOverlayOption",
											"id": 18131
										}
									]
								},
								{
									"id": 17601,
									"name": "ITextPlotConfigOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents config option for the text plot."
									},
									"children": [
										{
											"id": 17606,
											"name": "categorySpace",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or set the space between the series and category title."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58917,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17603,
											"name": "categoryStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets title style of category."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58905,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 17399
											}
										},
										{
											"id": 17607,
											"name": "dimensionSpace",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or set the space between the dimensions."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58921,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17602,
											"name": "format",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the title format of point."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58901,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 17605,
											"name": "seriesSpace",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or set the space between series."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58913,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17604,
											"name": "symbolSpace",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or set the space between the symbol and title in the point."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58909,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17610,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17611,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 17608,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17609,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17606,
												17603,
												17607,
												17602,
												17605,
												17604
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17610,
												17608
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 58897,
											"character": 42
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 17399,
									"name": "ITextStyleOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the text style option."
									},
									"children": [
										{
											"id": 17400,
											"name": "color",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58247,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 17403,
											"name": "fontFamily",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the font family."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58259,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 17402,
											"name": "fontSize",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the font size."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58255,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 17405,
											"name": "fontStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the font style."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58267,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "FontStyle",
												"id": 1722
											}
										},
										{
											"id": 17404,
											"name": "fontWeight",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the font weight"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58263,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 17401,
											"name": "opacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the opacity value of the color."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58251,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17407,
											"name": "overflow",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text overflow."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58275,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "TextOverflow",
												"id": 1929
											}
										},
										{
											"id": 17406,
											"name": "textDecoration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text decoration."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58271,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextDecorationOption",
												"id": 17391
											}
										},
										{
											"id": 17410,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17411,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 17408,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17409,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17400,
												17403,
												17402,
												17405,
												17404,
												17401,
												17407,
												17406
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17410,
												17408
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 58243,
											"character": 37
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "ILabelStyleOption",
											"id": 17798
										},
										{
											"type": "reference",
											"name": "ISelectionTextStyleOption",
											"id": 17836
										}
									]
								},
								{
									"id": 21492,
									"name": "ITrendLineOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents trend line overlay option."
									},
									"children": [
										{
											"id": 21497,
											"name": "detailKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail key."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68410,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 21496,
											"name": "detailLevel",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail level."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68406,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "DetailLevel",
												"id": 46036
											}
										},
										{
											"id": 21501,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57442,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1822
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 17163
											}
										},
										{
											"id": 21495,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68402,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 21494,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the label."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68398,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 21502,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57446,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 17335
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 17164
											}
										},
										{
											"id": 21493,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the style"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68394,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 16897
											}
										},
										{
											"id": 21498,
											"name": "text",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68414,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "ITrendlineTextOption",
												"id": 21687
											}
										},
										{
											"id": 21500,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57438,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 17162
											}
										},
										{
											"id": 21505,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 21506,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 21503,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 21504,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												21497,
												21496,
												21501,
												21495,
												21494,
												21502,
												21493,
												21498,
												21500
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												21505,
												21503
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 68390,
											"character": 44
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOverlayOption",
											"id": 17161
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "IPolynomialTrendLineOverlayOption",
											"id": 21507
										},
										{
											"type": "reference",
											"name": "IExponentialTrendLineOverlayOption",
											"id": 21525
										},
										{
											"type": "reference",
											"name": "IPowerTrendLineOverlayOption",
											"id": 21542
										},
										{
											"type": "reference",
											"name": "ILinearTrendLineOverlayOption",
											"id": 21558
										},
										{
											"type": "reference",
											"name": "ILogarithmicTrendlineOverlayOption",
											"id": 21575
										},
										{
											"type": "reference",
											"name": "ISimpleMovingAverageTrendlineOverlayOption",
											"id": 21608
										},
										{
											"type": "reference",
											"name": "ICumulativeMovingAverageTrendlineOverlayOption",
											"id": 21624
										},
										{
											"type": "reference",
											"name": "IWeightedMovingAverageTrendlineOverlayOption",
											"id": 21640
										},
										{
											"type": "reference",
											"name": "IMovingAnnualTotalTrendlineOverlayOption",
											"id": 21656
										},
										{
											"type": "reference",
											"name": "IExponentialMovingAverageTrendlineOverlayOption",
											"id": 21672
										}
									]
								},
								{
									"id": 21485,
									"name": "ITrendlineForecastOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents forecast option for trendline."
									},
									"children": [
										{
											"id": 21486,
											"name": "forwardPeriod",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the forwardPeriod."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68375,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 21490,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 21491,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 21488,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 21489,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												21486
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												21490,
												21488
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 68371,
											"character": 45
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 21687,
									"name": "ITrendlineTextOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents trend line overlay text option."
									},
									"children": [
										{
											"id": 21688,
											"name": "equation",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Show the equation of trendline."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68562,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 21689,
											"name": "rSquaredValue",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Show the rSquared value of trendline."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68566,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 21692,
											"name": "textStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Get or set the style of the text."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68580,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 17399
											}
										},
										{
											"id": 21695,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 21696,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 21693,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 21694,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												21688,
												21689,
												21692
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												21695,
												21693
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 68558,
											"character": 41
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 17412,
									"name": "IUnitLabelOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents axis unit label option."
									},
									"children": [
										{
											"id": 17413,
											"name": "text",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text string."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58289,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 17414,
											"name": "textStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the value."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58293,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ILabelStyleOption",
												"id": 17798
											}
										},
										{
											"id": 17417,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17418,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 17415,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17416,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17413,
												17414
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17417,
												17415
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 58285,
											"character": 37
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 16404,
									"name": "IValueEncodingOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the value encoding option."
									},
									"children": [
										{
											"id": 16405,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets option type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 54172,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16408,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16409,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 16406,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16407,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												16405
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												16408,
												16406
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 54168,
											"character": 41
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "IFieldsValueEncodingOption",
											"id": 16376
										},
										{
											"type": "reference",
											"name": "IRangeFieldValueEncodingOption",
											"id": 16394
										},
										{
											"type": "reference",
											"name": "IStockFieldValueEncodingOption",
											"id": 57077
										}
									]
								},
								{
									"id": 17419,
									"name": "IValueOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents value option."
									},
									"children": [
										{
											"id": 17420,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the css value type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58308,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ValueOptionType",
												"id": 1949
											}
										},
										{
											"id": 17421,
											"name": "value",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the value."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58312,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17424,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17425,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 17422,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17423,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17420,
												17421
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17424,
												17422
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 58304,
											"character": 33
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 17426,
									"name": "IValueScaleOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents scale option."
									},
									"children": [
										{
											"id": 17427,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the type of scale."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 58327,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "ValueScaleType",
												"id": 1956
											}
										},
										{
											"id": 17430,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17431,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 17428,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17429,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17427
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17430,
												17428
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 58323,
											"character": 38
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 21640,
									"name": "IWeightedMovingAverageTrendlineOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents WMA trend line overlay option."
									},
									"children": [
										{
											"id": 21646,
											"name": "detailKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail key."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68410,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailKey",
												"id": 21497
											}
										},
										{
											"id": 21645,
											"name": "detailLevel",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail level."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68406,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "DetailLevel",
												"id": 46036
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailLevel",
												"id": 21496
											}
										},
										{
											"id": 21650,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57442,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1822
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 17163
											}
										},
										{
											"id": 21644,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68402,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.field",
												"id": 21495
											}
										},
										{
											"id": 21643,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the label."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68398,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.label",
												"id": 21494
											}
										},
										{
											"id": 21641,
											"name": "period",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the period."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68531,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 21651,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57446,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 17335
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 17164
											}
										},
										{
											"id": 21642,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the style"
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68394,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 16897
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.style",
												"id": 21493
											}
										},
										{
											"id": 21647,
											"name": "text",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text option."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 68414,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "ITrendlineTextOption",
												"id": 21687
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.text",
												"id": 21498
											}
										},
										{
											"id": 21649,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57438,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 17162
											}
										},
										{
											"id": 21654,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 21655,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 21652,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 21653,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												21646,
												21645,
												21650,
												21644,
												21643,
												21641,
												21651,
												21642,
												21647,
												21649
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												21654,
												21652
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 68527,
											"character": 65
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "ITrendLineOverlayOption",
											"id": 21492
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"kind": 256,
									"children": [
										16775,
										18131,
										16785,
										16837,
										17536,
										17545,
										17891,
										17897,
										16844,
										16851,
										16221,
										16230,
										16723,
										16732,
										16860,
										16239,
										16742,
										21624,
										16889,
										16897,
										16247,
										16920,
										18252,
										16929,
										19716,
										19737,
										21672,
										21525,
										16376,
										16936,
										16951,
										16977,
										16992,
										17004,
										18346,
										17798,
										16257,
										17015,
										17053,
										17092,
										17107,
										18469,
										17121,
										16752,
										21558,
										21575,
										17130,
										21656,
										17156,
										20421,
										17161,
										18145,
										17169,
										17187,
										17194,
										17556,
										17221,
										17268,
										17286,
										17297,
										17311,
										21507,
										21542,
										16763,
										16387,
										16394,
										18689,
										20246,
										20426,
										20429,
										17328,
										17321,
										17335,
										17812,
										17836,
										17343,
										16265,
										21608,
										16274,
										16283,
										17369,
										17378,
										17391,
										18972,
										17601,
										17399,
										21492,
										21485,
										21687,
										17412,
										16404,
										17419,
										17426,
										21640
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 46371,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 46421,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 46583,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 46702,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 47537,
									"character": 17
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 47592,
									"character": 17
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 47668,
									"character": 17
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 47817,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 48097,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 48158,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 48238,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 48587,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 48659,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 48765,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 48816,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 49002,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 49334,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 49519,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 49577,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 49617,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 49709,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 50301,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 50350,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 50395,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 50479,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 50640,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 50713,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 50878,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 50987,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 51202,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 51798,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 51834,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 52049,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 52131,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 52306,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 52394,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 52453,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 52502,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 52576,
									"character": 17
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 52646,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 52811,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 52912,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 53076,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 53125,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 53166,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 53201,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 53260,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 53313,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 53350,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 53426,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 53463,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 53516,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 53569,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 53605,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 53625,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 53644,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 53709,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 53754,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 53770,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 53790,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 53809,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 53824,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 53940,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 54033,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 54085,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 54116,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 54135,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 54162,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 54177,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 54206,
									"character": 17
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 54494,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 54831,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 54914,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 54957,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 54989,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 55016,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 55057,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 55106,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 55218,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 55244,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 55309,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 55336,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 55397,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 55616,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 55715,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 55762,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 55859,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 56076,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 56096,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 56120,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 56135,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 56154,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 56177,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 56208,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 56411,
									"character": 17
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 56430,
									"character": 17
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 56450,
									"character": 17
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 56477,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 56556,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 56576,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 56621,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 56701,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 56728,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 56780,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 56831,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 56900,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 56951,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 56966,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 56981,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 57011,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 57083,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 57212,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 57231,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 57270,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 57285,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 57321,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 57348,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 57409,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 57428,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 57451,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 57478,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 57494,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 57513,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 57566,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 57583,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 57727,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 57744,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 57855,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 57936,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 58008,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 58039,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 58058,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 58079,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 58120,
									"character": 17
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 58144,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 58171,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 58214,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 58237,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 58279,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 58298,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 58317,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 58331,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 58383,
									"character": 17
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 58466,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 58585,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 58666,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 58696,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 58740,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 58772,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 58891,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 58926,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 58962,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 59011,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 59046,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 59061,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 59076,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 59091,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 59140,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 59212,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 59227,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 59499,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 59588,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 59729,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 59859,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 59893,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 59932,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 60024,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 60079,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 60147,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 60212,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 60433,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 60478,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 60691,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 60758,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 60822,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 60877,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 61108,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 61172,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 61302,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 61380,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 61394,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 61422,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 61449,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 63236,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 63438,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 63477,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 63539,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 64868,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 64954,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 65183,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 65256,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 65309,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 65470,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 65492,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 65519,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 65538,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 68031,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 68149,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 68197,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 68244,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 68289,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 68365,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 68384,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 68552,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 68657,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 68702,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 68740,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 68787,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 68864,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 68902,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 68949,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 69002,
									"character": 20
								}
							]
						},
						{
							"id": 3421,
							"name": "plugins",
							"kind": 2,
							"kindString": "Module",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 22343,
									"name": "AdornerRenderPlugin",
									"kind": 128,
									"kindString": "Class",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the adorner render plugin."
									},
									"children": [
										{
											"id": 22351,
											"name": "hasRegisteredAdornerRender",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isPublic": true,
												"isStatic": true,
												"isExported": true
											},
											"signatures": [
												{
													"id": 22352,
													"name": "hasRegisteredAdornerRender",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Checks whether the adorner render is registered.",
														"returns": "True if it is registered, otherwise false.\n"
													},
													"parameters": [
														{
															"id": 22353,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The adorner render type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 69926,
													"character": 48
												}
											]
										},
										{
											"id": 22344,
											"name": "registerAdornerRender",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isPublic": true,
												"isStatic": true,
												"isExported": true
											},
											"signatures": [
												{
													"id": 22345,
													"name": "registerAdornerRender",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Registers the adorner render plugin."
													},
													"parameters": [
														{
															"id": 22346,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The adorner render type."
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 22347,
															"name": "plugin",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The adorner render plugin.\n"
															},
															"type": {
																"type": "reference",
																"name": "IAdornerRenderPlugin",
																"id": 22381
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 69890,
													"character": 43
												}
											]
										},
										{
											"id": 22348,
											"name": "unregisterAdorner",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isPublic": true,
												"isStatic": true,
												"isExported": true
											},
											"signatures": [
												{
													"id": 22349,
													"name": "unregisterAdorner",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Checks whether the adorner render is registered.",
														"returns": "True if it is registered, otherwise false.\n"
													},
													"parameters": [
														{
															"id": 22350,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The adorner render type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 69909,
													"character": 39
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												22351,
												22344,
												22348
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 69877,
											"character": 36
										}
									]
								},
								{
									"id": 22357,
									"name": "BorderAdornerRenderPlugin",
									"kind": 128,
									"kindString": "Class",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the border adorner render plugin."
									},
									"children": [
										{
											"id": 22358,
											"name": "create",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isPublic": true,
												"isExported": true
											},
											"signatures": [
												{
													"id": 22359,
													"name": "create",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a new adorner render plugin.",
														"returns": "The new adorner render.\n"
													},
													"type": {
														"type": "reference",
														"name": "IAdornerRender",
														"id": 12655
													},
													"implementationOf": {
														"type": "reference",
														"name": "IAdornerRenderPlugin.create",
														"id": 22383
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 69964,
													"character": 21
												}
											],
											"implementationOf": {
												"type": "reference",
												"name": "IAdornerRenderPlugin.create",
												"id": 22382
											}
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												22358
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 69958,
											"character": 42
										}
									],
									"implementedTypes": [
										{
											"type": "reference",
											"name": "IAdornerRenderPlugin",
											"id": 22381
										}
									]
								},
								{
									"id": 25078,
									"name": "ClickInteractionPlugin",
									"kind": 128,
									"kindString": "Class",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the click interaction plugin."
									},
									"children": [
										{
											"id": 25086,
											"name": "hasRegisteredClickInteraction",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isPublic": true,
												"isStatic": true,
												"isExported": true
											},
											"signatures": [
												{
													"id": 25087,
													"name": "hasRegisteredClickInteraction",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Checks whether the click interaction is registered.",
														"returns": "True if it is registered, otherwise false.\n"
													},
													"parameters": [
														{
															"id": 25088,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The click interaction type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 77013,
													"character": 51
												}
											]
										},
										{
											"id": 25079,
											"name": "registerClickInteraction",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isPublic": true,
												"isStatic": true,
												"isExported": true
											},
											"signatures": [
												{
													"id": 25080,
													"name": "registerClickInteraction",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Registers the click interaction plugin."
													},
													"parameters": [
														{
															"id": 25081,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The click interaction type."
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 25082,
															"name": "plugin",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The click interaction plugin.\n"
															},
															"type": {
																"type": "reference",
																"name": "IClickInteractionPlugin",
																"id": 25094
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 76979,
													"character": 46
												}
											]
										},
										{
											"id": 25083,
											"name": "unregisterClickInteraction",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isPublic": true,
												"isStatic": true,
												"isExported": true
											},
											"signatures": [
												{
													"id": 25084,
													"name": "unregisterClickInteraction",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Checks whether the click interaction is registered.",
														"returns": "True if it is registered, otherwise false.\n"
													},
													"parameters": [
														{
															"id": 25085,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The click interaction type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 76997,
													"character": 48
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												25086,
												25079,
												25083
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 76966,
											"character": 39
										}
									]
								},
								{
									"id": 25375,
									"name": "ConditionalFormattingRulePlugin",
									"kind": 128,
									"kindString": "Class",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the conditional formatting rule plugin."
									},
									"children": [
										{
											"id": 25383,
											"name": "hasRegisteredConditionalFormattingRule",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isPublic": true,
												"isStatic": true,
												"isExported": true
											},
											"signatures": [
												{
													"id": 25384,
													"name": "hasRegisteredConditionalFormattingRule",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Checks whether the conditional formatting rule is registered.",
														"returns": "True if it is registered, otherwise false.\n"
													},
													"parameters": [
														{
															"id": 25385,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The conditional formatting rule type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 78567,
													"character": 60
												}
											]
										},
										{
											"id": 25376,
											"name": "registerConditionalFormattingRule",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isPublic": true,
												"isStatic": true,
												"isExported": true
											},
											"signatures": [
												{
													"id": 25377,
													"name": "registerConditionalFormattingRule",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Registers the conditional formatting rule plugin."
													},
													"parameters": [
														{
															"id": 25378,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The conditional formatting rule type."
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 25379,
															"name": "plugin",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The conditional formatting rule plugin.\n"
															},
															"type": {
																"type": "reference",
																"name": "IConditionalFormattingRulePlugin",
																"id": 25421
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 78535,
													"character": 55
												}
											]
										},
										{
											"id": 25380,
											"name": "unregisterConditionalFormattingRule",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isPublic": true,
												"isStatic": true,
												"isExported": true
											},
											"signatures": [
												{
													"id": 25381,
													"name": "unregisterConditionalFormattingRule",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Unregisters the conditional formatting rule plugin."
													},
													"parameters": [
														{
															"id": 25382,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The conditional formatting rule type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 78551,
													"character": 57
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												25383,
												25376,
												25380
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 78522,
											"character": 48
										}
									]
								},
								{
									"id": 25577,
									"name": "DataContentProviderPlugin",
									"kind": 128,
									"kindString": "Class",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the data content provider plugin."
									},
									"children": [
										{
											"id": 25585,
											"name": "hasRegisteredDataContentProvider",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isPublic": true,
												"isStatic": true,
												"isExported": true
											},
											"signatures": [
												{
													"id": 25586,
													"name": "hasRegisteredDataContentProvider",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Checks whether the data content provider is registered.",
														"returns": "True if it is registered, otherwise false.\n"
													},
													"parameters": [
														{
															"id": 25587,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The data content provider type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 79529,
													"character": 54
												}
											]
										},
										{
											"id": 25578,
											"name": "registerDataContentProvider",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isPublic": true,
												"isStatic": true,
												"isExported": true
											},
											"signatures": [
												{
													"id": 25579,
													"name": "registerDataContentProvider",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Registers the data content provider plugin."
													},
													"parameters": [
														{
															"id": 25580,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The data content provider type."
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 25581,
															"name": "plugin",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The data content provider plugin.\n"
															},
															"type": {
																"type": "reference",
																"name": "IDataContentProviderPlugin",
																"id": 25591
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 79495,
													"character": 49
												}
											]
										},
										{
											"id": 25582,
											"name": "unregisterDataContentProvider",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isPublic": true,
												"isStatic": true,
												"isExported": true
											},
											"signatures": [
												{
													"id": 25583,
													"name": "unregisterDataContentProvider",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Unregisters the data content provider plugin."
													},
													"parameters": [
														{
															"id": 25584,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The data content provider type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 79512,
													"character": 51
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												25585,
												25578,
												25582
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 79482,
											"character": 42
										}
									]
								},
								{
									"id": 25602,
									"name": "DateParserPlugin",
									"kind": 128,
									"kindString": "Class",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the date parser plugin."
									},
									"children": [
										{
											"id": 25610,
											"name": "hasRegisteredDateParser",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isPublic": true,
												"isStatic": true,
												"isExported": true
											},
											"signatures": [
												{
													"id": 25611,
													"name": "hasRegisteredDateParser",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Checks whether the date parser is registered.",
														"returns": "True if it is registered, otherwise false.\n"
													},
													"parameters": [
														{
															"id": 25612,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The date parser type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 79674,
													"character": 45
												}
											]
										},
										{
											"id": 25603,
											"name": "registerDateParser",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isPublic": true,
												"isStatic": true,
												"isExported": true
											},
											"signatures": [
												{
													"id": 25604,
													"name": "registerDateParser",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Registers the date parser plugin."
													},
													"parameters": [
														{
															"id": 25605,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The date parser type."
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 25606,
															"name": "plugin",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The date parser plugin.\n"
															},
															"type": {
																"type": "reference",
																"name": "IDateParserPlugin",
																"id": 25616
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 79640,
													"character": 40
												}
											]
										},
										{
											"id": 25607,
											"name": "unregisterDateParser",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isPublic": true,
												"isStatic": true,
												"isExported": true
											},
											"signatures": [
												{
													"id": 25608,
													"name": "unregisterDateParser",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Unregisters the date parser plugin."
													},
													"parameters": [
														{
															"id": 25609,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The date parser type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 79657,
													"character": 42
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												25610,
												25603,
												25607
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 79627,
											"character": 33
										}
									]
								},
								{
									"id": 25627,
									"name": "FilterPlugin",
									"kind": 128,
									"kindString": "Class",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the filter plugin."
									},
									"children": [
										{
											"id": 25635,
											"name": "hasRegisteredFilter",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isPublic": true,
												"isStatic": true,
												"isExported": true
											},
											"signatures": [
												{
													"id": 25636,
													"name": "hasRegisteredFilter",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Checks whether the filter is registered.",
														"returns": "True if it is registered, otherwise false.\n"
													},
													"parameters": [
														{
															"id": 25637,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The filter type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 79809,
													"character": 41
												}
											]
										},
										{
											"id": 25628,
											"name": "registerFilter",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isPublic": true,
												"isStatic": true,
												"isExported": true
											},
											"signatures": [
												{
													"id": 25629,
													"name": "registerFilter",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Registers the filter plugin."
													},
													"parameters": [
														{
															"id": 25630,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The filter type."
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 25631,
															"name": "plugin",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The filter plugin.\n"
															},
															"type": {
																"type": "reference",
																"name": "IFilterPlugin",
																"id": 25641
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 79777,
													"character": 36
												}
											]
										},
										{
											"id": 25632,
											"name": "unregisterFilter",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isPublic": true,
												"isStatic": true,
												"isExported": true
											},
											"signatures": [
												{
													"id": 25633,
													"name": "unregisterFilter",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Unregisters the filter plugin."
													},
													"parameters": [
														{
															"id": 25634,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The filter type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 79793,
													"character": 38
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												25635,
												25628,
												25632
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 79764,
											"character": 29
										}
									]
								},
								{
									"id": 25679,
									"name": "HoverInteractionPlugin",
									"kind": 128,
									"kindString": "Class",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the hover interaction plugin."
									},
									"children": [
										{
											"id": 25687,
											"name": "hasRegisteredHoverInteraction",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isPublic": true,
												"isStatic": true,
												"isExported": true
											},
											"signatures": [
												{
													"id": 25688,
													"name": "hasRegisteredHoverInteraction",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Checks whether the hover interaction is registered.",
														"returns": "True if it is registered, otherwise false.\n"
													},
													"parameters": [
														{
															"id": 25689,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The hover interaction type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 80057,
													"character": 51
												}
											]
										},
										{
											"id": 25680,
											"name": "registerHoverInteraction",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isPublic": true,
												"isStatic": true,
												"isExported": true
											},
											"signatures": [
												{
													"id": 25681,
													"name": "registerHoverInteraction",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Registers the hover interaction plugin."
													},
													"parameters": [
														{
															"id": 25682,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The hover interaction type."
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 25683,
															"name": "plugin",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The hover interaction plugin.\n"
															},
															"type": {
																"type": "reference",
																"name": "IHoverInteractionPlugin",
																"id": 25695
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 80023,
													"character": 46
												}
											]
										},
										{
											"id": 25684,
											"name": "unregisterHoverInteraction",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isPublic": true,
												"isStatic": true,
												"isExported": true
											},
											"signatures": [
												{
													"id": 25685,
													"name": "unregisterHoverInteraction",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Checks whether the hover interaction is registered.",
														"returns": "True if it is registered, otherwise false.\n"
													},
													"parameters": [
														{
															"id": 25686,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The hover interaction type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 80041,
													"character": 48
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												25687,
												25680,
												25684
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 80010,
											"character": 39
										}
									]
								},
								{
									"id": 25097,
									"name": "LegendFilterInteractionPlugin",
									"kind": 128,
									"kindString": "Class",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the legend filter interaction plugin."
									},
									"children": [
										{
											"id": 25098,
											"name": "create",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isPublic": true,
												"isExported": true
											},
											"signatures": [
												{
													"id": 25099,
													"name": "create",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a new click interaction plugin.",
														"returns": "The new click interaction.\n"
													},
													"type": {
														"type": "reference",
														"name": "IClickInteraction",
														"id": 12675
													},
													"implementationOf": {
														"type": "reference",
														"name": "IClickInteractionPlugin.create",
														"id": 25096
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 77079,
													"character": 21
												}
											],
											"implementationOf": {
												"type": "reference",
												"name": "IClickInteractionPlugin.create",
												"id": 25095
											}
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												25098
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 77073,
											"character": 46
										}
									],
									"implementedTypes": [
										{
											"type": "reference",
											"name": "IClickInteractionPlugin",
											"id": 25094
										}
									]
								},
								{
									"id": 25949,
									"name": "PureCanvasRenderEnginePlugin",
									"kind": 128,
									"kindString": "Class",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the canvas render engine plugin."
									},
									"children": [
										{
											"id": 25950,
											"name": "create",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isPublic": true,
												"isExported": true
											},
											"signatures": [
												{
													"id": 25951,
													"name": "create",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a new canvas render engine.",
														"returns": "The new canvas render engine.\n"
													},
													"parameters": [
														{
															"id": 25952,
															"name": "element",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The host element.\n"
															},
															"type": {
																"type": "reference",
																"name": "HTMLElement"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IRenderEngine",
														"id": 2171
													},
													"implementationOf": {
														"type": "reference",
														"name": "IRenderEnginePlugin.create",
														"id": 26364
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 81352,
													"character": 21
												}
											],
											"implementationOf": {
												"type": "reference",
												"name": "IRenderEnginePlugin.create",
												"id": 26363
											}
										},
										{
											"id": 25953,
											"name": "createMeasurer",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isPublic": true,
												"isExported": true
											},
											"signatures": [
												{
													"id": 25954,
													"name": "createMeasurer",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a canvas measurer."
													},
													"parameters": [
														{
															"id": 25955,
															"name": "element",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The host element.\n"
															},
															"type": {
																"type": "reference",
																"name": "HTMLElement"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IMeasurer",
														"id": 2358
													},
													"implementationOf": {
														"type": "reference",
														"name": "IRenderEnginePlugin.createMeasurer",
														"id": 26367
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 81361,
													"character": 29
												}
											],
											"implementationOf": {
												"type": "reference",
												"name": "IRenderEnginePlugin.createMeasurer",
												"id": 26366
											}
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												25950,
												25953
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 81344,
											"character": 45
										}
									],
									"implementedTypes": [
										{
											"type": "reference",
											"name": "IRenderEnginePlugin",
											"id": 26362
										}
									]
								},
								{
									"id": 26369,
									"name": "RenderEnginePlugin",
									"kind": 128,
									"kindString": "Class",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the render engine plugin."
									},
									"children": [
										{
											"id": 26380,
											"name": "_renderEnginePlugin",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isPublic": true,
												"isStatic": true,
												"isExported": true
											},
											"signatures": [
												{
													"id": 26381,
													"name": "_renderEnginePlugin",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the registered render engine.",
														"returns": "The registered render engine.\n"
													},
													"parameters": [
														{
															"id": 26382,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The render engine type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IRenderEnginePlugin",
														"id": 26362
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 84088,
													"character": 41
												}
											]
										},
										{
											"id": 26377,
											"name": "hasRegisteredRenderEngine",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isPublic": true,
												"isStatic": true,
												"isExported": true
											},
											"signatures": [
												{
													"id": 26378,
													"name": "hasRegisteredRenderEngine",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Checks whether the render engine is registered.",
														"returns": "True if it is registered, otherwise false.\n"
													},
													"parameters": [
														{
															"id": 26379,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The render engine type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 84074,
													"character": 47
												}
											]
										},
										{
											"id": 26370,
											"name": "registerRenderEngine",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isPublic": true,
												"isStatic": true,
												"isExported": true
											},
											"signatures": [
												{
													"id": 26371,
													"name": "registerRenderEngine",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Registers the render engine plugin."
													},
													"parameters": [
														{
															"id": 26372,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The render engine type."
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "stringLiteral",
																		"value": "SVG"
																	},
																	{
																		"type": "stringLiteral",
																		"value": "Canvas"
																	}
																]
															}
														},
														{
															"id": 26373,
															"name": "plugin",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The render engine plugin.\n"
															},
															"type": {
																"type": "reference",
																"name": "IRenderEnginePlugin",
																"id": 26362
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 84042,
													"character": 42
												}
											]
										},
										{
											"id": 26374,
											"name": "unregisterRenderEngine",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isPublic": true,
												"isStatic": true,
												"isExported": true
											},
											"signatures": [
												{
													"id": 26375,
													"name": "unregisterRenderEngine",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Unregisters the render engine plugin."
													},
													"parameters": [
														{
															"id": 26376,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The render engine type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 84058,
													"character": 44
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												26380,
												26377,
												26370,
												26374
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 84029,
											"character": 35
										}
									]
								},
								{
									"id": 26151,
									"name": "StringFormattingPlugin",
									"kind": 128,
									"kindString": "Class",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the string formatting plugin."
									},
									"children": [
										{
											"id": 26159,
											"name": "hasRegisteredStringFormatting",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isPublic": true,
												"isStatic": true,
												"isExported": true
											},
											"signatures": [
												{
													"id": 26160,
													"name": "hasRegisteredStringFormatting",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Checks whether the string formatting is registered.",
														"returns": "True if it is registered, otherwise false.\n"
													},
													"parameters": [
														{
															"id": 26161,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The string formatting type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 82888,
													"character": 51
												}
											]
										},
										{
											"id": 26152,
											"name": "registerStringFormatting",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isPublic": true,
												"isStatic": true,
												"isExported": true
											},
											"signatures": [
												{
													"id": 26153,
													"name": "registerStringFormatting",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Registers the string formatting plugin."
													},
													"parameters": [
														{
															"id": 26154,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The string formatting type."
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 26155,
															"name": "plugin",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The string formatting plugin.\n"
															},
															"type": {
																"type": "reference",
																"name": "IStringFormattingPlugin",
																"id": 25962
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 82854,
													"character": 46
												}
											]
										},
										{
											"id": 26156,
											"name": "unregisterStringFormatting",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isPublic": true,
												"isStatic": true,
												"isExported": true
											},
											"signatures": [
												{
													"id": 26157,
													"name": "unregisterStringFormatting",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Unregisters the string formatting plugin."
													},
													"parameters": [
														{
															"id": 26158,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The string formatting type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 82871,
													"character": 48
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												26159,
												26152,
												26156
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 82841,
											"character": 39
										}
									]
								},
								{
									"id": 26165,
									"name": "StringFormattingTypes",
									"kind": 128,
									"kindString": "Class",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the string formatting types."
									},
									"children": [
										{
											"id": 26166,
											"name": "Default",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isPublic": true,
												"isStatic": true,
												"isExported": true
											},
											"comment": {
												"shortText": "Represents the default string format."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 82926,
													"character": 38
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"Default\""
										},
										{
											"id": 26167,
											"name": "PlotText",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isPublic": true,
												"isStatic": true,
												"isExported": true
											},
											"comment": {
												"shortText": "Represents the string format used by data label template."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 82931,
													"character": 39
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"PlotText\""
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												26166,
												26167
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 82922,
											"character": 38
										}
									]
								},
								{
									"id": 26221,
									"name": "SymbolPlugin",
									"kind": 128,
									"kindString": "Class",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the symbol plugin."
									},
									"children": [
										{
											"id": 26229,
											"name": "hasRegisteredSymbol",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isPublic": true,
												"isStatic": true,
												"isExported": true
											},
											"signatures": [
												{
													"id": 26230,
													"name": "hasRegisteredSymbol",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Checks whether the symbol is registered.",
														"returns": "True if it is registered, otherwise false.\n"
													},
													"parameters": [
														{
															"id": 26231,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The symbol type."
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 83290,
													"character": 41
												}
											]
										},
										{
											"id": 26222,
											"name": "registerSymbol",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isPublic": true,
												"isStatic": true,
												"isExported": true
											},
											"signatures": [
												{
													"id": 26223,
													"name": "registerSymbol",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Registers the symbol plugin."
													},
													"parameters": [
														{
															"id": 26224,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The symbol type."
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 26225,
															"name": "plugin",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The symbol plugin.\n"
															},
															"type": {
																"type": "reference",
																"name": "ISymbolPlugin",
																"id": 26208
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 83250,
													"character": 36
												}
											]
										},
										{
											"id": 26226,
											"name": "unregisterSymbol",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isPublic": true,
												"isStatic": true,
												"isExported": true
											},
											"signatures": [
												{
													"id": 26227,
													"name": "unregisterSymbol",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Unregisters the symbol plugin."
													},
													"parameters": [
														{
															"id": 26228,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The symbol type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 83268,
													"character": 38
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												26229,
												26222,
												26226
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 83232,
											"character": 29
										}
									]
								},
								{
									"id": 22381,
									"name": "IAdornerRenderPlugin",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the adorner render plugin."
									},
									"children": [
										{
											"id": 22382,
											"name": "create",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 22383,
													"name": "create",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a new adorner render plugin.",
														"returns": "The new adorner render.\n"
													},
													"type": {
														"type": "reference",
														"name": "IAdornerRender",
														"id": 12655
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 70116,
													"character": 14
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												22382
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 70110,
											"character": 41
										}
									],
									"implementedBy": [
										{
											"type": "reference",
											"name": "BorderAdornerRenderPlugin",
											"id": 22357
										}
									]
								},
								{
									"id": 25094,
									"name": "IClickInteractionPlugin",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the click interaction plugin."
									},
									"children": [
										{
											"id": 25095,
											"name": "create",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 25096,
													"name": "create",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a new click interaction plugin.",
														"returns": "The new click interaction.\n"
													},
													"type": {
														"type": "reference",
														"name": "IClickInteraction",
														"id": 12675
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 77062,
													"character": 14
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												25095
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 77056,
											"character": 44
										}
									],
									"implementedBy": [
										{
											"type": "reference",
											"name": "LegendFilterInteractionPlugin",
											"id": 25097
										}
									]
								},
								{
									"id": 25421,
									"name": "IConditionalFormattingRulePlugin",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the conditional formatting rule plugin."
									},
									"children": [
										{
											"id": 25422,
											"name": "create",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 25423,
													"name": "create",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a new conditional formatting rule.",
														"returns": "The new conditional formatting rule.\n"
													},
													"parameters": [
														{
															"id": 25424,
															"name": "option",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The option setting for the conditional formatting rule.\n"
															},
															"type": {
																"type": "reference",
																"name": "IRuleOption",
																"id": 17335
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IConditionalFormattingRule",
														"id": 12680
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 78775,
													"character": 14
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												25422
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 78767,
											"character": 53
										}
									]
								},
								{
									"id": 25591,
									"name": "IDataContentProviderPlugin",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the data content provider plugin."
									},
									"children": [
										{
											"id": 25592,
											"name": "create",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 25593,
													"name": "create",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a new data content provider plugin.",
														"returns": "The new data content provider.\n"
													},
													"type": {
														"type": "reference",
														"name": "IDataContentProvider"
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 79567,
													"character": 14
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												25592
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 79561,
											"character": 47
										}
									]
								},
								{
									"id": 25616,
									"name": "IDateParserPlugin",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the date parser plugin."
									},
									"children": [
										{
											"id": 25617,
											"name": "create",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 25618,
													"name": "create",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a new date parser plugin.",
														"returns": "The new date parser.\n"
													},
													"type": {
														"type": "reference",
														"name": "IDateParser",
														"id": 12691
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 79712,
													"character": 14
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												25617
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 79706,
											"character": 38
										}
									]
								},
								{
									"id": 25641,
									"name": "IFilterPlugin",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the filter plugin."
									},
									"children": [
										{
											"id": 25642,
											"name": "create",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 25643,
													"name": "create",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a new filter plugin.",
														"returns": "The new filter.\n"
													},
													"type": {
														"type": "reference",
														"name": "IFilter",
														"id": 12696
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 79849,
													"character": 14
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												25642
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 79843,
											"character": 34
										}
									]
								},
								{
									"id": 25695,
									"name": "IHoverInteractionPlugin",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the hover interaction plugin."
									},
									"children": [
										{
											"id": 25696,
											"name": "create",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 25697,
													"name": "create",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a new hover interaction plugin.",
														"returns": "The new hover interaction.\n"
													},
													"type": {
														"type": "reference",
														"name": "IHoverInteraction",
														"id": 12701
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 80107,
													"character": 14
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												25696
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 80101,
											"character": 44
										}
									]
								},
								{
									"id": 26362,
									"name": "IRenderEnginePlugin",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the render engine plugin."
									},
									"children": [
										{
											"id": 26363,
											"name": "create",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 26364,
													"name": "create",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a new render engine.",
														"returns": "The new render engine.\n"
													},
													"parameters": [
														{
															"id": 26365,
															"name": "element",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The host element.\n"
															},
															"type": {
																"type": "reference",
																"name": "HTMLElement"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IRenderEngine",
														"id": 2171
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 84016,
													"character": 14
												}
											]
										},
										{
											"id": 26366,
											"name": "createMeasurer",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 26367,
													"name": "createMeasurer",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a measurer."
													},
													"parameters": [
														{
															"id": 26368,
															"name": "element",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The host element.\n"
															},
															"type": {
																"type": "reference",
																"name": "HTMLElement"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IMeasurer",
														"id": 2358
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 84023,
													"character": 22
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												26363,
												26366
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 84008,
											"character": 40
										}
									],
									"implementedBy": [
										{
											"type": "reference",
											"name": "PureCanvasRenderEnginePlugin",
											"id": 25949
										}
									]
								},
								{
									"id": 25962,
									"name": "IStringFormattingPlugin",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the string formatting plugin."
									},
									"children": [
										{
											"id": 25963,
											"name": "create",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 25964,
													"name": "create",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a new string formatting plugin.",
														"returns": "The new string formatting.\n"
													},
													"type": {
														"type": "reference",
														"name": "IStringFormatting",
														"id": 12723
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 81478,
													"character": 14
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												25963
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 81472,
											"character": 44
										}
									]
								},
								{
									"id": 26208,
									"name": "ISymbolPlugin",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the symbol plugin."
									},
									"children": [
										{
											"id": 26209,
											"name": "create",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 26210,
													"name": "create",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a new symbol plugin.",
														"returns": "The new symbol.\n"
													},
													"type": {
														"type": "reference",
														"name": "ISymbol",
														"id": 12732
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 83166,
													"character": 14
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												26209
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 83160,
											"character": 34
										}
									]
								}
							],
							"groups": [
								{
									"title": "Classes",
									"kind": 128,
									"children": [
										22343,
										22357,
										25078,
										25375,
										25577,
										25602,
										25627,
										25679,
										25097,
										25949,
										26369,
										26151,
										26165,
										26221
									]
								},
								{
									"title": "Interfaces",
									"kind": 256,
									"children": [
										22381,
										25094,
										25421,
										25591,
										25616,
										25641,
										25695,
										26362,
										25962,
										26208
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 17433,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 17520,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 59979,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 60102,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 60239,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 60497,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 60777,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 60900,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 61468,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 63557,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 64981,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 65585,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 69049,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 69096,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 69143,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 69190,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 69237,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 69284,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 69331,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 69378,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 69425,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 69472,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 69519,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 69566,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 69871,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 69952,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 70007,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 70055,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 70104,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 70121,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 70266,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 70296,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 70318,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 70341,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 70375,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 74000,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 75552,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 75583,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 75722,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 75753,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 75915,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 75946,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 76085,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 76116,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 76237,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 76268,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 76377,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 76408,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 76439,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 76577,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 76655,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 76674,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 76792,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 76869,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 76960,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 77050,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 77067,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 77126,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 77291,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 77493,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 78120,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 78246,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 78516,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 78595,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 78761,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 78780,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 78944,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 78962,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 78986,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 79010,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 79034,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 79058,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 79076,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 79166,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 79256,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 79476,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 79555,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 79572,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 79621,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 79700,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 79717,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 79758,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 79837,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 79854,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 79895,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 80004,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 80095,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 80112,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 80221,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 80324,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 80477,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 80586,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 80832,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 80859,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 80900,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 80941,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 80982,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 81023,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 81064,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 81105,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 81146,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 81188,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 81229,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 81276,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 81307,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 81338,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 81368,
									"character": 17
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 81466,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 81483,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 82835,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 82916,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 82936,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 82990,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 83044,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 83101,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 83154,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 83171,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 83226,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 83324,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 83400,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 83456,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 83557,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 83658,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 83754,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 83878,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 84002,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 108280,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 138741,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 138774,
									"character": 20
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 138853,
									"character": 20
								}
							]
						},
						{
							"id": 27016,
							"name": "shapes",
							"kind": 2,
							"kindString": "Module",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 27486,
									"name": "IShape",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the shape."
									},
									"children": [
										{
											"id": 27487,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 88549,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 27493,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 27494,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 27495,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												27487
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												27493
											]
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 88545,
											"character": 27
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IQueryInterface",
											"id": 1048
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"kind": 256,
									"children": [
										27486
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 86393,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 86544,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 86611,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 86768,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 87031,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 87157,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 87586,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 87732,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 87916,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 88305,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 88356,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 88388,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 88420,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 88440,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 88471,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 88499,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 88515,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 88539,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 88587,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 88697,
									"character": 19
								},
								{
									"fileName": "source/core/modules/core.ts",
									"line": 127279,
									"character": 19
								}
							]
						},
						{
							"id": 1600,
							"name": "Aggregate",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the aggregate options."
							},
							"children": [
								{
									"id": 1604,
									"name": "Average",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Average value of the numeric values in the group."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9613,
											"character": 15
										}
									],
									"defaultValue": "3"
								},
								{
									"id": 1603,
									"name": "Count",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Count of non-null values in the group."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9609,
											"character": 13
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1612,
									"name": "CountOfAll",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Count of all values in the group.\n(including nulls)."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9650,
											"character": 18
										}
									],
									"defaultValue": "11"
								},
								{
									"id": 1601,
									"name": "List",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "No aggregate."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9601,
											"character": 12
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1605,
									"name": "Max",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Maximum value in the group."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9617,
											"character": 11
										}
									],
									"defaultValue": "4"
								},
								{
									"id": 1606,
									"name": "Min",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Minimum value in the group."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9621,
											"character": 11
										}
									],
									"defaultValue": "5"
								},
								{
									"id": 1610,
									"name": "PopulationStandardDeviation",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Population standard deviation of the values in the group\n(uses the formula based on n)."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9640,
											"character": 35
										}
									],
									"defaultValue": "9"
								},
								{
									"id": 1611,
									"name": "PopulationVariance",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Population variance of the values in the group\n(uses the formula based on n)."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9645,
											"character": 26
										}
									],
									"defaultValue": "10"
								},
								{
									"id": 1607,
									"name": "Range",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Difference between the maximum and minimum numeric values in the group."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9625,
											"character": 13
										}
									],
									"defaultValue": "6"
								},
								{
									"id": 1608,
									"name": "StandardDeviation",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Sample standard deviation of the numeric values in the group\n(uses the formula based on n-1)."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9630,
											"character": 25
										}
									],
									"defaultValue": "7"
								},
								{
									"id": 1602,
									"name": "Sum",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Sum of the numeric values in the group."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9605,
											"character": 11
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 1609,
									"name": "Variance",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Sample variance of the numeric values in the group\n(uses the formula based on n-1)."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9635,
											"character": 16
										}
									],
									"defaultValue": "8"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1604,
										1603,
										1612,
										1601,
										1605,
										1606,
										1610,
										1611,
										1607,
										1608,
										1602,
										1609
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 9597,
									"character": 25
								}
							]
						},
						{
							"id": 1613,
							"name": "AnimationEasing",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents animation easing."
							},
							"children": [
								{
									"id": 1637,
									"name": "EaseInBack",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a back easing in - accelerating from zero velocity."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9757,
											"character": 18
										}
									],
									"defaultValue": "23"
								},
								{
									"id": 1640,
									"name": "EaseInBounce",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a bounce easing in - accelerating from zero velocity."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9769,
											"character": 20
										}
									],
									"defaultValue": "26"
								},
								{
									"id": 1634,
									"name": "EaseInCirc",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a circular easing in - accelerating from zero velocity."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9745,
											"character": 18
										}
									],
									"defaultValue": "20"
								},
								{
									"id": 1619,
									"name": "EaseInCubic",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a cubic easing in - accelerating from zero velocity."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9685,
											"character": 19
										}
									],
									"defaultValue": "5"
								},
								{
									"id": 1643,
									"name": "EaseInElastic",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for an elastic easing in - accelerating from zero velocity."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9781,
											"character": 21
										}
									],
									"defaultValue": "29"
								},
								{
									"id": 1631,
									"name": "EaseInExpo",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for an exponential easing in - accelerating from zero velocity."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9733,
											"character": 18
										}
									],
									"defaultValue": "17"
								},
								{
									"id": 1639,
									"name": "EaseInOutBack",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a back easing in and out - acceleration until halfway, then deceleration."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9765,
											"character": 21
										}
									],
									"defaultValue": "25"
								},
								{
									"id": 1642,
									"name": "EaseInOutBounce",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a bounce easing in and out - acceleration until halfway, then deceleration."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9777,
											"character": 23
										}
									],
									"defaultValue": "28"
								},
								{
									"id": 1636,
									"name": "EaseInOutCirc",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a circular easing in and out - acceleration until halfway, then deceleration."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9753,
											"character": 21
										}
									],
									"defaultValue": "22"
								},
								{
									"id": 1621,
									"name": "EaseInOutCubic",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a cubic easing in and out - acceleration until halfway, then deceleration."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9693,
											"character": 22
										}
									],
									"defaultValue": "7"
								},
								{
									"id": 1645,
									"name": "EaseInOutElastic",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for an elastic easing in and out - acceleration until halfway, then deceleration."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9789,
											"character": 24
										}
									],
									"defaultValue": "31"
								},
								{
									"id": 1633,
									"name": "EaseInOutExpo",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for an exponential easing in and out - acceleration until halfway, then deceleration."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9741,
											"character": 21
										}
									],
									"defaultValue": "19"
								},
								{
									"id": 1618,
									"name": "EaseInOutQuad",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a quadratic easing in and out, acceleration until halfway, then deceleration."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9681,
											"character": 21
										}
									],
									"defaultValue": "4"
								},
								{
									"id": 1624,
									"name": "EaseInOutQuart",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a quartic easing in and out - acceleration until halfway, then deceleration."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9705,
											"character": 22
										}
									],
									"defaultValue": "10"
								},
								{
									"id": 1627,
									"name": "EaseInOutQuint",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a quintic easing in and out - acceleration until halfway, then deceleration."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9717,
											"character": 22
										}
									],
									"defaultValue": "13"
								},
								{
									"id": 1630,
									"name": "EaseInOutSine",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a sinusoidal easing in and out - acceleration until halfway, then deceleration."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9729,
											"character": 21
										}
									],
									"defaultValue": "16"
								},
								{
									"id": 1616,
									"name": "EaseInQuad",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a quadratic easing in, accelerating from zero velocity."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9673,
											"character": 18
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1622,
									"name": "EaseInQuart",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a quartic easing in - accelerating from zero velocity."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9697,
											"character": 19
										}
									],
									"defaultValue": "8"
								},
								{
									"id": 1625,
									"name": "EaseInQuint",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a quintic easing in - accelerating from zero velocity."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9709,
											"character": 19
										}
									],
									"defaultValue": "11"
								},
								{
									"id": 1628,
									"name": "EaseInSine",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a sinusoidal easing in - accelerating from zero velocity."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9721,
											"character": 18
										}
									],
									"defaultValue": "14"
								},
								{
									"id": 1638,
									"name": "EaseOutBack",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a back easing out - decelerating to zero velocity."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9761,
											"character": 19
										}
									],
									"defaultValue": "24"
								},
								{
									"id": 1641,
									"name": "EaseOutBounce",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a bounce easing out - decelerating to zero velocity."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9773,
											"character": 21
										}
									],
									"defaultValue": "27"
								},
								{
									"id": 1635,
									"name": "EaseOutCirc",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a circular easing out - decelerating to zero velocity."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9749,
											"character": 19
										}
									],
									"defaultValue": "21"
								},
								{
									"id": 1620,
									"name": "EaseOutCubic",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a cubic easing out - decelerating to zero velocity."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9689,
											"character": 20
										}
									],
									"defaultValue": "6"
								},
								{
									"id": 1644,
									"name": "EaseOutElastic",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for an elastic easing out - decelerating to zero velocity."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9785,
											"character": 22
										}
									],
									"defaultValue": "30"
								},
								{
									"id": 1632,
									"name": "EaseOutExpo",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for an exponential easing out - decelerating to zero velocity."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9737,
											"character": 19
										}
									],
									"defaultValue": "18"
								},
								{
									"id": 1617,
									"name": "EaseOutQuad",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a quadratic easing out, decelerating to zero velocity."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9677,
											"character": 19
										}
									],
									"defaultValue": "3"
								},
								{
									"id": 1623,
									"name": "EaseOutQuart",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a quartic easing out - decelerating to zero velocity."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9701,
											"character": 20
										}
									],
									"defaultValue": "9"
								},
								{
									"id": 1626,
									"name": "EaseOutQuint",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a quintic easing out - decelerating to zero velocity."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9713,
											"character": 20
										}
									],
									"defaultValue": "12"
								},
								{
									"id": 1629,
									"name": "EaseOutSine",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a sinusoidal easing out - decelerating to zero velocity."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9725,
											"character": 19
										}
									],
									"defaultValue": "15"
								},
								{
									"id": 1614,
									"name": "Linear",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Simple linear tweening, no easing and no acceleration."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9665,
											"character": 14
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1615,
									"name": "Swing",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a swing easing."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9669,
											"character": 13
										}
									],
									"defaultValue": "1"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1637,
										1640,
										1634,
										1619,
										1643,
										1631,
										1639,
										1642,
										1636,
										1621,
										1645,
										1633,
										1618,
										1624,
										1627,
										1630,
										1616,
										1622,
										1625,
										1628,
										1638,
										1641,
										1635,
										1620,
										1644,
										1632,
										1617,
										1623,
										1626,
										1629,
										1614,
										1615
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 9661,
									"character": 31
								}
							]
						},
						{
							"id": 1646,
							"name": "AnimationMode",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents animation mode."
							},
							"children": [
								{
									"id": 1647,
									"name": "All",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "All"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9804,
											"character": 11
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1649,
									"name": "Group",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Group"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9812,
											"character": 13
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1648,
									"name": "Point",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Point."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9808,
											"character": 13
										}
									],
									"defaultValue": "1"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1647,
										1649,
										1648
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 9800,
									"character": 29
								}
							]
						},
						{
							"id": 1650,
							"name": "AxisMode",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the axis mode."
							},
							"children": [
								{
									"id": 1651,
									"name": "Cartesian",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Cartesian axis"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9828,
											"character": 17
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1653,
									"name": "Polygonal",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Polygonal axis"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9836,
											"character": 17
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1652,
									"name": "Radial",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Radial axis"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9832,
											"character": 14
										}
									],
									"defaultValue": "1"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1651,
										1653,
										1652
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 9823,
									"character": 24
								}
							]
						},
						{
							"id": 1654,
							"name": "AxisPosition",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the position of axis."
							},
							"children": [
								{
									"id": 1657,
									"name": "Far",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Far position.\nRight or top for the cartesian charts."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9861,
											"character": 11
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1656,
									"name": "Near",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Near position.\nLeft or bottom for the cartesian charts."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9856,
											"character": 12
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 1655,
									"name": "None",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Hidden axis."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9851,
											"character": 12
										}
									],
									"defaultValue": "0"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1657,
										1656,
										1655
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 9847,
									"character": 28
								}
							]
						},
						{
							"id": 1658,
							"name": "AxisType",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the axis type."
							},
							"children": [
								{
									"id": 1659,
									"name": "X",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Category axis.\nIt represents the horizontal axis normally."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9877,
											"character": 9
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1660,
									"name": "Y",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Value axis.\nIt represents the vertical axis normally."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9882,
											"character": 9
										}
									],
									"defaultValue": "1"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1659,
										1660
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 9872,
									"character": 24
								}
							]
						},
						{
							"id": 1661,
							"name": "ClippingMode",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the clipping mode."
							},
							"children": [
								{
									"id": 1664,
									"name": "Clip",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Clips the plot elements along the bounds of the plot area."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9906,
											"character": 12
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1663,
									"name": "Fit",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Fits the plot elements into the plot area."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9902,
											"character": 11
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 1662,
									"name": "None",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "No clipping.\nThe plot elements may overlap the plot area bounds."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9898,
											"character": 12
										}
									],
									"defaultValue": "0"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1664,
										1663,
										1662
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 9893,
									"character": 28
								}
							]
						},
						{
							"id": 1665,
							"name": "ColorOptionType",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the color option type."
							},
							"children": [
								{
									"id": 1668,
									"name": "CssColor",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Css color."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9929,
											"character": 16
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1666,
									"name": "Linear",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Linear"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9921,
											"character": 14
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1667,
									"name": "Radial",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Radial"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9925,
											"character": 14
										}
									],
									"defaultValue": "1"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1668,
										1666,
										1667
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 9917,
									"character": 31
								}
							]
						},
						{
							"id": 1677,
							"name": "DateMode",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents Date mode."
							},
							"children": [
								{
									"id": 1682,
									"name": "Day",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Date mode is day."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10000,
											"character": 11
										}
									]
								},
								{
									"id": 1681,
									"name": "Hour",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Date mode is hour."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9996,
											"character": 12
										}
									]
								},
								{
									"id": 1678,
									"name": "MilliSecond",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Date mode is millisecond."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9984,
											"character": 19
										}
									]
								},
								{
									"id": 1680,
									"name": "Minute",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Date mode is minute."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9992,
											"character": 14
										}
									]
								},
								{
									"id": 1684,
									"name": "Month",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Date mode is month."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10008,
											"character": 13
										}
									]
								},
								{
									"id": 1679,
									"name": "Second",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Date mode is second."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 9988,
											"character": 14
										}
									]
								},
								{
									"id": 1683,
									"name": "Week",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Date mode is week."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10004,
											"character": 12
										}
									]
								},
								{
									"id": 1685,
									"name": "Year",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Date mode is year."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10012,
											"character": 12
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1682,
										1681,
										1678,
										1680,
										1684,
										1679,
										1683,
										1685
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 9980,
									"character": 24
								}
							]
						},
						{
							"id": 46036,
							"name": "DetailLevel",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the detail level in the reference line overlay."
							},
							"children": [
								{
									"id": 46037,
									"name": "Group",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "A reference line is generated for each group."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 118699,
											"character": 13
										}
									]
								},
								{
									"id": 46038,
									"name": "Total",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "A single reference line is generated for all groups calculated as one."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 118703,
											"character": 13
										}
									]
								},
								{
									"id": 46039,
									"name": "Trellis",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "A single reference line is generated for each trellis cell."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 118707,
											"character": 15
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										46037,
										46038,
										46039
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 118695,
									"character": 27
								}
							]
						},
						{
							"id": 1686,
							"name": "ElementType",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the plot element type."
							},
							"children": [
								{
									"id": 1699,
									"name": "Axis",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Axis."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10080,
											"character": 12
										}
									],
									"defaultValue": "9"
								},
								{
									"id": 1700,
									"name": "AxisLabel",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Axis label."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10084,
											"character": 17
										}
									],
									"defaultValue": "265"
								},
								{
									"id": 1701,
									"name": "AxisTitle",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Axis title."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10088,
											"character": 17
										}
									],
									"defaultValue": "521"
								},
								{
									"id": 1702,
									"name": "AxisUnitLabel",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Axis label."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10092,
											"character": 21
										}
									],
									"defaultValue": "777"
								},
								{
									"id": 1687,
									"name": "Control",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Control"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10027,
											"character": 15
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1696,
									"name": "DataPoint",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Data Point"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10066,
											"character": 17
										}
									],
									"defaultValue": "7"
								},
								{
									"id": 1697,
									"name": "DataPointLabel",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Data Point Label"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10070,
											"character": 22
										}
									],
									"defaultValue": "263"
								},
								{
									"id": 1714,
									"name": "EllipseOverlayItem",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Ellipse Overlay Item"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10143,
											"character": 26
										}
									],
									"defaultValue": "785"
								},
								{
									"id": 1720,
									"name": "ErrorBarOverlayItem",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "ErrorBar overlay Item"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10167,
											"character": 27
										}
									],
									"defaultValue": "2321"
								},
								{
									"id": 1689,
									"name": "Footter",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Footer"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10035,
											"character": 15
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1703,
									"name": "GridLine",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Grid Line"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10097,
											"character": 16
										}
									],
									"defaultValue": "10"
								},
								{
									"id": 1688,
									"name": "Header",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Header"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10031,
											"character": 14
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 1715,
									"name": "ImageOverlayItem",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Image Overlay Item"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10147,
											"character": 24
										}
									],
									"defaultValue": "1041"
								},
								{
									"id": 1691,
									"name": "Legend",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Legend"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10044,
											"character": 14
										}
									],
									"defaultValue": "4"
								},
								{
									"id": 1692,
									"name": "LegendItem",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Legend item"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10048,
											"character": 18
										}
									],
									"defaultValue": "260"
								},
								{
									"id": 1693,
									"name": "LegendTitle",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Legend title."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10052,
											"character": 19
										}
									],
									"defaultValue": "516"
								},
								{
									"id": 1716,
									"name": "LineOverlayItem",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Line Overlay Item"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10151,
											"character": 23
										}
									],
									"defaultValue": "1297"
								},
								{
									"id": 1717,
									"name": "NeedleOverlayItem",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Needle Overlay Item"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10155,
											"character": 25
										}
									],
									"defaultValue": "1553"
								},
								{
									"id": 1721,
									"name": "Overlay",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Overlay"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10171,
											"character": 15
										}
									],
									"defaultValue": "18"
								},
								{
									"id": 1711,
									"name": "OverlayItem",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Overlay Item"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10131,
											"character": 19
										}
									],
									"defaultValue": "17"
								},
								{
									"id": 1695,
									"name": "Plot",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Plot"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10061,
											"character": 12
										}
									],
									"defaultValue": "6"
								},
								{
									"id": 1690,
									"name": "PlotArea",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "PlotArea"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10039,
											"character": 16
										}
									],
									"defaultValue": "3"
								},
								{
									"id": 1694,
									"name": "PlotsPane",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Plot"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10057,
											"character": 17
										}
									],
									"defaultValue": "5"
								},
								{
									"id": 1713,
									"name": "RectangleOverlayItem",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Rectangle Overlay Item"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10139,
											"character": 28
										}
									],
									"defaultValue": "529"
								},
								{
									"id": 1719,
									"name": "ReferenceLineOverlayItem",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Reference line Item"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10163,
											"character": 32
										}
									],
									"defaultValue": "2065"
								},
								{
									"id": 1698,
									"name": "Series",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Series"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10075,
											"character": 14
										}
									],
									"defaultValue": "8"
								},
								{
									"id": 1712,
									"name": "TextOverlayItem",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Text Overlay Item"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10135,
											"character": 23
										}
									],
									"defaultValue": "273"
								},
								{
									"id": 1704,
									"name": "Trellis",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Trellis"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10102,
											"character": 15
										}
									],
									"defaultValue": "16"
								},
								{
									"id": 1709,
									"name": "TrellisCell",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Trellis Cell"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10122,
											"character": 19
										}
									],
									"defaultValue": "1296"
								},
								{
									"id": 1708,
									"name": "TrellisColumn",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Trellis Cell"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10118,
											"character": 21
										}
									],
									"defaultValue": "1040"
								},
								{
									"id": 1706,
									"name": "TrellisColumnHeader",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Trellis Column Header"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10110,
											"character": 27
										}
									],
									"defaultValue": "528"
								},
								{
									"id": 1710,
									"name": "TrellisCorner",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Trellis Corner"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10126,
											"character": 21
										}
									],
									"defaultValue": "1552"
								},
								{
									"id": 1707,
									"name": "TrellisRow",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Trellis Cell"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10114,
											"character": 18
										}
									],
									"defaultValue": "784"
								},
								{
									"id": 1705,
									"name": "TrellisRowHeader",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Trellis Row Header"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10106,
											"character": 24
										}
									],
									"defaultValue": "272"
								},
								{
									"id": 1718,
									"name": "TrendLineOverlayItem",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Trend line Item"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10159,
											"character": 28
										}
									],
									"defaultValue": "1809"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1699,
										1700,
										1701,
										1702,
										1687,
										1696,
										1697,
										1714,
										1720,
										1689,
										1703,
										1688,
										1715,
										1691,
										1692,
										1693,
										1716,
										1717,
										1721,
										1711,
										1695,
										1690,
										1694,
										1713,
										1719,
										1698,
										1712,
										1704,
										1709,
										1708,
										1706,
										1710,
										1707,
										1705,
										1718
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 10023,
									"character": 27
								}
							]
						},
						{
							"id": 19465,
							"name": "ErrorBarDirection",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the direction of error bar."
							},
							"children": [
								{
									"id": 19466,
									"name": "Both",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Both"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 62609,
											"character": 12
										}
									]
								},
								{
									"id": 19468,
									"name": "Minus",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Minus"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 62617,
											"character": 13
										}
									]
								},
								{
									"id": 19467,
									"name": "Plus",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Plus"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 62613,
											"character": 12
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										19466,
										19468,
										19467
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 62605,
									"character": 33
								}
							]
						},
						{
							"id": 19469,
							"name": "ErrorBarErrorType",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the type of error bar."
							},
							"children": [
								{
									"id": 19474,
									"name": "Custom",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Custom"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 62648,
											"character": 14
										}
									]
								},
								{
									"id": 19473,
									"name": "Fixed",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Fixed"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 62644,
											"character": 13
										}
									]
								},
								{
									"id": 19472,
									"name": "Percentage",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Percentage"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 62640,
											"character": 18
										}
									]
								},
								{
									"id": 19470,
									"name": "StandardDeviation",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "StandardDeviation"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 62632,
											"character": 25
										}
									]
								},
								{
									"id": 19471,
									"name": "StandardError",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "StandardError"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 62636,
											"character": 21
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										19474,
										19473,
										19472,
										19470,
										19471
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 62628,
									"character": 33
								}
							]
						},
						{
							"id": 19475,
							"name": "ErrorBarOrientation",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents orientation of error bar."
							},
							"children": [
								{
									"id": 19476,
									"name": "Auto",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 62660,
											"character": 12
										}
									]
								},
								{
									"id": 19477,
									"name": "Horizontal",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Horizontal orientation"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 62664,
											"character": 18
										}
									]
								},
								{
									"id": 19478,
									"name": "Vertical",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Vertical orientation"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 62668,
											"character": 16
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										19476,
										19477,
										19478
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 62659,
									"character": 35
								}
							]
						},
						{
							"id": 1722,
							"name": "FontStyle",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the font style type."
							},
							"children": [
								{
									"id": 1724,
									"name": "Italic",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Italic"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10190,
											"character": 14
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 1723,
									"name": "Normal",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Normal"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10186,
											"character": 14
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1725,
									"name": "Oblique",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Oblique"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10194,
											"character": 15
										}
									],
									"defaultValue": "2"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1724,
										1723,
										1725
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 10182,
									"character": 25
								}
							]
						},
						{
							"id": 1726,
							"name": "FontWeight",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the font weight type."
							},
							"children": [
								{
									"id": 1728,
									"name": "Bold",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Bold"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10213,
											"character": 12
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 1727,
									"name": "Normal",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Normal"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10209,
											"character": 14
										}
									],
									"defaultValue": "0"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1728,
										1727
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 10205,
									"character": 26
								}
							]
						},
						{
							"id": 1738,
							"name": "GradientExtentKeyword",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the extend keyword in the radial gradient."
							},
							"children": [
								{
									"id": 1740,
									"name": "ClosestCorner",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The gradient's ending shape is sized so that it exactly meets the closest corner of the box from its center."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10274,
											"character": 21
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 1739,
									"name": "ClosestSide",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The gradient's ending shape meets the side of the box closest to its center."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10270,
											"character": 19
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1742,
									"name": "FarthestCorner",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The gradient's ending shape is sized so that it exactly meets the farthest corner of the box from its center."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10282,
											"character": 22
										}
									],
									"defaultValue": "3"
								},
								{
									"id": 1741,
									"name": "FarthestSide",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The gradient's ending shape meets the side of the box farthest to its center."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10278,
											"character": 20
										}
									],
									"defaultValue": "2"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1740,
										1739,
										1742,
										1741
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 10266,
									"character": 37
								}
							]
						},
						{
							"id": 1743,
							"name": "GradientFillDirection",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the fill direction in the radial gradient."
							},
							"children": [
								{
									"id": 1744,
									"name": "Default",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The default behaviour."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10297,
											"character": 15
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1746,
									"name": "InnerRadius",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The inner radius to radius direction."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10305,
											"character": 19
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1745,
									"name": "Radius",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The radius direction."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10301,
											"character": 14
										}
									],
									"defaultValue": "1"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1744,
										1746,
										1745
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 10293,
									"character": 37
								}
							]
						},
						{
							"id": 1747,
							"name": "GradientPosition",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the position in the radial gradient."
							},
							"children": [
								{
									"id": 1752,
									"name": "Bottom",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Bottom."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10335,
											"character": 14
										}
									],
									"defaultValue": "4"
								},
								{
									"id": 1748,
									"name": "Center",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Center."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10319,
											"character": 14
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1749,
									"name": "Left",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Left."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10323,
											"character": 12
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 1755,
									"name": "LeftBottom",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Left bottom."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10347,
											"character": 18
										}
									],
									"defaultValue": "7"
								},
								{
									"id": 1753,
									"name": "LeftTop",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Left top."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10339,
											"character": 15
										}
									],
									"defaultValue": "5"
								},
								{
									"id": 1750,
									"name": "Right",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Right."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10327,
											"character": 13
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1756,
									"name": "RightBottom",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Right bottom."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10351,
											"character": 19
										}
									],
									"defaultValue": "8"
								},
								{
									"id": 1754,
									"name": "RightTop",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Right Top."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10343,
											"character": 16
										}
									],
									"defaultValue": "6"
								},
								{
									"id": 1751,
									"name": "Top",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Top."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10331,
											"character": 11
										}
									],
									"defaultValue": "3"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1752,
										1748,
										1749,
										1755,
										1753,
										1750,
										1756,
										1754,
										1751
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 10315,
									"character": 32
								}
							]
						},
						{
							"id": 1729,
							"name": "GradientSideOrCorner",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the side or corner in the linear gradient."
							},
							"children": [
								{
									"id": 1733,
									"name": "ToBottom",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Bottom side."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10240,
											"character": 16
										}
									],
									"defaultValue": "268435456"
								},
								{
									"id": 1730,
									"name": "ToLeft",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Left side."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10228,
											"character": 14
										}
									],
									"defaultValue": "4026531840"
								},
								{
									"id": 1736,
									"name": "ToLeftBottom",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Left bottom corner."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10252,
											"character": 20
										}
									],
									"defaultValue": "4043309056"
								},
								{
									"id": 1734,
									"name": "ToLeftTop",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Left top corner."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10244,
											"character": 17
										}
									],
									"defaultValue": "4076863488"
								},
								{
									"id": 1731,
									"name": "ToRight",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Right side."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10232,
											"character": 15
										}
									],
									"defaultValue": "1879048192"
								},
								{
									"id": 1737,
									"name": "ToRightBottom",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Right bottom corner."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10256,
											"character": 21
										}
									],
									"defaultValue": "1895825408"
								},
								{
									"id": 1735,
									"name": "ToRightTop",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Right Top corner."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10248,
											"character": 18
										}
									],
									"defaultValue": "1929379840"
								},
								{
									"id": 1732,
									"name": "ToTop",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Top side."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10236,
											"character": 13
										}
									],
									"defaultValue": "805306368"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1733,
										1730,
										1736,
										1734,
										1731,
										1737,
										1735,
										1732
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 10224,
									"character": 36
								}
							]
						},
						{
							"id": 1757,
							"name": "Group",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the Grouping options."
							},
							"children": [
								{
									"id": 1758,
									"name": "Cluster",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Cluster grouping.\nIt is default value."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10367,
											"character": 15
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1759,
									"name": "Stack",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Stacked grouping."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10371,
											"character": 13
										}
									],
									"defaultValue": "1"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1758,
										1759
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 10362,
									"character": 21
								}
							]
						},
						{
							"id": 1760,
							"name": "HAlign",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents horizontal alignment."
							},
							"children": [
								{
									"id": 1762,
									"name": "Center",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Center alignemnt"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10390,
											"character": 14
										}
									]
								},
								{
									"id": 1761,
									"name": "Left",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Left alignment"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10386,
											"character": 12
										}
									]
								},
								{
									"id": 1763,
									"name": "Right",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Right alignment"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10394,
											"character": 13
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1762,
										1761,
										1763
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 10382,
									"character": 22
								}
							]
						},
						{
							"id": 1765,
							"name": "HeaderFooterWidthOptionType",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the width Type of header or footer."
							},
							"children": [
								{
									"id": 1766,
									"name": "Auto",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Auto"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10414,
											"character": 12
										}
									],
									"defaultValue": "0"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1766
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 10410,
									"character": 43
								}
							]
						},
						{
							"id": 1767,
							"name": "LegendPosition",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents position of legend view."
							},
							"children": [
								{
									"id": 1771,
									"name": "Bottom",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Bottom"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10441,
											"character": 14
										}
									]
								},
								{
									"id": 1773,
									"name": "Floating",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Floating"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10449,
											"character": 16
										}
									]
								},
								{
									"id": 1768,
									"name": "Left",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Left"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10429,
											"character": 12
										}
									]
								},
								{
									"id": 1772,
									"name": "None",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Hidden"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10445,
											"character": 12
										}
									]
								},
								{
									"id": 1770,
									"name": "Right",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Right"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10437,
											"character": 13
										}
									]
								},
								{
									"id": 1769,
									"name": "Top",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Top"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10433,
											"character": 11
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1771,
										1773,
										1768,
										1772,
										1770,
										1769
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 10425,
									"character": 30
								}
							]
						},
						{
							"id": 1774,
							"name": "LegendType",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents legend type."
							},
							"children": [
								{
									"id": 1775,
									"name": "Color",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Color legend."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10464,
											"character": 13
										}
									]
								},
								{
									"id": 1778,
									"name": "Overlay",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Overlay legend."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10476,
											"character": 15
										}
									]
								},
								{
									"id": 1777,
									"name": "Shape",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Shape legend."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10472,
											"character": 13
										}
									]
								},
								{
									"id": 1776,
									"name": "Size",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Size legend."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10468,
											"character": 12
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1775,
										1778,
										1777,
										1776
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 10460,
									"character": 26
								}
							]
						},
						{
							"id": 1779,
							"name": "LineAspect",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Specifies type of the line."
							},
							"children": [
								{
									"id": 1780,
									"name": "Default",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The default line type indicating the straight lines from the point to point."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10491,
											"character": 15
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1781,
									"name": "Spline",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The spline line type indicating the smoothed lines from the point to point."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10495,
											"character": 14
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 1784,
									"name": "StepCenter",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The step line type indicating half horizontal lines, the vertical line and half horizontal line. The data point is centered on the step."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10507,
											"character": 18
										}
									],
									"defaultValue": "4"
								},
								{
									"id": 1782,
									"name": "StepLeft",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The step line type indicating the vertical lines before the horizontal line."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10499,
											"character": 16
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1783,
									"name": "StepRight",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The step line type indicating the horizontal lines before the vertical line."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10503,
											"character": 17
										}
									],
									"defaultValue": "3"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1780,
										1781,
										1784,
										1782,
										1783
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 10487,
									"character": 26
								}
							]
						},
						{
							"id": 21140,
							"name": "LinePlacement",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents placement of line."
							},
							"children": [
								{
									"id": 21143,
									"name": "Center",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Center"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 67875,
											"character": 14
										}
									]
								},
								{
									"id": 21142,
									"name": "End",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "End"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 67871,
											"character": 11
										}
									]
								},
								{
									"id": 21141,
									"name": "Start",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Start"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 67867,
											"character": 13
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										21143,
										21142,
										21141
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 67863,
									"character": 29
								}
							]
						},
						{
							"id": 1793,
							"name": "LinePosition",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Line position"
							},
							"children": [
								{
									"id": 1794,
									"name": "Auto",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Automatical"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10570,
											"character": 12
										}
									]
								},
								{
									"id": 1795,
									"name": "Center",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Center."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10574,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1794,
										1795
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 10566,
									"character": 28
								}
							]
						},
						{
							"id": 1796,
							"name": "OrderType",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents order type."
							},
							"children": [
								{
									"id": 1797,
									"name": "Ascending",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Ascending order."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10589,
											"character": 17
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1798,
									"name": "Descending",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Descending order."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10593,
											"character": 18
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 1799,
									"name": "None",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "None"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10597,
											"character": 12
										}
									],
									"defaultValue": "2"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1797,
										1798,
										1799
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 10585,
									"character": 25
								}
							]
						},
						{
							"id": 1800,
							"name": "Orientation",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents orientation of plot element."
							},
							"children": [
								{
									"id": 1801,
									"name": "Horizontal",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Horizontal orientation"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10612,
											"character": 18
										}
									]
								},
								{
									"id": 1802,
									"name": "Vertical",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Vertical orientation"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10616,
											"character": 16
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1801,
										1802
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 10608,
									"character": 27
								}
							]
						},
						{
							"id": 1804,
							"name": "OverlappingLabels",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents how to handle overlapping labels."
							},
							"children": [
								{
									"id": 1805,
									"name": "Auto",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Hide overlapping labels.\nIt is default value."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10637,
											"character": 12
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1807,
									"name": "Hide",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Hides all data labels that overlap each other data labels."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10645,
											"character": 12
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1808,
									"name": "HideAll",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Hides all data labels that overlap all text labels."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10649,
											"character": 15
										}
									],
									"defaultValue": "3"
								},
								{
									"id": 1806,
									"name": "Show",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Show all labels, including overlapping ones."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10641,
											"character": 12
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 1809,
									"name": "Smart",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "(pie only) Used to help avoid overlap by adjust label position"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10653,
											"character": 13
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1805,
										1807,
										1808,
										1806,
										1809
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 10632,
									"character": 33
								}
							]
						},
						{
							"id": 1822,
							"name": "OverlayDisplay",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the overlay display."
							},
							"children": [
								{
									"id": 1824,
									"name": "Back",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Back."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10734,
											"character": 12
										}
									]
								},
								{
									"id": 1826,
									"name": "BackOfPlot",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Back of plot."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10742,
											"character": 18
										}
									]
								},
								{
									"id": 1823,
									"name": "Front",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Front."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10730,
											"character": 13
										}
									]
								},
								{
									"id": 1825,
									"name": "FrontOfPlot",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Front of plot."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10738,
											"character": 19
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1824,
										1826,
										1823,
										1825
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 10726,
									"character": 30
								}
							]
						},
						{
							"id": 1810,
							"name": "OverlayLabelDisplay",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the aggregate options."
							},
							"children": [
								{
									"id": 1813,
									"name": "Both",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Both."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10676,
											"character": 12
										}
									]
								},
								{
									"id": 1811,
									"name": "Legend",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Legend."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10668,
											"character": 14
										}
									]
								},
								{
									"id": 1814,
									"name": "None",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "None."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10680,
											"character": 12
										}
									]
								},
								{
									"id": 1812,
									"name": "Plot",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Plot."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10672,
											"character": 12
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1813,
										1811,
										1814,
										1812
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 10664,
									"character": 35
								}
							]
						},
						{
							"id": 1815,
							"name": "OverlayLabelPosition",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the aggregate options."
							},
							"children": [
								{
									"id": 1820,
									"name": "BottomCenter",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Bottom center."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10711,
											"character": 20
										}
									]
								},
								{
									"id": 1819,
									"name": "BottomLeft",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Bottom left."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10707,
											"character": 18
										}
									]
								},
								{
									"id": 1821,
									"name": "BottomRight",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Bottom right."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10715,
											"character": 19
										}
									]
								},
								{
									"id": 1817,
									"name": "TopCenter",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Top center."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10699,
											"character": 17
										}
									]
								},
								{
									"id": 1816,
									"name": "TopLeft",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Top left."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10695,
											"character": 15
										}
									]
								},
								{
									"id": 1818,
									"name": "TopRight",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Top right."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10703,
											"character": 16
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1820,
										1819,
										1821,
										1817,
										1816,
										1818
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 10691,
									"character": 36
								}
							]
						},
						{
							"id": 1827,
							"name": "Palette",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents predefined palette."
							},
							"children": [
								{
									"id": 1866,
									"name": "Aspect",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Aspect."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10909,
											"character": 14
										}
									],
									"defaultValue": "38"
								},
								{
									"id": 1848,
									"name": "Blue",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Blue."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10837,
											"character": 12
										}
									],
									"defaultValue": "20"
								},
								{
									"id": 1849,
									"name": "Blue2",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Blue2."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10841,
											"character": 13
										}
									],
									"defaultValue": "21"
								},
								{
									"id": 1850,
									"name": "BlueGreen",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "BlueGreen."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10845,
											"character": 17
										}
									],
									"defaultValue": "22"
								},
								{
									"id": 1847,
									"name": "BlueWarm",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "BlueWarm."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10833,
											"character": 16
										}
									],
									"defaultValue": "19"
								},
								{
									"id": 1843,
									"name": "Cerulan",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Cerulan."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10816,
											"character": 15
										}
									],
									"defaultValue": "15"
								},
								{
									"id": 1829,
									"name": "Cocoa",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Cocoa."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10760,
											"character": 13
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 1830,
									"name": "Coral",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Coral."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10764,
											"character": 13
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1839,
									"name": "Cyborg",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Cyborg."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10800,
											"character": 14
										}
									],
									"defaultValue": "11"
								},
								{
									"id": 1831,
									"name": "Dark",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Dark."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10768,
											"character": 12
										}
									],
									"defaultValue": "3"
								},
								{
									"id": 1842,
									"name": "Darkly",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Darkly."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10812,
											"character": 14
										}
									],
									"defaultValue": "14"
								},
								{
									"id": 1841,
									"name": "Flatly",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Flatly."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10808,
											"character": 14
										}
									],
									"defaultValue": "13"
								},
								{
									"id": 1846,
									"name": "Grayscale",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Grayscale."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10829,
											"character": 17
										}
									],
									"defaultValue": "18"
								},
								{
									"id": 1851,
									"name": "Green",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Green."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10849,
											"character": 13
										}
									],
									"defaultValue": "23"
								},
								{
									"id": 1852,
									"name": "GreenYellow",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "GreenYellow."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10853,
											"character": 19
										}
									],
									"defaultValue": "24"
								},
								{
									"id": 1832,
									"name": "HighContrast",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "HighContrast."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10772,
											"character": 20
										}
									],
									"defaultValue": "4"
								},
								{
									"id": 1833,
									"name": "Light",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Light."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10776,
											"character": 13
										}
									],
									"defaultValue": "5"
								},
								{
									"id": 1864,
									"name": "Marquee",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Marquee."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10901,
											"character": 15
										}
									],
									"defaultValue": "36"
								},
								{
									"id": 1862,
									"name": "Median",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Median."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10893,
											"character": 14
										}
									],
									"defaultValue": "34"
								},
								{
									"id": 1834,
									"name": "Midnight",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Midnight."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10780,
											"character": 16
										}
									],
									"defaultValue": "6"
								},
								{
									"id": 1835,
									"name": "Modern",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Modern."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10784,
											"character": 14
										}
									],
									"defaultValue": "7"
								},
								{
									"id": 1844,
									"name": "Office",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Office.\nIt is the default value."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10821,
											"character": 14
										}
									],
									"defaultValue": "16"
								},
								{
									"id": 1845,
									"name": "Office2010",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Office2010."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10825,
											"character": 18
										}
									],
									"defaultValue": "17"
								},
								{
									"id": 1855,
									"name": "Orange",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Orange."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10865,
											"character": 14
										}
									],
									"defaultValue": "27"
								},
								{
									"id": 1856,
									"name": "OrangeRed",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "OrangeRed."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10869,
											"character": 17
										}
									],
									"defaultValue": "28"
								},
								{
									"id": 1836,
									"name": "Organic",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Organic."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10788,
											"character": 15
										}
									],
									"defaultValue": "8"
								},
								{
									"id": 1863,
									"name": "Paper",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Paper."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10897,
											"character": 13
										}
									],
									"defaultValue": "35"
								},
								{
									"id": 1858,
									"name": "Red",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Red."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10877,
											"character": 11
										}
									],
									"defaultValue": "30"
								},
								{
									"id": 1857,
									"name": "RedOrange",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "RedOrange."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10873,
											"character": 17
										}
									],
									"defaultValue": "29"
								},
								{
									"id": 1859,
									"name": "RedViolet",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "RedViolet."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10881,
											"character": 17
										}
									],
									"defaultValue": "31"
								},
								{
									"id": 1837,
									"name": "Slate",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Slate."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10792,
											"character": 13
										}
									],
									"defaultValue": "9"
								},
								{
									"id": 1865,
									"name": "Slipstream",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Slipstream."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10905,
											"character": 18
										}
									],
									"defaultValue": "37"
								},
								{
									"id": 1828,
									"name": "Standard",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Standard."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10756,
											"character": 16
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1840,
									"name": "Superhero",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Superhero."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10804,
											"character": 17
										}
									],
									"defaultValue": "12"
								},
								{
									"id": 1860,
									"name": "Violet",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Violet."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10885,
											"character": 14
										}
									],
									"defaultValue": "32"
								},
								{
									"id": 1861,
									"name": "Violet2",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Violet2."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10889,
											"character": 15
										}
									],
									"defaultValue": "33"
								},
								{
									"id": 1853,
									"name": "Yellow",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Yellow."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10857,
											"character": 14
										}
									],
									"defaultValue": "25"
								},
								{
									"id": 1854,
									"name": "YellowOrange",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "YellowOrange."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10861,
											"character": 20
										}
									],
									"defaultValue": "26"
								},
								{
									"id": 1838,
									"name": "Zen",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Zen."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10796,
											"character": 11
										}
									],
									"defaultValue": "10"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1866,
										1848,
										1849,
										1850,
										1847,
										1843,
										1829,
										1830,
										1839,
										1831,
										1842,
										1841,
										1846,
										1851,
										1852,
										1832,
										1833,
										1864,
										1862,
										1834,
										1835,
										1844,
										1845,
										1855,
										1856,
										1836,
										1863,
										1858,
										1857,
										1859,
										1837,
										1865,
										1828,
										1840,
										1860,
										1861,
										1853,
										1854,
										1838
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 10752,
									"character": 23
								}
							]
						},
						{
							"id": 1870,
							"name": "PercentileType",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the Precentile type."
							},
							"children": [
								{
									"id": 1871,
									"name": "Exclusive",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "exclusive"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10940,
											"character": 17
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1872,
									"name": "Inclusive",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Inclusive"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10944,
											"character": 17
										}
									],
									"defaultValue": "1"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1871,
										1872
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 10936,
									"character": 30
								}
							]
						},
						{
							"id": 1873,
							"name": "Placement",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents placement of Annotation."
							},
							"children": [
								{
									"id": 1874,
									"name": "Auto",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Auto"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10959,
											"character": 12
										}
									]
								},
								{
									"id": 1878,
									"name": "Bottom",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Bottom"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10975,
											"character": 14
										}
									]
								},
								{
									"id": 1875,
									"name": "Left",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Left"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10963,
											"character": 12
										}
									]
								},
								{
									"id": 1877,
									"name": "Right",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Right"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10971,
											"character": 13
										}
									]
								},
								{
									"id": 1876,
									"name": "Top",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Top"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10967,
											"character": 11
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1874,
										1878,
										1875,
										1877,
										1876
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 10955,
									"character": 25
								}
							]
						},
						{
							"id": 1879,
							"name": "PlotType",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the plot types."
							},
							"children": [
								{
									"id": 1883,
									"name": "Area",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Area plot."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11002,
											"character": 12
										}
									]
								},
								{
									"id": 1880,
									"name": "Bar",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Bar plot."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10990,
											"character": 11
										}
									]
								},
								{
									"id": 1881,
									"name": "Line",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Line plot."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10994,
											"character": 12
										}
									]
								},
								{
									"id": 1882,
									"name": "Scatter",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Scatter plot."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 10998,
											"character": 15
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1883,
										1880,
										1881,
										1882
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 10986,
									"character": 24
								}
							]
						},
						{
							"id": 1884,
							"name": "Position",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents position of plot elements."
							},
							"children": [
								{
									"id": 1888,
									"name": "Bottom",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Bottom"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11029,
											"character": 14
										}
									]
								},
								{
									"id": 1885,
									"name": "Left",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Left"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11017,
											"character": 12
										}
									]
								},
								{
									"id": 1889,
									"name": "None",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Hidden"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11033,
											"character": 12
										}
									]
								},
								{
									"id": 1887,
									"name": "Right",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Right"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11025,
											"character": 13
										}
									]
								},
								{
									"id": 1886,
									"name": "Top",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Top"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11021,
											"character": 11
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1888,
										1885,
										1889,
										1887,
										1886
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 11013,
									"character": 24
								}
							]
						},
						{
							"id": 1890,
							"name": "ReferenceLineAggregate",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the aggregate options."
							},
							"children": [
								{
									"id": 1893,
									"name": "Average",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Average value of the numeric values in the group."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11056,
											"character": 15
										}
									],
									"defaultValue": "3"
								},
								{
									"id": 1892,
									"name": "Count",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Count of non-null values in the group."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11052,
											"character": 13
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1894,
									"name": "Max",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Maximum value in the group."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11060,
											"character": 11
										}
									],
									"defaultValue": "4"
								},
								{
									"id": 1896,
									"name": "Median",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Median of all values in the group"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11068,
											"character": 14
										}
									],
									"defaultValue": "6"
								},
								{
									"id": 1895,
									"name": "Min",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Minimum value in the group."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11064,
											"character": 11
										}
									],
									"defaultValue": "5"
								},
								{
									"id": 1897,
									"name": "Percentile",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Percentile of all values in the group"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11072,
											"character": 18
										}
									],
									"defaultValue": "7"
								},
								{
									"id": 1891,
									"name": "Sum",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Sum of the numeric values in the group."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11048,
											"character": 11
										}
									],
									"defaultValue": "1"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1893,
										1892,
										1894,
										1896,
										1895,
										1897,
										1891
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 11044,
									"character": 38
								}
							]
						},
						{
							"id": 1898,
							"name": "RenderMethod",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the render method."
							},
							"children": [
								{
									"id": 1901,
									"name": "Canvas",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Render to canvas"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11096,
											"character": 14
										}
									]
								},
								{
									"id": 1899,
									"name": "NotSet",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Default value.\nIt is default value."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11088,
											"character": 14
										}
									]
								},
								{
									"id": 1900,
									"name": "SVG",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Render to SVG."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11092,
											"character": 11
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1901,
										1899,
										1900
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 11083,
									"character": 28
								}
							]
						},
						{
							"id": 1902,
							"name": "SelectionMode",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the selection mode."
							},
							"children": [
								{
									"id": 1912,
									"name": "Category",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Select all corresponding data points related the category."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11147,
											"character": 16
										}
									]
								},
								{
									"id": 1907,
									"name": "Color",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Select all the data points with the same color"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11127,
											"character": 13
										}
									]
								},
								{
									"id": 1913,
									"name": "Custom",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Custom the Selection behavior"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11151,
											"character": 14
										}
									]
								},
								{
									"id": 1906,
									"name": "Group",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Select a group of data points"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11123,
											"character": 13
										}
									]
								},
								{
									"id": 1911,
									"name": "LegendMultiple",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Select all corresponding data points related the multiple legend."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11143,
											"character": 22
										}
									]
								},
								{
									"id": 1910,
									"name": "LegendSingle",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Select all corresponding data points related the single legend."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11139,
											"character": 20
										}
									]
								},
								{
									"id": 1903,
									"name": "None",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Disable the selection behavior"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11111,
											"character": 12
										}
									]
								},
								{
									"id": 1904,
									"name": "Point",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Select one point"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11115,
											"character": 13
										}
									]
								},
								{
									"id": 1905,
									"name": "Points",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Select multi-points with ctrl or command"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11119,
											"character": 14
										}
									]
								},
								{
									"id": 1908,
									"name": "Shape",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Select all the data points with the same shape"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11131,
											"character": 13
										}
									]
								},
								{
									"id": 1909,
									"name": "Size",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Select all the data points with the same size"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11135,
											"character": 12
										}
									]
								},
								{
									"id": 1914,
									"name": "Trellis",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Select all corresponding data points related the trellis header."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11155,
											"character": 15
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1912,
										1907,
										1913,
										1906,
										1911,
										1910,
										1903,
										1904,
										1905,
										1908,
										1909,
										1914
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 11107,
									"character": 29
								}
							]
						},
						{
							"id": 1915,
							"name": "ShowNulls",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents how to show null or empty values."
							},
							"children": [
								{
									"id": 1918,
									"name": "Connected",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Connects missing data points.\nIt is default value."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11179,
											"character": 17
										}
									]
								},
								{
									"id": 1916,
									"name": "Gaps",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Show the null or empty values as a gap."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11170,
											"character": 12
										}
									]
								},
								{
									"id": 1917,
									"name": "Zeros",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Show null or empty as if they were 0."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11174,
											"character": 13
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1918,
										1916,
										1917
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 11166,
									"character": 25
								}
							]
						},
						{
							"id": 1919,
							"name": "SortOrder",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the sort order of the items in the legend."
							},
							"children": [
								{
									"id": 1922,
									"name": "Ascending",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents sorting the items in the legend alphabetically in ascending order."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11202,
											"character": 17
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1923,
									"name": "Descending",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents sorting the items in the legend alphabetically in descending order."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11206,
											"character": 18
										}
									],
									"defaultValue": "3"
								},
								{
									"id": 1920,
									"name": "None",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the default sort order of the items in the legend."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11194,
											"character": 12
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1921,
									"name": "Reversed",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the reversed sort order of the items in the legend."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11198,
											"character": 16
										}
									],
									"defaultValue": "1"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1922,
										1923,
										1920,
										1921
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 11190,
									"character": 25
								}
							]
						},
						{
							"id": 1924,
							"name": "TextDecoration",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the font text decoration."
							},
							"children": [
								{
									"id": 1927,
									"name": "LineThrough",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "line-through"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11229,
											"character": 19
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1925,
									"name": "Normal",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Normal"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11221,
											"character": 14
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1926,
									"name": "Overline",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "overline"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11225,
											"character": 16
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 1928,
									"name": "Underline",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Underline"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11233,
											"character": 17
										}
									],
									"defaultValue": "4"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1927,
										1925,
										1926,
										1928
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 11217,
									"character": 30
								}
							]
						},
						{
							"id": 1929,
							"name": "TextOverflow",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the text overflow."
							},
							"children": [
								{
									"id": 1930,
									"name": "Clip",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The overflow text is clipped.\nIt is default value."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11249,
											"character": 12
										}
									]
								},
								{
									"id": 1931,
									"name": "Ellipsis",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Clipped overflow text and replace it with ellipsis."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11253,
											"character": 16
										}
									]
								},
								{
									"id": 1932,
									"name": "Wrap",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Overflow text wrapped to a new line."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11257,
											"character": 12
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1930,
										1931,
										1932
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 11244,
									"character": 28
								}
							]
						},
						{
							"id": 1933,
							"name": "TextPosition",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the text position."
							},
							"children": [
								{
									"id": 1934,
									"name": "Auto",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Automatic principle: If outside position is out of plot border, use inside."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11272,
											"character": 12
										}
									]
								},
								{
									"id": 1936,
									"name": "Center",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Center of the element."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11280,
											"character": 14
										}
									]
								},
								{
									"id": 1937,
									"name": "Inside",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Insize of the element."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11284,
											"character": 14
										}
									]
								},
								{
									"id": 1935,
									"name": "Outside",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Outside of the element."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11276,
											"character": 15
										}
									]
								},
								{
									"id": 1938,
									"name": "Smart",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Smart for radial chart"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11288,
											"character": 13
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1934,
										1936,
										1937,
										1935,
										1938
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 11268,
									"character": 28
								}
							]
						},
						{
							"id": 1939,
							"name": "TickMark",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents whether and where the axis tick marks appear."
							},
							"children": [
								{
									"id": 1943,
									"name": "Cross",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Tick marks cross the axis."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11315,
											"character": 13
										}
									]
								},
								{
									"id": 1942,
									"name": "Inside",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Tick marks appear inside the plot area."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11311,
											"character": 14
										}
									]
								},
								{
									"id": 1940,
									"name": "None",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "No tick marks appear."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11303,
											"character": 12
										}
									]
								},
								{
									"id": 1941,
									"name": "Outside",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Tick marks appear outside the plot area."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11307,
											"character": 15
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1943,
										1942,
										1940,
										1941
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 11299,
									"character": 24
								}
							]
						},
						{
							"id": 1944,
							"name": "VAlign",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents vertical alignment."
							},
							"children": [
								{
									"id": 1947,
									"name": "Bottom",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Bottom alignment"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11338,
											"character": 14
										}
									]
								},
								{
									"id": 1946,
									"name": "Middle",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Middle alignemnt"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11334,
											"character": 14
										}
									]
								},
								{
									"id": 1945,
									"name": "Top",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Top alignment"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11330,
											"character": 11
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1947,
										1946,
										1945
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 11326,
									"character": 22
								}
							]
						},
						{
							"id": 1949,
							"name": "ValueOptionType",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the value option type."
							},
							"children": [
								{
									"id": 1955,
									"name": "Available",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Available"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11378,
											"character": 17
										}
									],
									"defaultValue": "5"
								},
								{
									"id": 1951,
									"name": "Date",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Date"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11362,
											"character": 12
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 1954,
									"name": "Enum",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Enum"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11374,
											"character": 12
										}
									],
									"defaultValue": "4"
								},
								{
									"id": 1950,
									"name": "Number",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Number"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11358,
											"character": 14
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1952,
									"name": "Percentage",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Percentage"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11366,
											"character": 18
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1953,
									"name": "Pixel",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Pixel"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11370,
											"character": 13
										}
									],
									"defaultValue": "3"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1955,
										1951,
										1954,
										1950,
										1952,
										1953
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 11354,
									"character": 31
								}
							]
						},
						{
							"id": 1956,
							"name": "ValueScaleType",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the scale type."
							},
							"children": [
								{
									"id": 1958,
									"name": "Linear",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Linear scale."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11397,
											"character": 14
										}
									]
								},
								{
									"id": 1959,
									"name": "Logarithmic",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Logarithmic scale."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11401,
											"character": 19
										}
									]
								},
								{
									"id": 1957,
									"name": "Ordinal",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Ordinal scale."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11393,
											"character": 15
										}
									]
								},
								{
									"id": 1960,
									"name": "Percentage",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Percentage scale."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11405,
											"character": 18
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1958,
										1959,
										1957,
										1960
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 11389,
									"character": 30
								}
							]
						},
						{
							"id": 1075,
							"name": "Control",
							"kind": 128,
							"kindString": "Class",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the base control class.",
								"text": "The class handles the association between DOM elements and the actual control.\nAlso, it provides a common pattern for invalidating and refreshing controls,\nfor updating the control layout when its size changes, and for handling\nthe HTML templates that define the control structure.\n"
							},
							"children": [
								{
									"id": 1150,
									"name": "gotFocus",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Occurs when the control gets the focus."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6401,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"name": "Event"
									},
									"defaultValue": " new core.Event()"
								},
								{
									"id": 1154,
									"name": "lostFocus",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Occurs when the control loses the focus."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6411,
											"character": 17
										}
									],
									"type": {
										"type": "reference",
										"name": "Event"
									},
									"defaultValue": " new core.Event()"
								},
								{
									"id": 1131,
									"name": "disabled",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isPublic": true,
										"isExported": true
									},
									"getSignature": [
										{
											"id": 1132,
											"name": "__get",
											"kind": 524288,
											"kindString": "Get signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"setSignature": [
										{
											"id": 1133,
											"name": "__set",
											"kind": 1048576,
											"kindString": "Set signature",
											"flags": {},
											"parameters": [
												{
													"id": 1134,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6302,
											"character": 27
										},
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6306,
											"character": 27
										}
									]
								},
								{
									"id": 1095,
									"name": "hostElement",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the DOM element that is hosting the control."
									},
									"getSignature": [
										{
											"id": 1096,
											"name": "__get",
											"kind": 524288,
											"kindString": "Get signature",
											"flags": {},
											"comment": {
												"shortText": "Gets the DOM element that is hosting the control."
											},
											"type": {
												"type": "reference",
												"name": "HTMLElement"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6102,
											"character": 23
										}
									]
								},
								{
									"id": 1127,
									"name": "isDisabled",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets or sets a value that determines whether the control is disabled.",
										"text": "Disabled controls cannot get mouse or keyboard events.\n"
									},
									"getSignature": [
										{
											"id": 1128,
											"name": "__get",
											"kind": 524288,
											"kindString": "Get signature",
											"flags": {},
											"comment": {
												"shortText": "Gets or sets a value that determines whether the control is disabled.",
												"text": "Disabled controls cannot get mouse or keyboard events.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"setSignature": [
										{
											"id": 1129,
											"name": "__set",
											"kind": 1048576,
											"kindString": "Set signature",
											"flags": {},
											"comment": {
												"shortText": "Gets or sets a value that determines whether the control is disabled.",
												"text": "Disabled controls cannot get mouse or keyboard events.\n"
											},
											"parameters": [
												{
													"id": 1130,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6290,
											"character": 22
										},
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6293,
											"character": 22
										}
									]
								},
								{
									"id": 1125,
									"name": "isTouching",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets a value that indicates whether the control is currently handling a touch event."
									},
									"getSignature": [
										{
											"id": 1126,
											"name": "__get",
											"kind": 524288,
											"kindString": "Get signature",
											"flags": {},
											"comment": {
												"shortText": "Gets a value that indicates whether the control is currently handling a touch event."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6282,
											"character": 22
										}
									]
								},
								{
									"id": 1120,
									"name": "isUpdating",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets a value that indicates whether the control is currently being updated."
									},
									"getSignature": [
										{
											"id": 1121,
											"name": "__get",
											"kind": 524288,
											"kindString": "Get signature",
											"flags": {},
											"comment": {
												"shortText": "Gets a value that indicates whether the control is currently being updated."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6259,
											"character": 22
										}
									]
								},
								{
									"id": 1138,
									"name": "addEventListener",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1139,
											"name": "addEventListener",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Adds an event listener to an element owned by this @see:Control.",
												"text": "The control keeps a list of attached listeners and their handlers,\nmaking it easier to remove them when the control is disposed (see the",
												"tags": [
													{
														"tag": "see:dispose",
														"text": "and @see:removeEventListener method).\n\nFailing to remove event listeners may cause memory leaks.\n"
													}
												]
											},
											"parameters": [
												{
													"id": 1140,
													"name": "target",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Target element for the event."
													},
													"type": {
														"type": "reference",
														"name": "EventTarget"
													}
												},
												{
													"id": 1141,
													"name": "type",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "String that specifies the event."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1142,
													"name": "fn",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Function to execute when the event occurs."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 1143,
													"name": "capture",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Whether the listener is capturing.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "false"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6359,
											"character": 24
										}
									]
								},
								{
									"id": 1084,
									"name": "applyTemplate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1085,
											"name": "applyTemplate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Applies the template to a new instance of a control, and returns the root element.",
												"text": "This method should be called by constructors of templated controls.\nIt is responsible for binding the template parts to the\ncorresponding control members.\n\nFor example, the code below applies a template to an instance\nof an @see:InputNumber control. The template must contain elements\nwith the 'wj-part' attribute set to 'input', 'btn-inc', and 'btn-dec'.\nThe control members '_tbx', '_btnUp', and '_btnDn' will be assigned\nreferences to these elements.\n\n<pre>this.applyTemplate('wj-control wj-inputnumber', template, {\n  _tbx: 'input',\n  _btnUp: 'btn-inc',\n  _btnDn: 'btn-dec'\n}, 'input');</pre>\n"
											},
											"parameters": [
												{
													"id": 1086,
													"name": "classNames",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Names of classes to add to the control's host element."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1087,
													"name": "template",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "An HTML string that defines the control template."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1088,
													"name": "parts",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "A dictionary of part variables and their names."
													},
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												},
												{
													"id": 1089,
													"name": "namePart",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Name of the part to be named after the host element. This\ndetermines how the control submits data when used in forms.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "HTMLElement"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 5900,
											"character": 21
										}
									]
								},
								{
									"id": 1116,
									"name": "beginUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1117,
											"name": "beginUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Suspends notifications until the next call to @see:endUpdate."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6244,
											"character": 19
										}
									]
								},
								{
									"id": 1099,
									"name": "containsFocus",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1100,
											"name": "containsFocus",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Checks whether this control contains the focused element."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6116,
											"character": 21
										}
									]
								},
								{
									"id": 1122,
									"name": "deferUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1123,
											"name": "deferUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Executes a function within a @see:beginUpdate/@see:endUpdate block.",
												"text": "The control will not be updated until the function has been executed.\nThis method ensures @see:endUpdate is called even if the function throws\nan exception.\n"
											},
											"parameters": [
												{
													"id": 1124,
													"name": "fn",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Function to be executed.\n"
													},
													"type": {
														"type": "reference",
														"name": "ControlUpateCallback"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6271,
											"character": 19
										}
									]
								},
								{
									"id": 1090,
									"name": "dispose",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isPublic": true,
										"isExported": true
									},
									"signatures": [
										{
											"id": 1091,
											"name": "dispose",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Disposes of the control by removing its association with the host element.",
												"text": "Calling the method is important in applications that create\nand remove controls dynamically. Failing to dispose of the controls may\ncause memory leaks.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6027,
											"character": 22
										}
									]
								},
								{
									"id": 1118,
									"name": "endUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1119,
											"name": "endUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Resumes notifications suspended by calls to @see:beginUpdate."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6250,
											"character": 17
										}
									]
								},
								{
									"id": 1097,
									"name": "focus",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1098,
											"name": "focus",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Sets the focus to this control."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6108,
											"character": 13
										}
									]
								},
								{
									"id": 1082,
									"name": "getTemplate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1083,
											"name": "getTemplate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Gets the HTML template used to create instances of the control.",
												"text": "This method traverses up the class hierarchy to find the nearest ancestor that\nspecifies a control template. For example, if you specify a prototype for the",
												"tags": [
													{
														"tag": "see:combobox",
														"text": "control, it will override the template defined by the @see:DropDown\nbase class.\n"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 5866,
											"character": 19
										}
									]
								},
								{
									"id": 1135,
									"name": "initialize",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1136,
											"name": "initialize",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Initializes the control by copying the properties from a given object.",
												"text": "This method allows you to initialize controls using plain data objects\ninstead of setting the value of each property in code.\n\nFor example:\n<pre>\ngrid.initialize({\n  itemsSource: myList,\n  autoGenerateColumns: false,\n  columns: [\n    { binding: 'id', header: 'Code', width: 130 },\n    { binding: 'name', header: 'Name', width: 60 }\n  ]\n});\n// is equivalent to\ngrid.itemsSource = myList;\ngrid.autoGenerateColumns = false;\n// etc.\n</pre>\n\nThe initialization data is type-checked as it is applied. If the\ninitialization object contains unknown property names or invalid\ndata types, this method will throw.\n"
											},
											"parameters": [
												{
													"id": 1137,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Object that contains the initialization data.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6338,
											"character": 18
										}
									]
								},
								{
									"id": 1151,
									"name": "onGotFocus",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1152,
											"name": "onGotFocus",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Raises the @see:gotFocus event."
											},
											"parameters": [
												{
													"id": 1153,
													"name": "e",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"name": "EventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6405,
											"character": 18
										}
									]
								},
								{
									"id": 1155,
									"name": "onLostFocus",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1156,
											"name": "onLostFocus",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Raises the @see:lostFocus event."
											},
											"parameters": [
												{
													"id": 1157,
													"name": "e",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"name": "EventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6415,
											"character": 19
										}
									]
								},
								{
									"id": 1104,
									"name": "refresh",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1105,
											"name": "refresh",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Refreshes the control."
											},
											"parameters": [
												{
													"id": 1106,
													"name": "fullUpdate",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Whether to update the control layout as well as the content.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "true"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6165,
											"character": 15
										}
									]
								},
								{
									"id": 1101,
									"name": "refreshDelay",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1102,
											"name": "refreshDelay",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Invalidates the control causing an asynchronous refresh."
											},
											"parameters": [
												{
													"id": 1103,
													"name": "fullUpdate",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Whether to update the control layout as well as the content.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "true"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6148,
											"character": 20
										}
									]
								},
								{
									"id": 1144,
									"name": "removeEventListener",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1145,
											"name": "removeEventListener",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Removes one or more event listeners attached to elements owned by this @see:Control.",
												"returns": "The number of listeners removed.\n"
											},
											"parameters": [
												{
													"id": 1146,
													"name": "target",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Target element for the event. If null, removes listeners attached to all targets."
													},
													"type": {
														"type": "reference",
														"name": "EventTarget"
													}
												},
												{
													"id": 1147,
													"name": "type",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "String that specifies the event. If null, removes listeners attached to all events."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1148,
													"name": "fn",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Handler to remove. If null, removes all handlers."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 1149,
													"name": "capture",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Whether the listener is capturing. If null, removes capturing and non-capturing listeners."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6377,
											"character": 27
										}
									]
								},
								{
									"id": 1113,
									"name": "disposeAll",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isStatic": true,
										"isExported": true
									},
									"signatures": [
										{
											"id": 1114,
											"name": "disposeAll",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Disposes of all gc controls contained in an HTML element."
											},
											"parameters": [
												{
													"id": 1115,
													"name": "e",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Container element.\n"
													},
													"type": {
														"type": "reference",
														"name": "HTMLElement"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6231,
											"character": 25
										}
									]
								},
								{
									"id": 1092,
									"name": "getControl",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isStatic": true,
										"isExported": true
									},
									"signatures": [
										{
											"id": 1093,
											"name": "getControl",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Gets the control that is hosted in a given DOM element."
											},
											"parameters": [
												{
													"id": 1094,
													"name": "element",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The DOM element that is hosting the control, or a selector for the host element (e.g. '#theCtrl').\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Control",
												"id": 1075
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6095,
											"character": 25
										}
									]
								},
								{
									"id": 1107,
									"name": "invalidateAll",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isStatic": true,
										"isExported": true
									},
									"signatures": [
										{
											"id": 1108,
											"name": "invalidateAll",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Invalidates all gc controls contained in an HTML element.",
												"text": "Use this method when your application has dynamic panels that change\nthe control's visibility or dimensions. For example, splitters, accordions,\nand tab controls usually change the visibility of its content elements.\nIn this case, failing to notify the controls contained in the element\nmay cause them to stop working properly.\n\nIf this happens, you must handle the appropriate event in the dynamic\ncontainer and call the @see:Control.invalidateAll method so the contained\ngc controls will update their layout information properly.\n"
											},
											"parameters": [
												{
													"id": 1109,
													"name": "e",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Container element. If set to null, all gc controls\non the page will be invalidated.\n"
													},
													"type": {
														"type": "reference",
														"name": "HTMLElement"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6189,
											"character": 28
										}
									]
								},
								{
									"id": 1110,
									"name": "refreshAll",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isStatic": true,
										"isExported": true
									},
									"signatures": [
										{
											"id": 1111,
											"name": "refreshAll",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Refreshes all gc controls contained in an HTML element.",
												"text": "This method is similar to @see:invalidateAll, except the controls\nare updated immediately rather than after an interval.\n"
											},
											"parameters": [
												{
													"id": 1112,
													"name": "e",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Container element. If set to null, all gc controls\non the page will be invalidated.\n"
													},
													"type": {
														"type": "reference",
														"name": "HTMLElement"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6212,
											"character": 25
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1150,
										1154
									]
								},
								{
									"title": "Accessors",
									"kind": 262144,
									"children": [
										1131,
										1095,
										1127,
										1125,
										1120
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										1138,
										1084,
										1116,
										1099,
										1122,
										1090,
										1118,
										1097,
										1082,
										1135,
										1151,
										1155,
										1104,
										1101,
										1144,
										1113,
										1092,
										1107,
										1110
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 5708,
									"character": 24
								}
							],
							"extendedBy": [
								{
									"type": "reference",
									"name": "FlexDV",
									"id": 2025
								}
							]
						},
						{
							"id": 2025,
							"name": "FlexDV",
							"kind": 128,
							"kindString": "Class",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the data visualization control."
							},
							"children": [
								{
									"id": 2052,
									"name": "constructor",
									"kind": 512,
									"kindString": "Constructor",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Initializes a new instance of the [FlexDV]{@link dv.FlexDV} class."
									},
									"signatures": [
										{
											"id": 2053,
											"name": "new FlexDV",
											"kind": 16384,
											"kindString": "Constructor signature",
											"flags": {},
											"comment": {
												"shortText": "Initializes a new instance of the [FlexDV]{@link dv.FlexDV} class."
											},
											"parameters": [
												{
													"id": 2054,
													"name": "element",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"shortText": "The DOM element hosting the control."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 2055,
													"name": "option",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "The option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 2056,
													"name": "size",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "The initial size.\n"
													},
													"type": {
														"type": "reference",
														"name": "Size"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "FlexDV",
												"id": 2025
											},
											"overwrites": {
												"type": "reference",
												"name": "Control.__constructor"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11657,
											"character": 9
										}
									],
									"overwrites": {
										"type": "reference",
										"name": "Control.__constructor"
									}
								},
								{
									"id": 2042,
									"name": "hitTested",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {
										"isPublic": true,
										"isExported": true
									},
									"comment": {},
									"getSignature": [
										{
											"id": 2043,
											"name": "__get",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "HitTestEvent",
												"id": 1961
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11623,
											"character": 28
										}
									]
								},
								{
									"id": 2044,
									"name": "rendered",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {
										"isPublic": true,
										"isExported": true
									},
									"comment": {},
									"getSignature": [
										{
											"id": 2045,
											"name": "__get",
											"kind": 8388608,
											"kindString": "Event",
											"flags": {},
											"comment": {},
											"type": {
												"type": "reference",
												"name": "RenderedEvent",
												"id": 2000
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11630,
											"character": 27
										}
									]
								},
								{
									"id": 2149,
									"name": "gotFocus",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Occurs when the control gets the focus."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6401,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"name": "Event"
									},
									"defaultValue": " new core.Event()",
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.gotFocus",
										"id": 1150
									}
								},
								{
									"id": 2153,
									"name": "lostFocus",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Occurs when the control loses the focus."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6411,
											"character": 17
										}
									],
									"type": {
										"type": "reference",
										"name": "Event"
									},
									"defaultValue": " new core.Event()",
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.lostFocus",
										"id": 1154
									}
								},
								{
									"id": 2028,
									"name": "devicePixelRatio",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isPublic": true,
										"isExported": true
									},
									"comment": {
										"shortText": "Gets or sets the device pixel ratio."
									},
									"getSignature": [
										{
											"id": 2029,
											"name": "__get",
											"kind": 524288,
											"kindString": "Get signature",
											"flags": {},
											"comment": {
												"shortText": "Gets or sets the device pixel ratio."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"setSignature": [
										{
											"id": 2030,
											"name": "__set",
											"kind": 1048576,
											"kindString": "Set signature",
											"flags": {},
											"comment": {
												"shortText": "Gets or sets the device pixel ratio."
											},
											"parameters": [
												{
													"id": 2031,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11580,
											"character": 35
										},
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11583,
											"character": 35
										}
									]
								},
								{
									"id": 2133,
									"name": "disabled",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isPublic": true,
										"isExported": true
									},
									"getSignature": [
										{
											"id": 2134,
											"name": "__get",
											"kind": 524288,
											"kindString": "Get signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.disabled",
												"id": 1131
											}
										}
									],
									"setSignature": [
										{
											"id": 2135,
											"name": "__set",
											"kind": 1048576,
											"kindString": "Set signature",
											"flags": {},
											"parameters": [
												{
													"id": 2136,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.disabled",
												"id": 1131
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6302,
											"character": 27
										},
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6306,
											"character": 27
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.disabled",
										"id": 1131
									}
								},
								{
									"id": 2032,
									"name": "enabled",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isPublic": true,
										"isExported": true
									},
									"comment": {
										"shortText": "Gets or sete whether the control is enabled."
									},
									"getSignature": [
										{
											"id": 2033,
											"name": "__get",
											"kind": 524288,
											"kindString": "Get signature",
											"flags": {},
											"comment": {
												"shortText": "Gets or sete whether the control is enabled."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"setSignature": [
										{
											"id": 2034,
											"name": "__set",
											"kind": 1048576,
											"kindString": "Set signature",
											"flags": {},
											"comment": {
												"shortText": "Gets or sete whether the control is enabled."
											},
											"parameters": [
												{
													"id": 2035,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11590,
											"character": 26
										},
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11593,
											"character": 26
										}
									]
								},
								{
									"id": 2100,
									"name": "hostElement",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the DOM element that is hosting the control."
									},
									"getSignature": [
										{
											"id": 2101,
											"name": "__get",
											"kind": 524288,
											"kindString": "Get signature",
											"flags": {},
											"comment": {
												"shortText": "Gets the DOM element that is hosting the control."
											},
											"type": {
												"type": "reference",
												"name": "HTMLElement"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.hostElement",
												"id": 1095
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6102,
											"character": 23
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.hostElement",
										"id": 1095
									}
								},
								{
									"id": 2129,
									"name": "isDisabled",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets or sets a value that determines whether the control is disabled.",
										"text": "Disabled controls cannot get mouse or keyboard events.\n"
									},
									"getSignature": [
										{
											"id": 2130,
											"name": "__get",
											"kind": 524288,
											"kindString": "Get signature",
											"flags": {},
											"comment": {
												"shortText": "Gets or sets a value that determines whether the control is disabled.",
												"text": "Disabled controls cannot get mouse or keyboard events.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.isDisabled",
												"id": 1127
											}
										}
									],
									"setSignature": [
										{
											"id": 2131,
											"name": "__set",
											"kind": 1048576,
											"kindString": "Set signature",
											"flags": {},
											"comment": {
												"shortText": "Gets or sets a value that determines whether the control is disabled.",
												"text": "Disabled controls cannot get mouse or keyboard events.\n"
											},
											"parameters": [
												{
													"id": 2132,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.isDisabled",
												"id": 1127
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6290,
											"character": 22
										},
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6293,
											"character": 22
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.isDisabled",
										"id": 1127
									}
								},
								{
									"id": 2127,
									"name": "isTouching",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets a value that indicates whether the control is currently handling a touch event."
									},
									"getSignature": [
										{
											"id": 2128,
											"name": "__get",
											"kind": 524288,
											"kindString": "Get signature",
											"flags": {},
											"comment": {
												"shortText": "Gets a value that indicates whether the control is currently handling a touch event."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.isTouching",
												"id": 1125
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6282,
											"character": 22
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.isTouching",
										"id": 1125
									}
								},
								{
									"id": 2122,
									"name": "isUpdating",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets a value that indicates whether the control is currently being updated."
									},
									"getSignature": [
										{
											"id": 2123,
											"name": "__get",
											"kind": 524288,
											"kindString": "Get signature",
											"flags": {},
											"comment": {
												"shortText": "Gets a value that indicates whether the control is currently being updated."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.isUpdating",
												"id": 1120
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6259,
											"character": 22
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.isUpdating",
										"id": 1120
									}
								},
								{
									"id": 2040,
									"name": "model",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isPublic": true,
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the dv model.",
										"returns": "The dv model.\n"
									},
									"getSignature": [
										{
											"id": 2041,
											"name": "__get",
											"kind": 524288,
											"kindString": "Get signature",
											"flags": {},
											"comment": {
												"shortText": "Gets the dv model.",
												"returns": "The dv model.\n"
											},
											"type": {
												"type": "reference",
												"name": "IDvModel",
												"id": 13831
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11615,
											"character": 24
										}
									]
								},
								{
									"id": 2026,
									"name": "option",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isPublic": true,
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the option."
									},
									"getSignature": [
										{
											"id": 2027,
											"name": "__get",
											"kind": 524288,
											"kindString": "Get signature",
											"flags": {},
											"comment": {
												"shortText": "Gets the option."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11574,
											"character": 25
										}
									]
								},
								{
									"id": 2036,
									"name": "renderMethod",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isPublic": true,
										"isExported": true
									},
									"comment": {
										"shortText": "Gets or sets the render method"
									},
									"getSignature": [
										{
											"id": 2037,
											"name": "__get",
											"kind": 524288,
											"kindString": "Get signature",
											"flags": {},
											"comment": {
												"shortText": "Gets or sets the render method"
											},
											"type": {
												"type": "reference",
												"name": "RenderMethod",
												"id": 1898
											}
										}
									],
									"setSignature": [
										{
											"id": 2038,
											"name": "__set",
											"kind": 1048576,
											"kindString": "Set signature",
											"flags": {},
											"comment": {
												"shortText": "Gets or sets the render method"
											},
											"parameters": [
												{
													"id": 2039,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "RenderMethod",
														"id": 1898
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11601,
											"character": 31
										},
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11604,
											"character": 31
										}
									]
								},
								{
									"id": 2137,
									"name": "addEventListener",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2138,
											"name": "addEventListener",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Adds an event listener to an element owned by this @see:Control.",
												"text": "The control keeps a list of attached listeners and their handlers,\nmaking it easier to remove them when the control is disposed (see the",
												"tags": [
													{
														"tag": "see:dispose",
														"text": "and @see:removeEventListener method).\n\nFailing to remove event listeners may cause memory leaks.\n"
													}
												]
											},
											"parameters": [
												{
													"id": 2139,
													"name": "target",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Target element for the event."
													},
													"type": {
														"type": "reference",
														"name": "EventTarget"
													}
												},
												{
													"id": 2140,
													"name": "type",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "String that specifies the event."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2141,
													"name": "fn",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Function to execute when the event occurs."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 2142,
													"name": "capture",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Whether the listener is capturing.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "false"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.addEventListener",
												"id": 1138
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6359,
											"character": 24
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.addEventListener",
										"id": 1138
									}
								},
								{
									"id": 2091,
									"name": "applyTemplate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2092,
											"name": "applyTemplate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Applies the template to a new instance of a control, and returns the root element.",
												"text": "This method should be called by constructors of templated controls.\nIt is responsible for binding the template parts to the\ncorresponding control members.\n\nFor example, the code below applies a template to an instance\nof an @see:InputNumber control. The template must contain elements\nwith the 'wj-part' attribute set to 'input', 'btn-inc', and 'btn-dec'.\nThe control members '_tbx', '_btnUp', and '_btnDn' will be assigned\nreferences to these elements.\n\n<pre>this.applyTemplate('wj-control wj-inputnumber', template, {\n  _tbx: 'input',\n  _btnUp: 'btn-inc',\n  _btnDn: 'btn-dec'\n}, 'input');</pre>\n"
											},
											"parameters": [
												{
													"id": 2093,
													"name": "classNames",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Names of classes to add to the control's host element."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2094,
													"name": "template",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "An HTML string that defines the control template."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2095,
													"name": "parts",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "A dictionary of part variables and their names."
													},
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												},
												{
													"id": 2096,
													"name": "namePart",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Name of the part to be named after the host element. This\ndetermines how the control submits data when used in forms.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "HTMLElement"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.applyTemplate",
												"id": 1084
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 5900,
											"character": 21
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.applyTemplate",
										"id": 1084
									}
								},
								{
									"id": 2118,
									"name": "beginUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2119,
											"name": "beginUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Suspends notifications until the next call to @see:endUpdate."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.beginUpdate",
												"id": 1116
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6244,
											"character": 19
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.beginUpdate",
										"id": 1116
									}
								},
								{
									"id": 2104,
									"name": "containsFocus",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2105,
											"name": "containsFocus",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Checks whether this control contains the focused element."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.containsFocus",
												"id": 1099
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6116,
											"character": 21
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.containsFocus",
										"id": 1099
									}
								},
								{
									"id": 2124,
									"name": "deferUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2125,
											"name": "deferUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Executes a function within a @see:beginUpdate/@see:endUpdate block.",
												"text": "The control will not be updated until the function has been executed.\nThis method ensures @see:endUpdate is called even if the function throws\nan exception.\n"
											},
											"parameters": [
												{
													"id": 2126,
													"name": "fn",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Function to be executed.\n"
													},
													"type": {
														"type": "reference",
														"name": "ControlUpateCallback"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.deferUpdate",
												"id": 1122
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6271,
											"character": 19
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.deferUpdate",
										"id": 1122
									}
								},
								{
									"id": 2057,
									"name": "dispose",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isPublic": true,
										"isExported": true
									},
									"signatures": [
										{
											"id": 2058,
											"name": "dispose",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Disposes the control by removing its association with the host element."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"overwrites": {
												"type": "reference",
												"name": "Control.dispose",
												"id": 1090
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11680,
											"character": 22
										}
									],
									"overwrites": {
										"type": "reference",
										"name": "Control.dispose",
										"id": 1090
									}
								},
								{
									"id": 2120,
									"name": "endUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2121,
											"name": "endUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Resumes notifications suspended by calls to @see:beginUpdate."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.endUpdate",
												"id": 1118
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6250,
											"character": 17
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.endUpdate",
										"id": 1118
									}
								},
								{
									"id": 2102,
									"name": "focus",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2103,
											"name": "focus",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Sets the focus to this control."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.focus",
												"id": 1097
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6108,
											"character": 13
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.focus",
										"id": 1097
									}
								},
								{
									"id": 2089,
									"name": "getTemplate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2090,
											"name": "getTemplate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Gets the HTML template used to create instances of the control.",
												"text": "This method traverses up the class hierarchy to find the nearest ancestor that\nspecifies a control template. For example, if you specify a prototype for the",
												"tags": [
													{
														"tag": "see:combobox",
														"text": "control, it will override the template defined by the @see:DropDown\nbase class.\n"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.getTemplate",
												"id": 1082
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 5866,
											"character": 19
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.getTemplate",
										"id": 1082
									}
								},
								{
									"id": 2070,
									"name": "hitTest",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isPublic": true,
										"isExported": true
									},
									"signatures": [
										{
											"id": 2071,
											"name": "hitTest",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Hit test the control.",
												"returns": "@HitInfo the result of hittest\n"
											},
											"parameters": [
												{
													"id": 2072,
													"name": "point",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "-The location in the control.\n"
													},
													"type": {
														"type": "reference",
														"name": "Point"
													}
												},
												{
													"id": 2073,
													"name": "prediction",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IPrediction",
														"id": 7923,
														"typeArguments": [
															{
																"type": "reference",
																"name": "HitTestResult",
																"id": 1989
															}
														]
													},
													"defaultValue": " null"
												}
											],
											"type": {
												"type": "reference",
												"name": "HitTestResult",
												"id": 1989
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11757,
											"character": 22
										}
									]
								},
								{
									"id": 2059,
									"name": "initialize",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isPublic": true,
										"isExported": true
									},
									"signatures": [
										{
											"id": 2060,
											"name": "initialize",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Initializes the control with the option setting."
											},
											"parameters": [
												{
													"id": 2061,
													"name": "option",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The option of the control.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"overwrites": {
												"type": "reference",
												"name": "Control.initialize",
												"id": 1135
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11708,
											"character": 25
										}
									],
									"overwrites": {
										"type": "reference",
										"name": "Control.initialize",
										"id": 1135
									}
								},
								{
									"id": 2068,
									"name": "invalidate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isPublic": true,
										"isExported": true
									},
									"signatures": [
										{
											"id": 2069,
											"name": "invalidate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Redraw the control."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11747,
											"character": 25
										}
									]
								},
								{
									"id": 2046,
									"name": "layers",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isPublic": true,
										"isExported": true
									},
									"signatures": [
										{
											"id": 2047,
											"name": "layers",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Gets the layers."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "ILayer",
													"id": 13848
												}
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11637,
											"character": 21
										}
									]
								},
								{
									"id": 2062,
									"name": "load",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isPublic": true,
										"isExported": true
									},
									"signatures": [
										{
											"id": 2063,
											"name": "load",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Loads the new option into the control."
											},
											"parameters": [
												{
													"id": 2064,
													"name": "option",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The option of the control.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11724,
											"character": 19
										}
									]
								},
								{
									"id": 2150,
									"name": "onGotFocus",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2151,
											"name": "onGotFocus",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Raises the @see:gotFocus event."
											},
											"parameters": [
												{
													"id": 2152,
													"name": "e",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"name": "EventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.onGotFocus",
												"id": 1151
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6405,
											"character": 18
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.onGotFocus",
										"id": 1151
									}
								},
								{
									"id": 2154,
									"name": "onLostFocus",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2155,
											"name": "onLostFocus",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Raises the @see:lostFocus event."
											},
											"parameters": [
												{
													"id": 2156,
													"name": "e",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"name": "EventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.onLostFocus",
												"id": 1155
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6415,
											"character": 19
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.onLostFocus",
										"id": 1155
									}
								},
								{
									"id": 2065,
									"name": "refresh",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isPublic": true,
										"isExported": true
									},
									"signatures": [
										{
											"id": 2066,
											"name": "refresh",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Refreshes the control."
											},
											"parameters": [
												{
													"id": 2067,
													"name": "fullUpdate",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "true"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"overwrites": {
												"type": "reference",
												"name": "Control.refresh",
												"id": 1104
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11733,
											"character": 22
										}
									],
									"overwrites": {
										"type": "reference",
										"name": "Control.refresh",
										"id": 1104
									}
								},
								{
									"id": 2106,
									"name": "refreshDelay",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2107,
											"name": "refreshDelay",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Invalidates the control causing an asynchronous refresh."
											},
											"parameters": [
												{
													"id": 2108,
													"name": "fullUpdate",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Whether to update the control layout as well as the content.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "true"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.refreshDelay",
												"id": 1101
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6148,
											"character": 20
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.refreshDelay",
										"id": 1101
									}
								},
								{
									"id": 2143,
									"name": "removeEventListener",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2144,
											"name": "removeEventListener",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Removes one or more event listeners attached to elements owned by this @see:Control.",
												"returns": "The number of listeners removed.\n"
											},
											"parameters": [
												{
													"id": 2145,
													"name": "target",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Target element for the event. If null, removes listeners attached to all targets."
													},
													"type": {
														"type": "reference",
														"name": "EventTarget"
													}
												},
												{
													"id": 2146,
													"name": "type",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "String that specifies the event. If null, removes listeners attached to all events."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2147,
													"name": "fn",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Handler to remove. If null, removes all handlers."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 2148,
													"name": "capture",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Whether the listener is capturing. If null, removes capturing and non-capturing listeners."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.removeEventListener",
												"id": 1144
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6377,
											"character": 27
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.removeEventListener",
										"id": 1144
									}
								},
								{
									"id": 2077,
									"name": "select",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isPublic": true,
										"isExported": true
									},
									"signatures": [
										{
											"id": 2078,
											"name": "select",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Selects the data points with the selected style."
											},
											"parameters": [
												{
													"id": 2079,
													"name": "points",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The data points."
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "IPointModel",
															"id": 13882
														}
													}
												},
												{
													"id": 2080,
													"name": "selectedStyle",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The selected style."
													},
													"type": {
														"type": "reference",
														"name": "ISelectionStyleOption",
														"id": 17812
													},
													"defaultValue": " null"
												},
												{
													"id": 2081,
													"name": "additionalKind",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The additional type.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": " null"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11786,
											"character": 21
										}
									]
								},
								{
									"id": 2115,
									"name": "disposeAll",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isStatic": true,
										"isExported": true
									},
									"signatures": [
										{
											"id": 2116,
											"name": "disposeAll",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Disposes of all gc controls contained in an HTML element."
											},
											"parameters": [
												{
													"id": 2117,
													"name": "e",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Container element.\n"
													},
													"type": {
														"type": "reference",
														"name": "HTMLElement"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.disposeAll",
												"id": 1113
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6231,
											"character": 25
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.disposeAll",
										"id": 1113
									}
								},
								{
									"id": 2097,
									"name": "getControl",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isStatic": true,
										"isExported": true
									},
									"signatures": [
										{
											"id": 2098,
											"name": "getControl",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Gets the control that is hosted in a given DOM element."
											},
											"parameters": [
												{
													"id": 2099,
													"name": "element",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The DOM element that is hosting the control, or a selector for the host element (e.g. '#theCtrl').\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Control",
												"id": 1075
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.getControl",
												"id": 1092
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6095,
											"character": 25
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.getControl",
										"id": 1092
									}
								},
								{
									"id": 2109,
									"name": "invalidateAll",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isStatic": true,
										"isExported": true
									},
									"signatures": [
										{
											"id": 2110,
											"name": "invalidateAll",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Invalidates all gc controls contained in an HTML element.",
												"text": "Use this method when your application has dynamic panels that change\nthe control's visibility or dimensions. For example, splitters, accordions,\nand tab controls usually change the visibility of its content elements.\nIn this case, failing to notify the controls contained in the element\nmay cause them to stop working properly.\n\nIf this happens, you must handle the appropriate event in the dynamic\ncontainer and call the @see:Control.invalidateAll method so the contained\ngc controls will update their layout information properly.\n"
											},
											"parameters": [
												{
													"id": 2111,
													"name": "e",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Container element. If set to null, all gc controls\non the page will be invalidated.\n"
													},
													"type": {
														"type": "reference",
														"name": "HTMLElement"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.invalidateAll",
												"id": 1107
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6189,
											"character": 28
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.invalidateAll",
										"id": 1107
									}
								},
								{
									"id": 2112,
									"name": "refreshAll",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isStatic": true,
										"isExported": true
									},
									"signatures": [
										{
											"id": 2113,
											"name": "refreshAll",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Refreshes all gc controls contained in an HTML element.",
												"text": "This method is similar to @see:invalidateAll, except the controls\nare updated immediately rather than after an interval.\n"
											},
											"parameters": [
												{
													"id": 2114,
													"name": "e",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Container element. If set to null, all gc controls\non the page will be invalidated.\n"
													},
													"type": {
														"type": "reference",
														"name": "HTMLElement"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.refreshAll",
												"id": 1110
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 6212,
											"character": 25
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.refreshAll",
										"id": 1110
									}
								},
								{
									"id": 2084,
									"name": "runAnimation",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isPublic": true,
										"isStatic": true,
										"isExported": true
									},
									"signatures": [
										{
											"id": 2085,
											"name": "runAnimation",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Run a kind of animation of model."
											},
											"parameters": [
												{
													"id": 2086,
													"name": "model",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The IModel instance."
													},
													"type": {
														"type": "reference",
														"name": "IViewModel",
														"id": 13918
													}
												},
												{
													"id": 2087,
													"name": "option",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The animation option.\n"
													},
													"type": {
														"type": "reference",
														"name": "IAnimationApiOption"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11917,
											"character": 34
										}
									]
								}
							],
							"groups": [
								{
									"title": "Constructors",
									"kind": 512,
									"children": [
										2052
									]
								},
								{
									"title": "Events",
									"kind": 8388608,
									"children": [
										2042,
										2044
									]
								},
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2149,
										2153
									]
								},
								{
									"title": "Accessors",
									"kind": 262144,
									"children": [
										2028,
										2133,
										2032,
										2100,
										2129,
										2127,
										2122,
										2040,
										2026,
										2036
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										2137,
										2091,
										2118,
										2104,
										2124,
										2057,
										2120,
										2102,
										2089,
										2070,
										2059,
										2068,
										2046,
										2062,
										2150,
										2154,
										2065,
										2106,
										2143,
										2077,
										2115,
										2097,
										2109,
										2112,
										2084
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 11554,
									"character": 23
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"name": "Control",
									"id": 1075
								}
							]
						},
						{
							"id": 1961,
							"name": "HitTestEvent",
							"kind": 128,
							"kindString": "Class",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the hit test event."
							},
							"children": [
								{
									"id": 1976,
									"name": "hasHandlers",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets a value that indicates whether this event has any handlers."
									},
									"getSignature": [
										{
											"id": 1977,
											"name": "__get",
											"kind": 524288,
											"kindString": "Get signature",
											"flags": {},
											"comment": {
												"shortText": "Gets a value that indicates whether this event has any handlers."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Event.hasHandlers"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 2502,
											"character": 23
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Event.hasHandlers"
									}
								},
								{
									"id": 1966,
									"name": "addHandler",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1967,
											"name": "addHandler",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Adds a handler to this event."
											},
											"parameters": [
												{
													"id": 1968,
													"name": "handler",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Function invoked when the event is raised."
													},
													"type": {
														"type": "reference",
														"name": "IEventHandler"
													}
												},
												{
													"id": 1969,
													"name": "self",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Object that defines the event handler\n(accessible as 'this' from the handler code).\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Event.addHandler"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 2457,
											"character": 18
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Event.addHandler"
									}
								},
								{
									"id": 1974,
									"name": "removeAllHandlers",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1975,
											"name": "removeAllHandlers",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Removes all handlers associated with this event."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Event.removeAllHandlers"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 2484,
											"character": 25
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Event.removeAllHandlers"
									}
								},
								{
									"id": 1970,
									"name": "removeHandler",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1971,
											"name": "removeHandler",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Removes a handler from this event."
											},
											"parameters": [
												{
													"id": 1972,
													"name": "handler",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Function invoked when the event is raised."
													},
													"type": {
														"type": "reference",
														"name": "IEventHandler"
													}
												},
												{
													"id": 1973,
													"name": "self",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Object that defines the event handler (accessible as 'this' from the handler code).\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Event.removeHandler"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 2467,
											"character": 21
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Event.removeHandler"
									}
								}
							],
							"groups": [
								{
									"title": "Accessors",
									"kind": 262144,
									"children": [
										1976
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										1966,
										1974,
										1970
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 11416,
									"character": 29
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"name": "Event"
								}
							]
						},
						{
							"id": 1978,
							"name": "HitTestEventArgs",
							"kind": 128,
							"kindString": "Class",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the arguments of the hit test event."
							},
							"children": [
								{
									"id": 1982,
									"name": "addition",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isPublic": true,
										"isExported": true
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11442,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1979,
									"name": "event",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isPublic": true,
										"isExported": true
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11438,
											"character": 20
										}
									],
									"type": {
										"type": "reference",
										"name": "MotionEvent",
										"id": 955
									}
								},
								{
									"id": 1981,
									"name": "model",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isPublic": true,
										"isExported": true
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11441,
											"character": 20
										}
									],
									"type": {
										"type": "reference",
										"name": "IViewModel",
										"id": 13918
									}
								},
								{
									"id": 1980,
									"name": "point",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isPublic": true,
										"isExported": true
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11440,
											"character": 20
										}
									],
									"type": {
										"type": "reference",
										"name": "Point"
									}
								},
								{
									"id": 1988,
									"name": "empty",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isStatic": true,
										"isExported": true
									},
									"comment": {
										"shortText": "Provides a value to use with events that do not have event data."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 2515,
											"character": 20
										}
									],
									"type": {
										"type": "reference",
										"name": "EventArgs"
									},
									"defaultValue": " new EventArgs()",
									"inheritedFrom": {
										"type": "reference",
										"name": "EventArgs.empty"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1982,
										1979,
										1981,
										1980,
										1988
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 11437,
									"character": 33
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"name": "EventArgs"
								}
							]
						},
						{
							"id": 1989,
							"name": "HitTestResult",
							"kind": 128,
							"kindString": "Class",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the result of the hit test method."
							},
							"children": [
								{
									"id": 1993,
									"name": "constructor",
									"kind": 512,
									"kindString": "Constructor",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Initializes a new instance of the [HitTestResult]{@link dv.HitTestResult} class."
									},
									"signatures": [
										{
											"id": 1994,
											"name": "new HitTestResult",
											"kind": 16384,
											"kindString": "Constructor signature",
											"flags": {},
											"comment": {
												"shortText": "Initializes a new instance of the [HitTestResult]{@link dv.HitTestResult} class."
											},
											"parameters": [
												{
													"id": 1995,
													"name": "point",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Point"
													}
												},
												{
													"id": 1996,
													"name": "model",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IViewModel",
														"id": 13918
													}
												},
												{
													"id": 1997,
													"name": "element",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												},
												{
													"id": 1998,
													"name": "type",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "ElementType",
														"id": 1686
													}
												},
												{
													"id": 1999,
													"name": "addition",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"defaultValue": " null"
												}
											],
											"type": {
												"type": "reference",
												"name": "HitTestResult",
												"id": 1989
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11474,
											"character": 45
										}
									]
								},
								{
									"id": 1992,
									"name": "addition",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isPublic": true,
										"isExported": true
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11472,
											"character": 32
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1991,
									"name": "model",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isPublic": true,
										"isExported": true
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11471,
											"character": 29
										}
									],
									"type": {
										"type": "reference",
										"name": "IViewModel",
										"id": 13918
									}
								},
								{
									"id": 1990,
									"name": "point",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isPublic": true,
										"isExported": true
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 11470,
											"character": 29
										}
									],
									"type": {
										"type": "reference",
										"name": "Point"
									}
								}
							],
							"groups": [
								{
									"title": "Constructors",
									"kind": 512,
									"children": [
										1993
									]
								},
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1992,
										1991,
										1990
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 11469,
									"character": 30
								}
							]
						},
						{
							"id": 955,
							"name": "MotionEvent",
							"kind": 128,
							"kindString": "Class",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the motion event."
							},
							"children": [
								{
									"id": 985,
									"name": "constructor",
									"kind": 512,
									"kindString": "Constructor",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Initializes a new instance of the [MotionEvent]{@link dv.MotionEvent} class."
									},
									"signatures": [
										{
											"id": 986,
											"name": "new MotionEvent",
											"kind": 16384,
											"kindString": "Constructor signature",
											"flags": {},
											"comment": {
												"shortText": "Initializes a new instance of the [MotionEvent]{@link dv.MotionEvent} class."
											},
											"parameters": [
												{
													"id": 987,
													"name": "action",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"shortText": "The action."
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 988,
													"name": "x",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "The x value of the location."
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 989,
													"name": "y",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "The y value of the location.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "MotionEvent",
												"id": 955
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 5160,
											"character": 9
										}
									]
								},
								{
									"id": 974,
									"name": "originalEvent",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isPublic": true,
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the original dom event."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 5135,
											"character": 28
										}
									],
									"type": {
										"type": "reference",
										"name": "Event"
									}
								},
								{
									"id": 963,
									"name": "ACTION_CANCEL",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isPublic": true,
										"isStatic": true,
										"isExported": true
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 5116,
											"character": 35
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "3"
								},
								{
									"id": 970,
									"name": "ACTION_CLICK",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isPublic": true,
										"isStatic": true,
										"isExported": true
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 5123,
											"character": 34
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "10"
								},
								{
									"id": 960,
									"name": "ACTION_DOWN",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isPublic": true,
										"isStatic": true,
										"isExported": true
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 5113,
											"character": 33
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								},
								{
									"id": 965,
									"name": "ACTION_MOUSE_DOWN",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isPublic": true,
										"isStatic": true,
										"isExported": true
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 5118,
											"character": 39
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "5"
								},
								{
									"id": 971,
									"name": "ACTION_MOUSE_ENTER",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isPublic": true,
										"isStatic": true,
										"isExported": true
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 5124,
											"character": 40
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "11"
								},
								{
									"id": 972,
									"name": "ACTION_MOUSE_LEAVE",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isPublic": true,
										"isStatic": true,
										"isExported": true
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 5125,
											"character": 40
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "12"
								},
								{
									"id": 966,
									"name": "ACTION_MOUSE_MOVE",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isPublic": true,
										"isStatic": true,
										"isExported": true
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 5119,
											"character": 39
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "6"
								},
								{
									"id": 969,
									"name": "ACTION_MOUSE_OUT",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isPublic": true,
										"isStatic": true,
										"isExported": true
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 5122,
											"character": 38
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "9"
								},
								{
									"id": 968,
									"name": "ACTION_MOUSE_OVER",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isPublic": true,
										"isStatic": true,
										"isExported": true
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 5121,
											"character": 39
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "8"
								},
								{
									"id": 967,
									"name": "ACTION_MOUSE_UP",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isPublic": true,
										"isStatic": true,
										"isExported": true
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 5120,
											"character": 37
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "7"
								},
								{
									"id": 962,
									"name": "ACTION_MOVE",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isPublic": true,
										"isStatic": true,
										"isExported": true
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 5115,
											"character": 33
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "2"
								},
								{
									"id": 964,
									"name": "ACTION_OUTSIDE",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isPublic": true,
										"isStatic": true,
										"isExported": true
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 5117,
											"character": 36
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "4"
								},
								{
									"id": 961,
									"name": "ACTION_UP",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isPublic": true,
										"isStatic": true,
										"isExported": true
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 5114,
											"character": 31
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "1"
								},
								{
									"id": 973,
									"name": "ACTION_WHEEL",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isPublic": true,
										"isStatic": true,
										"isExported": true
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 5126,
											"character": 34
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "13"
								},
								{
									"id": 975,
									"name": "action",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isPublic": true,
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the action."
									},
									"getSignature": [
										{
											"id": 976,
											"name": "__get",
											"kind": 524288,
											"kindString": "Get signature",
											"flags": {},
											"comment": {
												"shortText": "Gets the action."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 5140,
											"character": 25
										}
									]
								},
								{
									"id": 977,
									"name": "x",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isPublic": true,
										"isExported": true
									},
									"comment": {
										"shortText": "Gets or sets the x value of the location."
									},
									"getSignature": [
										{
											"id": 978,
											"name": "__get",
											"kind": 524288,
											"kindString": "Get signature",
											"flags": {},
											"comment": {
												"shortText": "Gets or sets the x value of the location."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"setSignature": [
										{
											"id": 979,
											"name": "__set",
											"kind": 1048576,
											"kindString": "Set signature",
											"flags": {},
											"comment": {
												"shortText": "Gets or sets the x value of the location."
											},
											"parameters": [
												{
													"id": 980,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 5146,
											"character": 20
										},
										{
											"fileName": "source/core/modules/core.ts",
											"line": 5149,
											"character": 20
										}
									]
								},
								{
									"id": 981,
									"name": "y",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isPublic": true,
										"isExported": true
									},
									"comment": {
										"shortText": "Gets or sets the y value of the location."
									},
									"getSignature": [
										{
											"id": 982,
											"name": "__get",
											"kind": 524288,
											"kindString": "Get signature",
											"flags": {},
											"comment": {
												"shortText": "Gets or sets the y value of the location."
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"setSignature": [
										{
											"id": 983,
											"name": "__set",
											"kind": 1048576,
											"kindString": "Set signature",
											"flags": {},
											"comment": {
												"shortText": "Gets or sets the y value of the location."
											},
											"parameters": [
												{
													"id": 984,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 5155,
											"character": 20
										},
										{
											"fileName": "source/core/modules/core.ts",
											"line": 5158,
											"character": 20
										}
									]
								},
								{
									"id": 990,
									"name": "contains",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isPublic": true,
										"isExported": true
									},
									"signatures": [
										{
											"id": 991,
											"name": "contains",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Determines whether the rectangle contains a event point."
											},
											"parameters": [
												{
													"id": 992,
													"name": "rectangle",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The rectangle to ckeck.\n"
													},
													"type": {
														"type": "reference",
														"name": "Rect"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 5180,
											"character": 23
										}
									]
								},
								{
									"id": 956,
									"name": "_fromEvent",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isPublic": true,
										"isStatic": true,
										"isExported": true
									},
									"signatures": [
										{
											"id": 957,
											"name": "_fromEvent",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Create the motion event.",
												"returns": "The motion event.\n"
											},
											"parameters": [
												{
													"id": 958,
													"name": "hostElement",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The host dom element."
													},
													"type": {
														"type": "reference",
														"name": "HTMLElement"
													}
												},
												{
													"id": 959,
													"name": "evt",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The dom event.\n"
													},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "MotionEvent",
												"id": 955
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 5062,
											"character": 32
										}
									]
								}
							],
							"groups": [
								{
									"title": "Constructors",
									"kind": 512,
									"children": [
										985
									]
								},
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										974,
										963,
										970,
										960,
										965,
										971,
										972,
										966,
										969,
										968,
										967,
										962,
										964,
										961,
										973
									]
								},
								{
									"title": "Accessors",
									"kind": 262144,
									"children": [
										975,
										977,
										981
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										990,
										956
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 5053,
									"character": 28
								}
							]
						},
						{
							"id": 2000,
							"name": "RenderedEvent",
							"kind": 128,
							"kindString": "Class",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the rendered event."
							},
							"children": [
								{
									"id": 2015,
									"name": "hasHandlers",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets a value that indicates whether this event has any handlers."
									},
									"getSignature": [
										{
											"id": 2016,
											"name": "__get",
											"kind": 524288,
											"kindString": "Get signature",
											"flags": {},
											"comment": {
												"shortText": "Gets a value that indicates whether this event has any handlers."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Event.hasHandlers"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 2502,
											"character": 23
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Event.hasHandlers"
									}
								},
								{
									"id": 2005,
									"name": "addHandler",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2006,
											"name": "addHandler",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Adds a handler to this event."
											},
											"parameters": [
												{
													"id": 2007,
													"name": "handler",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Function invoked when the event is raised."
													},
													"type": {
														"type": "reference",
														"name": "IEventHandler"
													}
												},
												{
													"id": 2008,
													"name": "self",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Object that defines the event handler\n(accessible as 'this' from the handler code).\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Event.addHandler"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 2457,
											"character": 18
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Event.addHandler"
									}
								},
								{
									"id": 2013,
									"name": "removeAllHandlers",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2014,
											"name": "removeAllHandlers",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Removes all handlers associated with this event."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Event.removeAllHandlers"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 2484,
											"character": 25
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Event.removeAllHandlers"
									}
								},
								{
									"id": 2009,
									"name": "removeHandler",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2010,
											"name": "removeHandler",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Removes a handler from this event."
											},
											"parameters": [
												{
													"id": 2011,
													"name": "handler",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Function invoked when the event is raised."
													},
													"type": {
														"type": "reference",
														"name": "IEventHandler"
													}
												},
												{
													"id": 2012,
													"name": "self",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Object that defines the event handler (accessible as 'this' from the handler code).\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Event.removeHandler"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 2467,
											"character": 21
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Event.removeHandler"
									}
								}
							],
							"groups": [
								{
									"title": "Accessors",
									"kind": 262144,
									"children": [
										2015
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										2005,
										2013,
										2009
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 11496,
									"character": 30
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"name": "Event"
								}
							]
						},
						{
							"id": 2017,
							"name": "RenderedEventArgs",
							"kind": 128,
							"kindString": "Class",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the arguments of the rendered event."
							},
							"children": [
								{
									"id": 2020,
									"name": "empty",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isStatic": true,
										"isExported": true
									},
									"comment": {
										"shortText": "Provides a value to use with events that do not have event data."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 2515,
											"character": 20
										}
									],
									"type": {
										"type": "reference",
										"name": "EventArgs"
									},
									"defaultValue": " new EventArgs()",
									"inheritedFrom": {
										"type": "reference",
										"name": "EventArgs.empty"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2020
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 11517,
									"character": 34
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"name": "EventArgs"
								}
							]
						},
						{
							"id": 1048,
							"name": "IQueryInterface",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the interface to query the specified interface."
							},
							"children": [
								{
									"id": 1049,
									"name": "queryInterface",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1050,
											"name": "queryInterface",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Queries the specified interface.",
												"returns": "The specified interface.\n"
											},
											"parameters": [
												{
													"id": 1051,
													"name": "name",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The interface name.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "IQueryInterface",
												"id": 1048
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 5590,
											"character": 22
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										1049
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 5582,
									"character": 36
								}
							],
							"extendedBy": [
								{
									"type": "reference",
									"name": "IModel",
									"id": 7919
								},
								{
									"type": "reference",
									"name": "IAxisLabel",
									"id": 10912
								},
								{
									"type": "reference",
									"name": "IAxisTitle",
									"id": 10918
								},
								{
									"type": "reference",
									"name": "IDataLabel",
									"id": 10987
								},
								{
									"type": "reference",
									"name": "IGridLine",
									"id": 11013
								},
								{
									"type": "reference",
									"name": "IShapeElement",
									"id": 12745
								},
								{
									"type": "reference",
									"name": "IPlotAreaOption",
									"id": 17194
								},
								{
									"type": "reference",
									"name": "IPlotConfigOption",
									"id": 17221
								},
								{
									"type": "reference",
									"name": "IShape",
									"id": 27486
								}
							]
						},
						{
							"id": 26830,
							"name": "IRender",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents a render."
							},
							"children": [
								{
									"id": 26845,
									"name": "devicePixelRatio",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets or sets the devicePixelRatio for canvas renderengine"
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 86248,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 26834,
									"name": "fill",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets or sets the color used to fill the element."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 86204,
											"character": 12
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "ILinearGradientColor",
												"id": 3692
											},
											{
												"type": "reference",
												"name": "IRadialGradientColor",
												"id": 3697
											}
										]
									}
								},
								{
									"id": 26832,
									"name": "fillOpacity",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets or sets the opacity used for fill color."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 86196,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 26841,
									"name": "fontFamily",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets or sets the font family for the text output."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 86232,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 26840,
									"name": "fontSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets or sets the font size for the text output."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 86228,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 26843,
									"name": "fontStyle",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets or sets the font style for the text output."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 86240,
											"character": 17
										}
									],
									"type": {
										"type": "reference",
										"name": "FontStyle",
										"id": 1722
									}
								},
								{
									"id": 26842,
									"name": "fontWeight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets or sets the font weight for the text output."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 86236,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 26831,
									"name": "renderEngine",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the render engine.",
										"tags": [
											{
												"tag": "returns",
												"text": "The render engine.\n"
											}
										]
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 86192,
											"character": 29
										}
									],
									"type": {
										"type": "reference",
										"name": "IRenderEngine",
										"id": 2171
									}
								},
								{
									"id": 26835,
									"name": "stroke",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets or sets the color used to outline the element."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 86208,
											"character": 14
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "ILinearGradientColor",
												"id": 3692
											},
											{
												"type": "reference",
												"name": "IRadialGradientColor",
												"id": 3697
											}
										]
									}
								},
								{
									"id": 26837,
									"name": "strokeDasharray",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets or sets the pattern of dashes and gaps of the outline."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 86216,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 26833,
									"name": "strokeOpacity",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets or sets the opacity used for stroke."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 86200,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 26836,
									"name": "strokeWidth",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets or sets the thickness of the outline."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 86212,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 26844,
									"name": "textDecoration",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets or sets the text decoration for the text output."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 86244,
											"character": 22
										}
									],
									"type": {
										"type": "reference",
										"name": "ITextDecorationOption",
										"id": 17391
									}
								},
								{
									"id": 26839,
									"name": "textFill",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets or sets the text color."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 86224,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 26838,
									"name": "textOpacity",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets or sets the opacity used for text color."
									},
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 86220,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 26979,
									"name": "addClipRect",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 26980,
											"name": "addClipRect",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 26981,
													"name": "clipRect",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Rect"
													}
												},
												{
													"id": 26982,
													"name": "id",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 86337,
											"character": 19
										}
									]
								},
								{
									"id": 26846,
									"name": "beginRender",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 26847,
											"name": "beginRender",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Clear the viewport and start the rendering cycle."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 86253,
											"character": 19
										}
									]
								},
								{
									"id": 26900,
									"name": "beginTransform",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 26901,
											"name": "beginTransform",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Begin the transform."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 86322,
											"character": 22
										}
									]
								},
								{
									"id": 26960,
									"name": "drawDonutSegment",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 26961,
											"name": "drawDonutSegment",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 26962,
													"name": "cx",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 26963,
													"name": "cy",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 26964,
													"name": "radius",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 26965,
													"name": "innerRadius",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 26966,
													"name": "startAngle",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 26967,
													"name": "sweepAngle",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 26968,
													"name": "className",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 26969,
													"name": "style",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 26970,
													"name": "clipPath",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 86335,
											"character": 24
										}
									]
								},
								{
									"id": 26904,
									"name": "drawEllipse",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 26905,
											"name": "drawEllipse",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 26906,
													"name": "cx",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 26907,
													"name": "cy",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 26908,
													"name": "rx",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 26909,
													"name": "ry",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 26910,
													"name": "className",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 26911,
													"name": "style",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 26912,
													"name": "clipPath",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 86328,
											"character": 19
										}
									]
								},
								{
									"id": 26971,
									"name": "drawImage",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 26972,
											"name": "drawImage",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 26973,
													"name": "imageHref",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 26974,
													"name": "x",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 26975,
													"name": "y",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 26976,
													"name": "w",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 26977,
													"name": "h",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 26978,
													"name": "martix",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 86336,
											"character": 17
										}
									]
								},
								{
									"id": 26922,
									"name": "drawLine",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 26923,
											"name": "drawLine",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 26924,
													"name": "x1",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 26925,
													"name": "y1",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 26926,
													"name": "x2",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 26927,
													"name": "y2",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 26928,
													"name": "className",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 86330,
											"character": 16
										}
									]
								},
								{
									"id": 26929,
									"name": "drawLines",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 26930,
											"name": "drawLines",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 26931,
													"name": "xs",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												},
												{
													"id": 26932,
													"name": "ys",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												},
												{
													"id": 26933,
													"name": "className",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 26934,
													"name": "style",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 26935,
													"name": "clipPath",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 86331,
											"character": 17
										}
									]
								},
								{
									"id": 26866,
									"name": "drawMultipleStrings",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 26867,
											"name": "drawMultipleStrings",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Draw string in the rectangle."
											},
											"parameters": [
												{
													"id": 26868,
													"name": "s",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The string"
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 26869,
													"name": "rectangle",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The rectangle"
													},
													"type": {
														"type": "reference",
														"name": "Rect"
													}
												},
												{
													"id": 26870,
													"name": "horizontalAlignment",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The horizontal alignment."
													},
													"type": {
														"type": "reference",
														"name": "HAlign",
														"id": 1760
													}
												},
												{
													"id": 26871,
													"name": "overflow",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The overflow setting."
													},
													"type": {
														"type": "reference",
														"name": "TextOverflow",
														"id": 1929
													}
												},
												{
													"id": 26872,
													"name": "className",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "The class name.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 26873,
													"name": "angle",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 26874,
													"name": "center",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"name": "Point"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 86297,
											"character": 27
										}
									]
								},
								{
									"id": 26950,
									"name": "drawPieSegment",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 26951,
											"name": "drawPieSegment",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 26952,
													"name": "cx",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 26953,
													"name": "cy",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 26954,
													"name": "radius",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 26955,
													"name": "startAngle",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 26956,
													"name": "sweepAngle",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 26957,
													"name": "className",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 26958,
													"name": "style",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 26959,
													"name": "clipPath",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 86334,
											"character": 22
										}
									]
								},
								{
									"id": 26943,
									"name": "drawPolygon",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 26944,
											"name": "drawPolygon",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 26945,
													"name": "xs",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												},
												{
													"id": 26946,
													"name": "ys",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												},
												{
													"id": 26947,
													"name": "className",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 26948,
													"name": "style",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 26949,
													"name": "clipPath",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 86333,
											"character": 19
										}
									]
								},
								{
									"id": 26913,
									"name": "drawRect",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 26914,
											"name": "drawRect",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 26915,
													"name": "x",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 26916,
													"name": "y",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 26917,
													"name": "w",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 26918,
													"name": "h",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 26919,
													"name": "className",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 26920,
													"name": "style",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 26921,
													"name": "clipPath",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 86329,
											"character": 16
										}
									]
								},
								{
									"id": 26936,
									"name": "drawSplines",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 26937,
											"name": "drawSplines",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 26938,
													"name": "xs",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												},
												{
													"id": 26939,
													"name": "ys",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												},
												{
													"id": 26940,
													"name": "className",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 26941,
													"name": "style",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 26942,
													"name": "clipPath",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 86332,
											"character": 19
										}
									]
								},
								{
									"id": 26888,
									"name": "drawString",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 26889,
											"name": "drawString",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 26890,
													"name": "s",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 26891,
													"name": "pt",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Point"
													}
												},
												{
													"id": 26892,
													"name": "className",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 86313,
											"character": 18
										}
									]
								},
								{
									"id": 26893,
									"name": "drawStringRotated",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 26894,
											"name": "drawStringRotated",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 26895,
													"name": "label",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 26896,
													"name": "pt",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Point"
													}
												},
												{
													"id": 26897,
													"name": "center",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Point"
													}
												},
												{
													"id": 26898,
													"name": "angle",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 26899,
													"name": "className",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 86314,
											"character": 25
										}
									]
								},
								{
									"id": 26858,
									"name": "endGroup",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 26859,
											"name": "endGroup",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Ends the current group."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 86275,
											"character": 16
										}
									]
								},
								{
									"id": 26848,
									"name": "endRender",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 26849,
											"name": "endRender",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Ends the rendering cycle."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 86257,
											"character": 17
										}
									]
								},
								{
									"id": 26860,
									"name": "measureMultipleStrings",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 26861,
											"name": "measureMultipleStrings",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Draw string in the rectangle.",
												"returns": "The size.\n"
											},
											"parameters": [
												{
													"id": 26862,
													"name": "s",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The string"
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 26863,
													"name": "width",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The suggested width."
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 26864,
													"name": "overflow",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The overflow setting."
													},
													"type": {
														"type": "reference",
														"name": "TextOverflow",
														"id": 1929
													}
												},
												{
													"id": 26865,
													"name": "className",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "The class name.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Size"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 86287,
											"character": 30
										}
									]
								},
								{
									"id": 26883,
									"name": "measureString",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 26884,
											"name": "measureString",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 26885,
													"name": "s",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 26886,
													"name": "className",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 26887,
													"name": "groupName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Size"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 86312,
											"character": 21
										}
									]
								},
								{
									"id": 26902,
									"name": "restoreTransform",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 26903,
											"name": "restoreTransform",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Restore the transform."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 86326,
											"character": 24
										}
									]
								},
								{
									"id": 26850,
									"name": "setViewportSize",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 26851,
											"name": "setViewportSize",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Sets the size of the viewport."
											},
											"parameters": [
												{
													"id": 26852,
													"name": "width",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The viewport width."
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 26853,
													"name": "height",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The viewport height.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 86264,
											"character": 23
										}
									]
								},
								{
									"id": 26854,
									"name": "startGroup",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 26855,
											"name": "startGroup",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Starts a group."
											},
											"parameters": [
												{
													"id": 26856,
													"name": "className",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The class name"
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 26857,
													"name": "clipPath",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The clipPath\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "source/core/modules/core.ts",
											"line": 86271,
											"character": 18
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										26845,
										26834,
										26832,
										26841,
										26840,
										26843,
										26842,
										26831,
										26835,
										26837,
										26833,
										26836,
										26844,
										26839,
										26838
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										26979,
										26846,
										26900,
										26960,
										26904,
										26971,
										26922,
										26929,
										26866,
										26950,
										26943,
										26913,
										26936,
										26888,
										26893,
										26858,
										26848,
										26860,
										26883,
										26902,
										26850,
										26854
									]
								}
							],
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 86186,
									"character": 28
								}
							]
						},
						{
							"id": 27535,
							"name": "AnyObject",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 88789,
									"character": 25
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 27534,
							"name": "DataValueObject",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 88787,
									"character": 31
								}
							],
							"type": {
								"type": "reference",
								"name": "DataValueType",
								"id": 27533
							}
						},
						{
							"id": 27533,
							"name": "DataValueType",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the data value type."
							},
							"sources": [
								{
									"fileName": "source/core/modules/core.ts",
									"line": 88785,
									"character": 29
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"name": "Date"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Modules",
							"kind": 2,
							"children": [
								41,
								1425,
								13963,
								3421,
								27016
							]
						},
						{
							"title": "Enumerations",
							"kind": 4,
							"children": [
								1600,
								1613,
								1646,
								1650,
								1654,
								1658,
								1661,
								1665,
								1677,
								46036,
								1686,
								19465,
								19469,
								19475,
								1722,
								1726,
								1738,
								1743,
								1747,
								1729,
								1757,
								1760,
								1765,
								1767,
								1774,
								1779,
								21140,
								1793,
								1796,
								1800,
								1804,
								1822,
								1810,
								1815,
								1827,
								1870,
								1873,
								1879,
								1884,
								1890,
								1898,
								1902,
								1915,
								1919,
								1924,
								1929,
								1933,
								1939,
								1944,
								1949,
								1956
							]
						},
						{
							"title": "Classes",
							"kind": 128,
							"children": [
								1075,
								2025,
								1961,
								1978,
								1989,
								955,
								2000,
								2017
							]
						},
						{
							"title": "Interfaces",
							"kind": 256,
							"children": [
								1048,
								26830
							]
						},
						{
							"title": "Type aliases",
							"kind": 4194304,
							"children": [
								27535,
								27534,
								27533
							]
						}
					],
					"sources": [
						{
							"fileName": "source/core/modules/core.ts",
							"line": 8,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 183,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 206,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 1861,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 2184,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 2364,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 2597,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 2846,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 2886,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 2938,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 2960,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 3010,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 3853,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 4187,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 4588,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 4593,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 4923,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 5047,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 5229,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 5434,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 5479,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 5517,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 5560,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 5576,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 5595,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 5628,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 5659,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 5669,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 5688,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 6605,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 6700,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 6828,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 6854,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 6924,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 7199,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 7344,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 7394,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 8483,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 8499,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 8532,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 8587,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 8645,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 8820,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 8971,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 9081,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 9150,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 9264,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 9291,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 9364,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 9518,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 9591,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 9655,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 9794,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 9817,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 9841,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 9866,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 9887,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 9911,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 9934,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 9974,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 10017,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 10176,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 10199,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 10218,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 10260,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 10287,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 10309,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 10356,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 10376,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 10404,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 10419,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 10454,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 10481,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 10512,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 10536,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 10560,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 10579,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 10602,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 10626,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 10658,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 10685,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 10720,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 10746,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 10915,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 10930,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 10949,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 10980,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 11007,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 11038,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 11077,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 11101,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 11160,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 11184,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 11211,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 11238,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 11262,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 11293,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 11320,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 11348,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 11383,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 11410,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 11431,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 11463,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 11490,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 11511,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 11529,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 11548,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 11931,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 12046,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 12147,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 12272,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 12293,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 12313,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 12339,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 12614,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 13931,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 15099,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 16083,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 16100,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 16219,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 16402,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 16422,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 16437,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 16548,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 16577,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 16594,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 16613,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 16630,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 16646,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 16662,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 16763,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 16864,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 16882,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 17082,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 17126,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 17142,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 17195,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 17230,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 17332,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 17350,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 17379,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 17422,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 17433,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 17451,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 17520,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 17577,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 17666,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 17814,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 17906,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 17943,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 18056,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 18108,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 18159,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 18181,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 18203,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 18286,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 18328,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 18386,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 18480,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 18503,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 18522,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 18541,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 18556,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 18575,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 18607,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 18639,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 18755,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 18789,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 18836,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 18975,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 19152,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 19405,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 19560,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 19756,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 19863,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 20024,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 20182,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 20207,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 20232,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 20249,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 20274,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 20299,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 20378,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 20439,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 20563,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 20643,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 20698,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 20741,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 20773,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 20816,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 20848,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 20891,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 20923,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 20962,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 20994,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 21036,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 21052,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 21080,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 21098,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 21192,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 21324,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 21469,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 21807,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 22070,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 22103,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 22260,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 22393,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 22597,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 22786,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 22803,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 22939,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 22992,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 23045,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 23098,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 23151,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 23211,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 23264,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 23317,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 23370,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 23390,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 23414,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 23481,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 23510,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 23540,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 23600,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 23706,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 23728,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 23775,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 23790,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 23904,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 23936,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 24002,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 24093,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 24152,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 24220,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 24297,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 24452,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 24494,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 24546,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 24597,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 24613,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 24634,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 24654,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 24913,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 25025,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 25076,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 25291,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 25332,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 25364,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 25406,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 25438,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 25540,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 25578,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 25610,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 25651,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 25683,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 25724,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 25756,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 25900,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 26035,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 26093,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 26135,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 26173,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 26205,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 26241,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 26261,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 26406,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 26461,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 26502,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 26587,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 26642,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 26683,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 26821,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 26882,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 26914,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 26959,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 27044,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 27081,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 27199,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 27252,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 27296,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 27344,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 27385,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 27462,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 27534,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 27556,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 27589,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 27652,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 27699,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 27754,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 27832,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 27930,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 28043,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 28121,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 28157,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 28210,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 28267,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 28366,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 28388,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 28401,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 28413,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 28430,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 28441,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 28502,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 28533,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 28610,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 28658,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 28671,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 28694,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 28714,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 28734,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 28754,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 28775,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 28875,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 28930,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 28989,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 29066,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 29128,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 29141,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 29158,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 29171,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 29221,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 29238,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 29307,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 29330,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 29366,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 29378,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 29409,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 29440,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 29451,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 29466,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 29481,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 29498,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 29641,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 29699,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 29733,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 29766,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 29806,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 29840,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 29879,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 29920,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 29985,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 30048,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 30076,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 30108,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 30125,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 30172,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 30205,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 30251,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 30272,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 30286,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 30353,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 30370,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 30388,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 30451,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 30525,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 30630,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 30791,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 30891,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 30926,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 31108,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 31140,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 31406,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 31472,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 31501,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 31555,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 31902,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 31940,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 32147,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 32201,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 32274,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 32303,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 32349,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 32404,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 32445,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 32628,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 32744,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 32865,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 32913,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 32955,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 32997,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 33039,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 33081,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 33123,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 33165,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 33193,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 33235,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 33455,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 33510,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 33531,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 33578,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 33805,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 33931,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 33989,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 34053,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 34181,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 34220,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 34274,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 34304,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 34463,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 34569,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 34622,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 34672,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 34724,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 34852,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 34996,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 35061,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 35167,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 35381,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 35752,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 35994,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 36178,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 36373,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 36688,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 36761,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 36857,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 36996,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 37070,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 37216,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 37271,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 37293,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 37315,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 37330,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 37345,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 37404,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 37477,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 37500,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 37516,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 37569,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 37592,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 37607,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 37622,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 37653,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 37680,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 37775,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 37878,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 37981,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 38141,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 38189,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 38223,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 38252,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 38278,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 38311,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 38343,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 38392,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 38525,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 38619,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 38815,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 38988,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 39097,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 39210,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 39335,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 39467,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 39609,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 39684,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 39759,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 39776,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 39807,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 39848,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 39863,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 39956,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 40044,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 40099,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 40318,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 40488,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 40586,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 40662,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 40727,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 40742,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 40757,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 40776,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 40874,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 40912,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 40950,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 41094,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 41134,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 41170,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 41276,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 41316,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 41420,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 41606,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 41750,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 41767,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 41786,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 41818,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 41836,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 41853,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 41881,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 41900,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 41918,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 41974,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 42001,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 42025,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 42056,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 42073,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 42219,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 42311,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 42419,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 42596,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 42813,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 43160,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 43420,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 43472,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 43520,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 43640,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 44069,
							"character": 9
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 44137,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 44378,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 44429,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 44801,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 44844,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 44871,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 45029,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 45188,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 45205,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 45244,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 45299,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 45371,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 45410,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 45481,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 45520,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 45559,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 45575,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 45591,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 45619,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 45635,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 45663,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 45679,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 45695,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 45714,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 45843,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 45859,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 45886,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 45920,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 45935,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 45948,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 45959,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 45978,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 45998,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 46018,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 46045,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 46060,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 46084,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 46111,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 46138,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 46153,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 46220,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 46259,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 46278,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 46293,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 46337,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 46356,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 46371,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 46421,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 46583,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 46702,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 47537,
							"character": 9
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 47592,
							"character": 9
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 47668,
							"character": 9
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 47817,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 48097,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 48158,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 48238,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 48587,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 48659,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 48765,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 48816,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 49002,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 49334,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 49519,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 49577,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 49617,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 49709,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 50301,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 50350,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 50395,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 50479,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 50640,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 50713,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 50878,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 50987,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 51202,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 51798,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 51834,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 52049,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 52131,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 52306,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 52394,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 52453,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 52502,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 52576,
							"character": 9
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 52646,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 52811,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 52912,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 53076,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 53125,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 53166,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 53201,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 53260,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 53313,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 53350,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 53426,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 53463,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 53516,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 53569,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 53605,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 53625,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 53644,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 53709,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 53754,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 53770,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 53790,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 53809,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 53824,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 53940,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 54033,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 54085,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 54116,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 54135,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 54162,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 54177,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 54206,
							"character": 9
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 54494,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 54831,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 54914,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 54957,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 54989,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 55016,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 55057,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 55106,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 55218,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 55244,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 55309,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 55336,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 55397,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 55616,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 55715,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 55762,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 55859,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 56076,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 56096,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 56120,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 56135,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 56154,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 56177,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 56208,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 56411,
							"character": 9
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 56430,
							"character": 9
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 56450,
							"character": 9
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 56477,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 56556,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 56576,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 56621,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 56701,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 56728,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 56780,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 56831,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 56900,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 56951,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 56966,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 56981,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 57011,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 57083,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 57212,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 57231,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 57270,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 57285,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 57321,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 57348,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 57409,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 57428,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 57451,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 57478,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 57494,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 57513,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 57566,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 57583,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 57727,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 57744,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 57855,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 57936,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 58008,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 58039,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 58058,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 58079,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 58120,
							"character": 9
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 58144,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 58171,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 58214,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 58237,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 58279,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 58298,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 58317,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 58331,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 58383,
							"character": 9
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 58466,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 58585,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 58666,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 58696,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 58740,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 58772,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 58891,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 58926,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 58962,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 59011,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 59046,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 59061,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 59076,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 59091,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 59140,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 59212,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 59227,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 59250,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 59274,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 59298,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 59338,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 59384,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 59428,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 59499,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 59588,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 59729,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 59859,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 59893,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 59932,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 59979,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 60024,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 60079,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 60102,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 60147,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 60212,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 60239,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 60284,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 60330,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 60374,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 60433,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 60478,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 60497,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 60542,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 60588,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 60632,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 60691,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 60758,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 60777,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 60822,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 60877,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 60900,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 60945,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 60991,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 61034,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 61108,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 61172,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 61302,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 61380,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 61394,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 61422,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 61449,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 61468,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 61513,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 61559,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 61587,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 61637,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 61686,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 61701,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 61712,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 61752,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 61864,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 61916,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 61943,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 62079,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 62174,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 62286,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 62316,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 62373,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 62404,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 62435,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 62541,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 62562,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 62599,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 62622,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 62653,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 62695,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 62766,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 62806,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 62823,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 62837,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 62878,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 62922,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 62957,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 63017,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 63063,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 63106,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 63173,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 63236,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 63438,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 63477,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 63539,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 63557,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 63602,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 63662,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 63721,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 63805,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 63855,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 63900,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 63947,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 63990,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 64009,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 64094,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 64228,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 64253,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 64287,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 64303,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 64316,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 64403,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 64415,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 64472,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 64486,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 64500,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 64522,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 64536,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 64555,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 64568,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 64584,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 64596,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 64665,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 64686,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 64701,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 64722,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 64736,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 64752,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 64768,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 64812,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 64868,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 64954,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 64981,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 65031,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 65077,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 65127,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 65183,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 65256,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 65309,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 65470,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 65492,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 65519,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 65538,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 65585,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 65635,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 65793,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 65861,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 65877,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 65892,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 65974,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 66204,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 66241,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 66290,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 66369,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 66386,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 66434,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 66560,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 66607,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 66622,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 66788,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 66886,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 66904,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 66974,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 66999,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 67031,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 67084,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 67129,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 67182,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 67235,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 67289,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 67347,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 67379,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 67440,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 67503,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 67561,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 67589,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 67730,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 67773,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 67788,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 67857,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 67880,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 67926,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 67975,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 68031,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 68149,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 68197,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 68244,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 68289,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 68365,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 68384,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 68552,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 68657,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 68702,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 68740,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 68787,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 68864,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 68902,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 68949,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 69002,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 69049,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 69096,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 69143,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 69190,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 69237,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 69284,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 69331,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 69378,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 69425,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 69472,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 69519,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 69566,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 69871,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 69952,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 69971,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 70007,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 70027,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 70055,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 70075,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 70104,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 70121,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 70266,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 70296,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 70318,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 70341,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 70375,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 70409,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 70453,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 70577,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 70602,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 70749,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 70911,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 70978,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 71037,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 71111,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 71142,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 71395,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 71437,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 71484,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 71619,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 71717,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 71820,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 71885,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 71958,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 72058,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 72251,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 72401,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 72570,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 72646,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 72715,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 72774,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 72841,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 72996,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 73036,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 73082,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 73200,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 73268,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 73317,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 73406,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 73437,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 73536,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 73577,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 73696,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 73894,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 74000,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 74020,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 74173,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 74249,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 74281,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 74323,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 74418,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 74511,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 74553,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 74594,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 74616,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 74709,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 74742,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 74772,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 74856,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 74891,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 74922,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 74965,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 75003,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 75017,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 75048,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 75091,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 75204,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 75218,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 75240,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 75288,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 75331,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 75367,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 75423,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 75447,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 75482,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 75552,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 75583,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 75614,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 75664,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 75722,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 75753,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 75784,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 75809,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 75845,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 75915,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 75946,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 75977,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 76027,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 76085,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 76116,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 76147,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 76194,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 76237,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 76268,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 76299,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 76336,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 76377,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 76408,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 76439,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 76494,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 76577,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 76655,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 76674,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 76694,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 76792,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 76812,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 76869,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 76889,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 76960,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 77050,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 77067,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 77086,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 77126,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 77146,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 77291,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 77311,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 77493,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 77513,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 77726,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 77882,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 77929,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 77998,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 78035,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 78083,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 78120,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 78166,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 78214,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 78246,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 78274,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 78397,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 78516,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 78595,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 78621,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 78761,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 78780,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 78799,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 78832,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 78873,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 78944,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 78962,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 78986,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 79010,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 79034,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 79058,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 79076,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 79166,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 79256,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 79276,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 79327,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 79476,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 79555,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 79572,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 79592,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 79621,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 79700,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 79717,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 79737,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 79758,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 79837,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 79854,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 79874,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 79895,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 79915,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 80004,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 80095,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 80112,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 80132,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 80221,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 80241,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 80324,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 80344,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 80477,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 80497,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 80586,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 80606,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 80832,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 80859,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 80900,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 80941,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 80982,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 81023,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 81064,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 81105,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 81146,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 81188,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 81229,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 81276,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 81307,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 81338,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 81368,
							"character": 9
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 81466,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 81483,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 81503,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 82674,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 82835,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 82916,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 82936,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 82956,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 82990,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 83010,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 83044,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 83064,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 83101,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 83121,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 83154,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 83171,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 83191,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 83226,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 83324,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 83344,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 83400,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 83420,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 83456,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 83557,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 83658,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 83754,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 83878,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 84002,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 84101,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 84622,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 85006,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 85126,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 85416,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 85952,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 86088,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 86180,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 86367,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 86393,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 86544,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 86611,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 86768,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 87031,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 87157,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 87437,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 87586,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 87732,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 87916,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 88305,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 88356,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 88388,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 88420,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 88440,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 88471,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 88499,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 88515,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 88539,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 88587,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 88697,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 88779,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 88792,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 88808,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 88888,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 89535,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 89609,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 89768,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 90013,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 90211,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 90357,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 90368,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 90689,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 91266,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 91308,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 91369,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 91749,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 91885,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 91923,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 92226,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 92598,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 94149,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 94182,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 94391,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 94437,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 94692,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 94997,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 95156,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 95361,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 96733,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 96877,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 97213,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 97437,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 97581,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 97640,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 97700,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 97723,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 97789,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 97859,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 97879,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 98036,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 98217,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 98319,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 98426,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 98462,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 98810,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 99810,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 99832,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 100128,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 100294,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 100342,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 100457,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 100576,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 100656,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 100681,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 100751,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 101122,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 101145,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 101245,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 101262,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 101284,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 101469,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 101488,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 101927,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 101998,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 102119,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 102349,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 102579,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 102611,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 102883,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 103167,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 103217,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 103238,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 103690,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 103903,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 104013,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 104122,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 104314,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 105221,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 105386,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 105434,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 105515,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 105643,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 106638,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 107109,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 107278,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 107366,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 107380,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 107494,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 107588,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 107681,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 107748,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 107840,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 107856,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 107968,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 108089,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 108120,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 108160,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 108203,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 108230,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 108280,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 108303,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 108367,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 108432,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 108528,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 108561,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 108714,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 108882,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 108940,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 108991,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 109142,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 109415,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 109471,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 109665,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 110099,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 110603,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 110629,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 110667,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 110676,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 110717,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 110733,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 110831,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 110964,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 111013,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 111139,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 111788,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 111886,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 111950,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 112124,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 112203,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 112323,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 112513,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 112600,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 112630,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 112701,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 112730,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 112757,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 112905,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 113155,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 113189,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 113318,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 113351,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 113407,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 113450,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 113495,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 113540,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 113636,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 113712,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 113786,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 113823,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 113897,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 113924,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 114010,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 114039,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 114199,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 114243,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 114291,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 114455,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 114551,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 114736,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 114774,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 114808,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 114852,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 114872,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 115235,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 115315,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 115355,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 115414,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 115553,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 115610,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 115785,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 115925,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 115999,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 116158,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 116183,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 116312,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 116440,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 116571,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 116649,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 116762,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 116813,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 116889,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 117021,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 117053,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 117149,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 117405,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 117518,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 117715,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 117808,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 117991,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 118341,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 118385,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 118480,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 118651,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 118689,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 118712,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 118874,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 118957,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 119307,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 119330,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 119409,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 119455,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 119466,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 119582,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 119617,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 119638,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 119816,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 119836,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 119965,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 120034,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 120201,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 120244,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 120399,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 121197,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 121363,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 121412,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 121863,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 122285,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 122534,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 122589,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 122654,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 122786,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 122834,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 122884,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 123155,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 123193,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 123251,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 123278,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 124826,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 124924,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 125291,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 125346,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 125549,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 125594,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 125922,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 126200,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 126299,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 126359,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 126567,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 126819,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 127279,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 127453,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 127637,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 127658,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 127863,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 129114,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 129445,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 129505,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 129753,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 129954,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 129996,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 130188,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 130209,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 130308,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 132379,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 132668,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 132729,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 133036,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 133267,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 133574,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 133734,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 134144,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 134456,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 134515,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 134701,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 134780,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 134852,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 134964,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 135028,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 135071,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 135192,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 135235,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 135278,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 135411,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 135437,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 135642,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 135867,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 136132,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 136190,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 136554,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 136757,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 136948,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 137410,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 137475,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 137508,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 137541,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 137574,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 137607,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 137640,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 137673,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 137706,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 137739,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 137772,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 137807,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 138291,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 138741,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 138774,
							"character": 12
						},
						{
							"fileName": "source/core/modules/core.ts",
							"line": 138853,
							"character": 12
						}
					]
				}
			],
			"groups": [
				{
					"title": "Modules",
					"kind": 2,
					"children": [
						6
					]
				}
			],
			"sources": [
				{
					"fileName": "source/core/modules/core.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 56019,
			"name": "financial",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/BitBucket/kk-sites/source/financial/modules/financial.ts",
			"comment": {},
			"children": [
				{
					"id": 56020,
					"name": "dv",
					"kind": 2,
					"kindString": "Module",
					"flags": {},
					"children": [
						{
							"id": 56021,
							"name": "financial",
							"kind": 2,
							"kindString": "Module",
							"flags": {
								"isExported": true
							},
							"comment": {},
							"children": [
								{
									"id": 56025,
									"name": "models",
									"kind": 2,
									"kindString": "Module",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 56936,
											"name": "IStockPointModel",
											"kind": 256,
											"kindString": "Interface",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Represents the stock data point model."
											},
											"children": [
												{
													"id": 56959,
													"name": "additionalKind",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets the additional kind."
													},
													"sources": [
														{
															"fileName": "source/core/modules/core.ts",
															"line": 46203,
															"character": 22
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IPointModel.additionalKind",
														"id": 13896
													}
												},
												{
													"id": 56940,
													"name": "close",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets the close"
													},
													"sources": [
														{
															"fileName": "source/financial/modules/financial.ts",
															"line": 1764,
															"character": 22
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 56956,
													"name": "color",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets the color."
													},
													"sources": [
														{
															"fileName": "source/core/modules/core.ts",
															"line": 46191,
															"character": 13
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"name": "ILinearGradientColor",
																"id": 3692
															},
															{
																"type": "reference",
																"name": "IRadialGradientColor",
																"id": 3697
															}
														]
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IPointModel.color",
														"id": 13893
													}
												},
												{
													"id": 56942,
													"name": "detail",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets the detail."
													},
													"sources": [
														{
															"fileName": "source/core/modules/core.ts",
															"line": 37636,
															"character": 23
														}
													],
													"type": {
														"type": "reference",
														"name": "DataValueType",
														"id": 27533
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "ICartesianPointModel.detail",
														"id": 11032
													}
												},
												{
													"id": 56943,
													"name": "dimension",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets the dimension value."
													},
													"sources": [
														{
															"fileName": "source/core/modules/core.ts",
															"line": 37640,
															"character": 26
														}
													],
													"type": {
														"type": "reference",
														"name": "DataValueType",
														"id": 27533
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "ICartesianPointModel.dimension",
														"id": 11033
													}
												},
												{
													"id": 56961,
													"name": "filtered",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets whether it is filtered out."
													},
													"sources": [
														{
															"fileName": "source/core/modules/core.ts",
															"line": 46211,
															"character": 16
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IPointModel.filtered",
														"id": 13898
													}
												},
												{
													"id": 56937,
													"name": "high",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets the high"
													},
													"sources": [
														{
															"fileName": "source/financial/modules/financial.ts",
															"line": 1752,
															"character": 21
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 56962,
													"name": "hover",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets whether the mouse pointer is on it."
													},
													"sources": [
														{
															"fileName": "source/core/modules/core.ts",
															"line": 46215,
															"character": 13
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IPointModel.hover",
														"id": 13899
													}
												},
												{
													"id": 56946,
													"name": "item",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets the item."
													},
													"sources": [
														{
															"fileName": "source/core/modules/core.ts",
															"line": 46163,
															"character": 21
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 56947,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"indexSignature": [
																{
																	"id": 56948,
																	"name": "__index",
																	"kind": 8192,
																	"kindString": "Index signature",
																	"flags": {},
																	"parameters": [
																		{
																			"id": 56949,
																			"name": "key",
																			"kind": 32768,
																			"kindString": "Parameter",
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"name": "DataValueType",
																		"id": 27533
																	}
																}
															],
															"sources": [
																{
																	"fileName": "source/core/modules/core.ts",
																	"line": 46163,
																	"character": 22
																}
															]
														}
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IPointModel.item",
														"id": 13883
													}
												},
												{
													"id": 56950,
													"name": "items",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets the data items."
													},
													"sources": [
														{
															"fileName": "source/core/modules/core.ts",
															"line": 46167,
															"character": 22
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "object"
														}
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IPointModel.items",
														"id": 13887
													}
												},
												{
													"id": 56938,
													"name": "low",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets the low"
													},
													"sources": [
														{
															"fileName": "source/financial/modules/financial.ts",
															"line": 1756,
															"character": 20
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 56945,
													"name": "offset",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets the offset of the data point."
													},
													"sources": [
														{
															"fileName": "source/core/modules/core.ts",
															"line": 37648,
															"character": 14
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "null"
															}
														]
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "ICartesianPointModel.offset",
														"id": 11035
													}
												},
												{
													"id": 56939,
													"name": "open",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets the open"
													},
													"sources": [
														{
															"fileName": "source/financial/modules/financial.ts",
															"line": 1760,
															"character": 21
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 56964,
													"name": "parent",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets the parent."
													},
													"sources": [
														{
															"fileName": "source/core/modules/core.ts",
															"line": 46273,
															"character": 23
														}
													],
													"type": {
														"type": "reference",
														"name": "IViewModel",
														"id": 13918
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IViewModel.parent",
														"id": 13920
													}
												},
												{
													"id": 56960,
													"name": "selected",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets whether it is selected."
													},
													"sources": [
														{
															"fileName": "source/core/modules/core.ts",
															"line": 46207,
															"character": 16
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IPointModel.selected",
														"id": 13897
													}
												},
												{
													"id": 56952,
													"name": "selectedStyle",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets the selected style."
													},
													"sources": [
														{
															"fileName": "source/core/modules/core.ts",
															"line": 46175,
															"character": 30
														}
													],
													"type": {
														"type": "reference",
														"name": "ISelectionStyleOption",
														"id": 17812
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IPointModel.selectedStyle",
														"id": 13889
													}
												},
												{
													"id": 56957,
													"name": "shape",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets the shape."
													},
													"sources": [
														{
															"fileName": "source/core/modules/core.ts",
															"line": 46195,
															"character": 13
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IPointModel.shape",
														"id": 13894
													}
												},
												{
													"id": 56958,
													"name": "size",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets the size."
													},
													"sources": [
														{
															"fileName": "source/core/modules/core.ts",
															"line": 46199,
															"character": 12
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IPointModel.size",
														"id": 13895
													}
												},
												{
													"id": 56951,
													"name": "style",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets the style."
													},
													"sources": [
														{
															"fileName": "source/core/modules/core.ts",
															"line": 46171,
															"character": 22
														}
													],
													"type": {
														"type": "reference",
														"name": "IDataPointStyleOption",
														"id": 16897
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IPointModel.style",
														"id": 13888
													}
												},
												{
													"id": 56954,
													"name": "text",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets the text config."
													},
													"sources": [
														{
															"fileName": "source/core/modules/core.ts",
															"line": 46183,
															"character": 21
														}
													],
													"type": {
														"type": "reference",
														"name": "IPlotConfigTextOption",
														"id": 17268
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IPointModel.text",
														"id": 13891
													}
												},
												{
													"id": 56955,
													"name": "tooltip",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets the tooltip config."
													},
													"sources": [
														{
															"fileName": "source/core/modules/core.ts",
															"line": 46187,
															"character": 24
														}
													],
													"type": {
														"type": "reference",
														"name": "IPlotConfigTooltipOption",
														"id": 17286
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IPointModel.tooltip",
														"id": 13892
													}
												},
												{
													"id": 56963,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets the type."
													},
													"sources": [
														{
															"fileName": "source/core/modules/core.ts",
															"line": 46269,
															"character": 21
														}
													],
													"type": {
														"type": "reference",
														"name": "ElementType",
														"id": 1686
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IViewModel.type",
														"id": 13919
													}
												},
												{
													"id": 56953,
													"name": "unselectedStyle",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets the unselected style."
													},
													"sources": [
														{
															"fileName": "source/core/modules/core.ts",
															"line": 46179,
															"character": 32
														}
													],
													"type": {
														"type": "reference",
														"name": "ISelectionStyleOption",
														"id": 17812
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IPointModel.unselectedStyle",
														"id": 13890
													}
												},
												{
													"id": 56944,
													"name": "value",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets the value of the data point."
													},
													"sources": [
														{
															"fileName": "source/core/modules/core.ts",
															"line": 37644,
															"character": 22
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "ICartesianPointModel.value",
														"id": 11034
													}
												},
												{
													"id": 56941,
													"name": "valueDefinition",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets the value definition."
													},
													"sources": [
														{
															"fileName": "source/core/modules/core.ts",
															"line": 37632,
															"character": 32
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "ICartesianPointModel.valueDefinition",
														"id": 11031
													}
												},
												{
													"id": 56965,
													"name": "queryInterface",
													"kind": 2048,
													"kindString": "Method",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 56966,
															"name": "queryInterface",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"comment": {
																"shortText": "Queries the specified interface.",
																"returns": "The specified interface.\n"
															},
															"parameters": [
																{
																	"id": 56967,
																	"name": "name",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"comment": {
																		"text": "The interface name.\n"
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "IQueryInterface",
																"id": 1048
															},
															"inheritedFrom": {
																"type": "reference",
																"name": "IQueryInterface.queryInterface",
																"id": 1049
															}
														}
													],
													"sources": [
														{
															"fileName": "source/core/modules/core.ts",
															"line": 5590,
															"character": 22
														}
													],
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														56959,
														56940,
														56956,
														56942,
														56943,
														56961,
														56937,
														56962,
														56946,
														56950,
														56938,
														56945,
														56939,
														56964,
														56960,
														56952,
														56957,
														56958,
														56951,
														56954,
														56955,
														56963,
														56953,
														56944,
														56941
													]
												},
												{
													"title": "Methods",
													"kind": 2048,
													"children": [
														56965
													]
												}
											],
											"sources": [
												{
													"fileName": "source/financial/modules/financial.ts",
													"line": 1748,
													"character": 37
												}
											],
											"extendedTypes": [
												{
													"type": "reference",
													"name": "ICartesianPointModel",
													"id": 11030
												}
											]
										}
									],
									"groups": [
										{
											"title": "Interfaces",
											"kind": 256,
											"children": [
												56936
											]
										}
									],
									"sources": [
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 30,
											"character": 29
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 162,
											"character": 29
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 204,
											"character": 29
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 253,
											"character": 29
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 291,
											"character": 29
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 324,
											"character": 29
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 362,
											"character": 29
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 395,
											"character": 29
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 454,
											"character": 29
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 814,
											"character": 29
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 937,
											"character": 29
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 965,
											"character": 29
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 1009,
											"character": 29
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 1028,
											"character": 29
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 1133,
											"character": 29
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 1292,
											"character": 29
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 1373,
											"character": 29
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 1570,
											"character": 29
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 1651,
											"character": 29
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 1707,
											"character": 29
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 1730,
											"character": 29
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 1742,
											"character": 29
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 1768,
											"character": 29
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 1864,
											"character": 29
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 2184,
											"character": 29
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 2315,
											"character": 29
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 2353,
											"character": 29
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 2550,
											"character": 29
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 3361,
											"character": 29
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 3404,
											"character": 29
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 3440,
											"character": 29
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 3481,
											"character": 29
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 3517,
											"character": 29
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 3599,
											"character": 29
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 3635,
											"character": 29
										}
									]
								},
								{
									"id": 57007,
									"name": "options",
									"kind": 2,
									"kindString": "Module",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 57067,
											"name": "IStockFieldOption",
											"kind": 256,
											"kindString": "Interface",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Represents the stock field option."
											},
											"children": [
												{
													"id": 57071,
													"name": "close",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets the close field name."
													},
													"sources": [
														{
															"fileName": "source/financial/modules/financial.ts",
															"line": 2087,
															"character": 13
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 57068,
													"name": "high",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets the high field name."
													},
													"sources": [
														{
															"fileName": "source/financial/modules/financial.ts",
															"line": 2075,
															"character": 12
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 57069,
													"name": "low",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets the low field name."
													},
													"sources": [
														{
															"fileName": "source/financial/modules/financial.ts",
															"line": 2079,
															"character": 11
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 57070,
													"name": "open",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets the open field name."
													},
													"sources": [
														{
															"fileName": "source/financial/modules/financial.ts",
															"line": 2083,
															"character": 12
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 57072,
													"name": "x",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets the x field name."
													},
													"sources": [
														{
															"fileName": "source/financial/modules/financial.ts",
															"line": 2091,
															"character": 9
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 57075,
													"name": "isEmpty",
													"kind": 2048,
													"kindString": "Method",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 57076,
															"name": "isEmpty",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"comment": {
																"shortText": "Gets whether the option is empty."
															},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															},
															"inheritedFrom": {
																"type": "reference",
																"name": "IOption.isEmpty",
																"id": 17159
															}
														}
													],
													"sources": [
														{
															"fileName": "source/core/modules/core.ts",
															"line": 57423,
															"character": 15
														}
													],
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												},
												{
													"id": 57073,
													"name": "option",
													"kind": 2048,
													"kindString": "Method",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 57074,
															"name": "option",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"comment": {
																"shortText": "Gets the option setting."
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															},
															"inheritedFrom": {
																"type": "reference",
																"name": "IOption.option",
																"id": 17157
															}
														}
													],
													"sources": [
														{
															"fileName": "source/core/modules/core.ts",
															"line": 57419,
															"character": 14
														}
													],
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														57071,
														57068,
														57069,
														57070,
														57072
													]
												},
												{
													"title": "Methods",
													"kind": 2048,
													"children": [
														57075,
														57073
													]
												}
											],
											"sources": [
												{
													"fileName": "source/financial/modules/financial.ts",
													"line": 2071,
													"character": 38
												}
											],
											"extendedTypes": [
												{
													"type": "reference",
													"name": "IOption",
													"id": 17156
												}
											]
										},
										{
											"id": 57077,
											"name": "IStockFieldValueEncodingOption",
											"kind": 256,
											"kindString": "Interface",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Represents the stock value encoding option."
											},
											"children": [
												{
													"id": 57079,
													"name": "aggregate",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets the aggregate option."
													},
													"sources": [
														{
															"fileName": "source/financial/modules/financial.ts",
															"line": 2110,
															"character": 17
														}
													],
													"type": {
														"type": "reference",
														"name": "Aggregate",
														"id": 1600
													}
												},
												{
													"id": 57080,
													"name": "excludeNulls",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets whether the null values is shown."
													},
													"sources": [
														{
															"fileName": "source/financial/modules/financial.ts",
															"line": 2114,
															"character": 20
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 57078,
													"name": "field",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets the field name."
													},
													"sources": [
														{
															"fileName": "source/financial/modules/financial.ts",
															"line": 2106,
															"character": 13
														}
													],
													"type": {
														"type": "reference",
														"name": "IStockFieldOption",
														"id": 57067
													}
												},
												{
													"id": 57081,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets option type."
													},
													"sources": [
														{
															"fileName": "source/core/modules/core.ts",
															"line": 54172,
															"character": 21
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IValueEncodingOption.type",
														"id": 16405
													}
												},
												{
													"id": 57084,
													"name": "isEmpty",
													"kind": 2048,
													"kindString": "Method",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 57085,
															"name": "isEmpty",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"comment": {
																"shortText": "Gets whether the option is empty."
															},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															},
															"inheritedFrom": {
																"type": "reference",
																"name": "IOption.isEmpty",
																"id": 17159
															}
														}
													],
													"sources": [
														{
															"fileName": "source/core/modules/core.ts",
															"line": 57423,
															"character": 15
														}
													],
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												},
												{
													"id": 57082,
													"name": "option",
													"kind": 2048,
													"kindString": "Method",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 57083,
															"name": "option",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"comment": {
																"shortText": "Gets the option setting."
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															},
															"inheritedFrom": {
																"type": "reference",
																"name": "IOption.option",
																"id": 17157
															}
														}
													],
													"sources": [
														{
															"fileName": "source/core/modules/core.ts",
															"line": 57419,
															"character": 14
														}
													],
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														57079,
														57080,
														57078,
														57081
													]
												},
												{
													"title": "Methods",
													"kind": 2048,
													"children": [
														57084,
														57082
													]
												}
											],
											"sources": [
												{
													"fileName": "source/financial/modules/financial.ts",
													"line": 2102,
													"character": 51
												}
											],
											"extendedTypes": [
												{
													"type": "reference",
													"name": "IValueEncodingOption",
													"id": 16404
												}
											]
										}
									],
									"groups": [
										{
											"title": "Interfaces",
											"kind": 256,
											"children": [
												57067,
												57077
											]
										}
									],
									"sources": [
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 1897,
											"character": 30
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 1994,
											"character": 30
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 2065,
											"character": 30
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 2096,
											"character": 30
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 2119,
											"character": 30
										}
									]
								},
								{
									"id": 57388,
									"name": "plugins",
									"kind": 2,
									"kindString": "Module",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 2584,
											"character": 30
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 2631,
											"character": 30
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 2678,
											"character": 30
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 2725,
											"character": 30
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 2772,
											"character": 30
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 2819,
											"character": 30
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 2866,
											"character": 30
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 2913,
											"character": 30
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 2960,
											"character": 30
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 3007,
											"character": 30
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 3054,
											"character": 30
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 3537,
											"character": 30
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 3568,
											"character": 30
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 3656,
											"character": 30
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 3687,
											"character": 30
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 3718,
											"character": 30
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 3760,
											"character": 30
										},
										{
											"fileName": "source/financial/modules/financial.ts",
											"line": 5588,
											"character": 30
										}
									]
								}
							],
							"groups": [
								{
									"title": "Modules",
									"kind": 2,
									"children": [
										56025,
										57007,
										57388
									]
								}
							],
							"sources": [
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 8,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 30,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 162,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 204,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 253,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 291,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 324,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 362,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 395,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 454,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 814,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 937,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 965,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 1009,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 1028,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 1133,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 1292,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 1373,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 1570,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 1651,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 1707,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 1730,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 1742,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 1768,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 1864,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 1897,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 1994,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 2065,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 2096,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 2119,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 2184,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 2255,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 2315,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 2353,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 2396,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 2491,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 2521,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 2550,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 2584,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 2631,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 2678,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 2725,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 2772,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 2819,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 2866,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 2913,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 2960,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 3007,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 3054,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 3101,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 3142,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 3241,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 3283,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 3361,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 3404,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 3440,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 3481,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 3517,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 3537,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 3568,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 3599,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 3635,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 3656,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 3687,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 3718,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 3760,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 3802,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 3874,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 3933,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 4098,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 4156,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 4419,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 4551,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 4623,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 4892,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 5175,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 5294,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 5339,
									"character": 22
								},
								{
									"fileName": "source/financial/modules/financial.ts",
									"line": 5588,
									"character": 22
								}
							]
						}
					],
					"groups": [
						{
							"title": "Modules",
							"kind": 2,
							"children": [
								56021
							]
						}
					],
					"sources": [
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 8,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 30,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 162,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 204,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 253,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 291,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 324,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 362,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 395,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 454,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 814,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 937,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 965,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 1009,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 1028,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 1133,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 1292,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 1373,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 1570,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 1651,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 1707,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 1730,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 1742,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 1768,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 1864,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 1897,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 1994,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 2065,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 2096,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 2119,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 2184,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 2255,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 2315,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 2353,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 2396,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 2491,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 2521,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 2550,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 2584,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 2631,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 2678,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 2725,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 2772,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 2819,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 2866,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 2913,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 2960,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 3007,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 3054,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 3101,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 3142,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 3241,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 3283,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 3361,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 3404,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 3440,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 3481,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 3517,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 3537,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 3568,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 3599,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 3635,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 3656,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 3687,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 3718,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 3760,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 3802,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 3874,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 3933,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 4098,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 4156,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 4419,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 4551,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 4623,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 4892,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 5175,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 5294,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 5339,
							"character": 12
						},
						{
							"fileName": "source/financial/modules/financial.ts",
							"line": 5588,
							"character": 12
						}
					]
				}
			],
			"groups": [
				{
					"title": "Modules",
					"kind": 2,
					"children": [
						56020
					]
				}
			],
			"sources": [
				{
					"fileName": "source/financial/modules/financial.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 59686,
			"name": "map",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/BitBucket/kk-sites/source/map/modules/map.ts",
			"comment": {},
			"children": [
				{
					"id": 59687,
					"name": "dv",
					"kind": 2,
					"kindString": "Module",
					"flags": {},
					"children": [
						{
							"id": 59688,
							"name": "map",
							"kind": 2,
							"kindString": "Module",
							"flags": {
								"isExported": true
							},
							"comment": {},
							"children": [
								{
									"id": 59705,
									"name": "models",
									"kind": 2,
									"kindString": "Module",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 60833,
											"name": "IGeographicLocation",
											"kind": 256,
											"kindString": "Interface",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Represents the geographic location."
											},
											"children": [
												{
													"id": 60836,
													"name": "identify",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets the identify."
													},
													"sources": [
														{
															"fileName": "source/map/modules/map.ts",
															"line": 2529,
															"character": 25
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 60835,
													"name": "latitude",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets the latitude."
													},
													"sources": [
														{
															"fileName": "source/map/modules/map.ts",
															"line": 2525,
															"character": 25
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 60834,
													"name": "longitude",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets the longitude."
													},
													"sources": [
														{
															"fileName": "source/map/modules/map.ts",
															"line": 2521,
															"character": 26
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														60836,
														60835,
														60834
													]
												}
											],
											"sources": [
												{
													"fileName": "source/map/modules/map.ts",
													"line": 2517,
													"character": 40
												}
											]
										}
									],
									"groups": [
										{
											"title": "Interfaces",
											"kind": 256,
											"children": [
												60833
											]
										}
									],
									"sources": [
										{
											"fileName": "source/map/modules/map.ts",
											"line": 97,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 164,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 203,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 235,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 290,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 437,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 484,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 539,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 572,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 615,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 670,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 703,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 746,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 904,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 937,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 1047,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 1173,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 1214,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 1229,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 1243,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 1256,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 1294,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 1325,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 1352,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 1458,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 1505,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 1563,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 1630,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 1694,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 1884,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 1954,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 2006,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 2062,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 2103,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 2182,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 2326,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 2380,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 2434,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 2511,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 2534,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 2577,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 2627,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 2672,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 2838,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 2894,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 2949,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 2969,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 3013,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 3067,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 3146,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 3313,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 3368,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 3425,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 3645,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 3669,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 3752,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 3789,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 3813,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 3917,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 3997,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 4058,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 4095,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 4113,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 4168,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 4210,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 4382,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 4495,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 4510,
											"character": 23
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 5773,
											"character": 23
										}
									]
								},
								{
									"id": 61967,
									"name": "options",
									"kind": 2,
									"kindString": "Module",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 62029,
											"name": "IMapConfigOption",
											"kind": 256,
											"kindString": "Interface",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Represents the config option of the map."
											},
											"children": [
												{
													"id": 62031,
													"name": "center",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets the center."
													},
													"sources": [
														{
															"fileName": "source/map/modules/map.ts",
															"line": 5667,
															"character": 14
														}
													],
													"type": {
														"type": "reference",
														"name": "Point"
													}
												},
												{
													"id": 62030,
													"name": "geojson",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets the geo json."
													},
													"sources": [
														{
															"fileName": "source/map/modules/map.ts",
															"line": 5663,
															"character": 15
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 62036,
													"name": "hAlign",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets hAlign"
													},
													"sources": [
														{
															"fileName": "source/map/modules/map.ts",
															"line": 5688,
															"character": 14
														}
													],
													"type": {
														"type": "reference",
														"name": "HAlign",
														"id": 1760
													}
												},
												{
													"id": 62035,
													"name": "projection",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets the projection."
													},
													"sources": [
														{
															"fileName": "source/map/modules/map.ts",
															"line": 5684,
															"character": 18
														}
													],
													"type": {
														"type": "reference",
														"name": "ProjectionType",
														"id": 59701
													}
												},
												{
													"id": 62041,
													"name": "propertyName",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets the property name of the feature."
													},
													"sources": [
														{
															"fileName": "source/map/modules/map.ts",
															"line": 5710,
															"character": 20
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "null"
															}
														]
													}
												},
												{
													"id": 62038,
													"name": "style",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets style"
													},
													"sources": [
														{
															"fileName": "source/map/modules/map.ts",
															"line": 5696,
															"character": 13
														}
													],
													"type": {
														"type": "reference",
														"name": "IDataPointStyleOption",
														"id": 16897
													}
												},
												{
													"id": 62032,
													"name": "translate",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets the translate."
													},
													"sources": [
														{
															"fileName": "source/map/modules/map.ts",
															"line": 5671,
															"character": 17
														}
													],
													"type": {
														"type": "reference",
														"name": "Point"
													}
												},
												{
													"id": 62037,
													"name": "vAlign",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets vAlign"
													},
													"sources": [
														{
															"fileName": "source/map/modules/map.ts",
															"line": 5692,
															"character": 14
														}
													],
													"type": {
														"type": "reference",
														"name": "VAlign",
														"id": 1944
													}
												},
												{
													"id": 62034,
													"name": "zoom",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets the zoom."
													},
													"sources": [
														{
															"fileName": "source/map/modules/map.ts",
															"line": 5680,
															"character": 12
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 62044,
													"name": "isEmpty",
													"kind": 2048,
													"kindString": "Method",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 62045,
															"name": "isEmpty",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"comment": {
																"shortText": "Gets whether the option is empty."
															},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															},
															"inheritedFrom": {
																"type": "reference",
																"name": "IOption.isEmpty",
																"id": 17159
															}
														}
													],
													"sources": [
														{
															"fileName": "source/core/modules/core.ts",
															"line": 57423,
															"character": 15
														}
													],
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												},
												{
													"id": 62042,
													"name": "option",
													"kind": 2048,
													"kindString": "Method",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 62043,
															"name": "option",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"comment": {
																"shortText": "Gets the option setting."
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															},
															"inheritedFrom": {
																"type": "reference",
																"name": "IOption.option",
																"id": 17157
															}
														}
													],
													"sources": [
														{
															"fileName": "source/core/modules/core.ts",
															"line": 57419,
															"character": 14
														}
													],
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														62031,
														62030,
														62036,
														62035,
														62041,
														62038,
														62032,
														62037,
														62034
													]
												},
												{
													"title": "Methods",
													"kind": 2048,
													"children": [
														62044,
														62042
													]
												}
											],
											"sources": [
												{
													"fileName": "source/map/modules/map.ts",
													"line": 5659,
													"character": 37
												}
											],
											"extendedTypes": [
												{
													"type": "reference",
													"name": "IOption",
													"id": 17156
												}
											]
										}
									],
									"groups": [
										{
											"title": "Interfaces",
											"kind": 256,
											"children": [
												62029
											]
										}
									],
									"sources": [
										{
											"fileName": "source/map/modules/map.ts",
											"line": 5464,
											"character": 24
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 5653,
											"character": 24
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 5715,
											"character": 24
										}
									]
								},
								{
									"id": 62059,
									"name": "plugins",
									"kind": 2,
									"kindString": "Module",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "source/map/modules/map.ts",
											"line": 5747,
											"character": 24
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 5889,
											"character": 24
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 5913,
											"character": 24
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 5954,
											"character": 24
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 5999,
											"character": 24
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 6044,
											"character": 24
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 6072,
											"character": 24
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 6094,
											"character": 24
										},
										{
											"fileName": "source/map/modules/map.ts",
											"line": 7769,
											"character": 24
										}
									]
								},
								{
									"id": 59701,
									"name": "ProjectionType",
									"kind": 4,
									"kindString": "Enumeration",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the projection type"
									},
									"children": [
										{
											"id": 59703,
											"name": "Albers",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Albers."
											},
											"sources": [
												{
													"fileName": "source/map/modules/map.ts",
													"line": 88,
													"character": 14
												}
											]
										},
										{
											"id": 59704,
											"name": "AlbersUsa",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Albers USA."
											},
											"sources": [
												{
													"fileName": "source/map/modules/map.ts",
													"line": 92,
													"character": 17
												}
											]
										},
										{
											"id": 59702,
											"name": "Mercator",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Mercator."
											},
											"sources": [
												{
													"fileName": "source/map/modules/map.ts",
													"line": 84,
													"character": 16
												}
											]
										}
									],
									"groups": [
										{
											"title": "Enumeration members",
											"kind": 16,
											"children": [
												59703,
												59704,
												59702
											]
										}
									],
									"sources": [
										{
											"fileName": "source/map/modules/map.ts",
											"line": 80,
											"character": 30
										}
									]
								}
							],
							"groups": [
								{
									"title": "Modules",
									"kind": 2,
									"children": [
										59705,
										61967,
										62059
									]
								},
								{
									"title": "Enumerations",
									"kind": 4,
									"children": [
										59701
									]
								}
							],
							"sources": [
								{
									"fileName": "source/map/modules/map.ts",
									"line": 8,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 26,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 74,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 97,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 164,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 203,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 235,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 290,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 437,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 484,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 539,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 572,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 615,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 670,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 703,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 746,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 904,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 937,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 1047,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 1173,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 1214,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 1229,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 1243,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 1256,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 1294,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 1325,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 1352,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 1458,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 1505,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 1563,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 1630,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 1694,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 1884,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 1954,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 2006,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 2062,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 2103,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 2182,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 2326,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 2380,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 2434,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 2511,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 2534,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 2577,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 2627,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 2672,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 2838,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 2894,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 2949,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 2969,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 3013,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 3067,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 3146,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 3313,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 3368,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 3425,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 3645,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 3669,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 3730,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 3752,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 3789,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 3813,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 3917,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 3997,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 4058,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 4095,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 4113,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 4168,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 4210,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 4382,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 4495,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 4510,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 4719,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 4825,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 4996,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 5128,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 5171,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 5314,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 5421,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 5438,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 5464,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 5653,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 5715,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 5747,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 5773,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 5889,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 5913,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 5954,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 5999,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 6044,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 6072,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 6094,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 6208,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 6307,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 6506,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 6634,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 6677,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 6702,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 6822,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 6935,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 7005,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 7181,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 7256,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 7467,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 7565,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 7626,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 7731,
									"character": 16
								},
								{
									"fileName": "source/map/modules/map.ts",
									"line": 7769,
									"character": 16
								}
							]
						}
					],
					"groups": [
						{
							"title": "Modules",
							"kind": 2,
							"children": [
								59688
							]
						}
					],
					"sources": [
						{
							"fileName": "source/map/modules/map.ts",
							"line": 8,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 26,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 74,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 97,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 164,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 203,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 235,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 290,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 437,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 484,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 539,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 572,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 615,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 670,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 703,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 746,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 904,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 937,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 1047,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 1173,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 1214,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 1229,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 1243,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 1256,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 1294,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 1325,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 1352,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 1458,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 1505,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 1563,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 1630,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 1694,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 1884,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 1954,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 2006,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 2062,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 2103,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 2182,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 2326,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 2380,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 2434,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 2511,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 2534,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 2577,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 2627,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 2672,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 2838,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 2894,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 2949,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 2969,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 3013,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 3067,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 3146,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 3313,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 3368,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 3425,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 3645,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 3669,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 3730,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 3752,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 3789,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 3813,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 3917,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 3997,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 4058,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 4095,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 4113,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 4168,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 4210,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 4382,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 4495,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 4510,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 4719,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 4825,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 4996,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 5128,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 5171,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 5314,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 5421,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 5438,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 5464,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 5653,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 5715,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 5747,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 5773,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 5889,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 5913,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 5954,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 5999,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 6044,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 6072,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 6094,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 6208,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 6307,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 6506,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 6634,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 6677,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 6702,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 6822,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 6935,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 7005,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 7181,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 7256,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 7467,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 7565,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 7626,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 7731,
							"character": 12
						},
						{
							"fileName": "source/map/modules/map.ts",
							"line": 7769,
							"character": 12
						}
					]
				}
			],
			"groups": [
				{
					"title": "Modules",
					"kind": 2,
					"children": [
						59687
					]
				}
			],
			"sources": [
				{
					"fileName": "source/map/modules/map.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 72963,
			"name": "plugins",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/BitBucket/kk-sites/source/plugins/modules/plugins.ts",
			"comment": {},
			"children": [
				{
					"id": 72964,
					"name": "dv",
					"kind": 2,
					"kindString": "Module",
					"flags": {},
					"children": [
						{
							"id": 72966,
							"name": "models",
							"kind": 2,
							"kindString": "Module",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "source/plugins/modules/plugins.ts",
									"line": 12,
									"character": 19
								},
								{
									"fileName": "source/plugins/modules/plugins.ts",
									"line": 139,
									"character": 19
								}
							]
						},
						{
							"id": 72965,
							"name": "plugins",
							"kind": 2,
							"kindString": "Module",
							"flags": {
								"isExported": true
							},
							"comment": {},
							"sources": [
								{
									"fileName": "source/plugins/modules/plugins.ts",
									"line": 8,
									"character": 20
								},
								{
									"fileName": "source/plugins/modules/plugins.ts",
									"line": 121,
									"character": 20
								},
								{
									"fileName": "source/plugins/modules/plugins.ts",
									"line": 469,
									"character": 20
								}
							]
						}
					],
					"groups": [
						{
							"title": "Modules",
							"kind": 2,
							"children": [
								72966,
								72965
							]
						}
					],
					"sources": [
						{
							"fileName": "source/plugins/modules/plugins.ts",
							"line": 8,
							"character": 12
						},
						{
							"fileName": "source/plugins/modules/plugins.ts",
							"line": 12,
							"character": 12
						},
						{
							"fileName": "source/plugins/modules/plugins.ts",
							"line": 121,
							"character": 12
						},
						{
							"fileName": "source/plugins/modules/plugins.ts",
							"line": 139,
							"character": 12
						},
						{
							"fileName": "source/plugins/modules/plugins.ts",
							"line": 469,
							"character": 12
						}
					]
				}
			],
			"groups": [
				{
					"title": "Modules",
					"kind": 2,
					"children": [
						72964
					]
				}
			],
			"sources": [
				{
					"fileName": "source/plugins/modules/plugins.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 64013,
			"name": "trellis",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "D:/BitBucket/kk-sites/source/trellis/modules/trellis.ts",
			"comment": {},
			"children": [
				{
					"id": 64014,
					"name": "dv",
					"kind": 2,
					"kindString": "Module",
					"flags": {},
					"comment": {},
					"children": [
						{
							"id": 64028,
							"name": "models",
							"kind": 2,
							"kindString": "Module",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 64993,
									"name": "ITrellisCellModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a trellis cell model."
									},
									"children": [
										{
											"id": 64995,
											"name": "columnIndex",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the column index."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2290,
													"character": 28
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 64997,
											"name": "items",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the data items."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2298,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										},
										{
											"id": 64999,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46273,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IViewModel",
												"id": 13918
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.parent",
												"id": 13920
											}
										},
										{
											"id": 64996,
											"name": "plots",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the plots."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2294,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IPlotModel",
													"id": 13865
												}
											}
										},
										{
											"id": 64994,
											"name": "rowIndex",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the row index."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2286,
													"character": 25
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 64998,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46269,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1686
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.type",
												"id": 13919
											}
										},
										{
											"id": 65000,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 65001,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 65002,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												64995,
												64997,
												64999,
												64996,
												64994,
												64998
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												65000
											]
										}
									],
									"sources": [
										{
											"fileName": "source/trellis/modules/trellis.ts",
											"line": 2282,
											"character": 38
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IViewModel",
											"id": 13918
										}
									]
								},
								{
									"id": 65003,
									"name": "ITrellisColumnHeaderModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a trellis column header model."
									},
									"children": [
										{
											"id": 65004,
											"name": "columnHeaders",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the data items."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2313,
													"character": 30
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "ITrellisColumnHeaderModel",
													"id": 65003
												}
											}
										},
										{
											"id": 65005,
											"name": "columnIndex",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the column index."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2317,
													"character": 28
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 65006,
											"name": "columnSpan",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the column span."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2321,
													"character": 27
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 65010,
											"name": "hover",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the mouse pointer is on it."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2337,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 65014,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46273,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IViewModel",
												"id": 13918
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.parent",
												"id": 13920
											}
										},
										{
											"id": 65009,
											"name": "selected",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether it is selected."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2333,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 65007,
											"name": "text",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the text."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2325,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 65008,
											"name": "textStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text style."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2329,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 17399
											}
										},
										{
											"id": 65013,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46269,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1686
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.type",
												"id": 13919
											}
										},
										{
											"id": 65015,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 65016,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 65017,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										},
										{
											"id": 65011,
											"name": "relatedPlots",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 65012,
													"name": "relatedPlots",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the related plots."
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "IPlotModel",
															"id": 13865
														}
													}
												}
											],
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2342,
													"character": 20
												}
											]
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												65004,
												65005,
												65006,
												65010,
												65014,
												65009,
												65007,
												65008,
												65013
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												65015,
												65011
											]
										}
									],
									"sources": [
										{
											"fileName": "source/trellis/modules/trellis.ts",
											"line": 2309,
											"character": 46
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IViewModel",
											"id": 13918
										}
									]
								},
								{
									"id": 65018,
									"name": "ITrellisColumnModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a trellis column model."
									},
									"children": [
										{
											"id": 65021,
											"name": "cells",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the text."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2367,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "ITrellisCellModel",
													"id": 64993
												}
											}
										},
										{
											"id": 65020,
											"name": "columnHeader",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the column span."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2362,
													"character": 29
												}
											],
											"type": {
												"type": "reference",
												"name": "ITrellisColumnHeaderModel",
												"id": 65003
											}
										},
										{
											"id": 65019,
											"name": "columnIndex",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the column index."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2357,
													"character": 28
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 65022,
											"name": "items",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the data items."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2372,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										},
										{
											"id": 65024,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46273,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IViewModel",
												"id": 13918
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.parent",
												"id": 13920
											}
										},
										{
											"id": 65023,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46269,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1686
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.type",
												"id": 13919
											}
										},
										{
											"id": 65025,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 65026,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 65027,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												65021,
												65020,
												65019,
												65022,
												65024,
												65023
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												65025
											]
										}
									],
									"sources": [
										{
											"fileName": "source/trellis/modules/trellis.ts",
											"line": 2352,
											"character": 40
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IViewModel",
											"id": 13918
										}
									]
								},
								{
									"id": 65028,
									"name": "ITrellisModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the trellis model."
									},
									"children": [
										{
											"id": 65033,
											"name": "cells",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the trellis cells."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2403,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"name": "ITrellisCellModel",
														"id": 64993
													}
												}
											}
										},
										{
											"id": 65029,
											"name": "columnHeaders",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the trellis column headers."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2387,
													"character": 30
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"name": "ITrellisColumnHeaderModel",
														"id": 65003
													}
												}
											}
										},
										{
											"id": 65031,
											"name": "columns",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the trellis columns."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2395,
													"character": 24
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "ITrellisColumnModel",
													"id": 65018
												}
											}
										},
										{
											"id": 65034,
											"name": "corner",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the trellis corner."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2407,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IModel",
												"id": 7919
											}
										},
										{
											"id": 65036,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46273,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IViewModel",
												"id": 13918
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.parent",
												"id": 13920
											}
										},
										{
											"id": 65030,
											"name": "rowHeaders",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the trellis row headers."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2391,
													"character": 27
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"name": "ITrellisRowHeaderModel",
														"id": 65040
													}
												}
											}
										},
										{
											"id": 65032,
											"name": "rows",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the trellis rows."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2399,
													"character": 21
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "ITrellisRowModel",
													"id": 65055
												}
											}
										},
										{
											"id": 65035,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46269,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1686
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.type",
												"id": 13919
											}
										},
										{
											"id": 65037,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 65038,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 65039,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												65033,
												65029,
												65031,
												65034,
												65036,
												65030,
												65032,
												65035
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												65037
											]
										}
									],
									"sources": [
										{
											"fileName": "source/trellis/modules/trellis.ts",
											"line": 2383,
											"character": 34
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IViewModel",
											"id": 13918
										}
									]
								},
								{
									"id": 65040,
									"name": "ITrellisRowHeaderModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the trellis row header model."
									},
									"children": [
										{
											"id": 65047,
											"name": "hover",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the mouse pointer is on it."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2446,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 65051,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46273,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IViewModel",
												"id": 13918
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.parent",
												"id": 13920
											}
										},
										{
											"id": 65041,
											"name": "rowHeaders",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the data items."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2422,
													"character": 27
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "ITrellisRowHeaderModel",
													"id": 65040
												}
											}
										},
										{
											"id": 65042,
											"name": "rowIndex",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the row index."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2426,
													"character": 25
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 65043,
											"name": "rowSpan",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the row span."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2430,
													"character": 24
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 65046,
											"name": "selected",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether it is selected."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2442,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 65044,
											"name": "text",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the row header text."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2434,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 65045,
											"name": "textStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text style."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2438,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 17399
											}
										},
										{
											"id": 65050,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46269,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1686
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.type",
												"id": 13919
											}
										},
										{
											"id": 65052,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 65053,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 65054,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										},
										{
											"id": 65048,
											"name": "relatedPlots",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 65049,
													"name": "relatedPlots",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the related plots."
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "IPlotModel",
															"id": 13865
														}
													}
												}
											],
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2451,
													"character": 20
												}
											]
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												65047,
												65051,
												65041,
												65042,
												65043,
												65046,
												65044,
												65045,
												65050
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												65052,
												65048
											]
										}
									],
									"sources": [
										{
											"fileName": "source/trellis/modules/trellis.ts",
											"line": 2418,
											"character": 43
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IViewModel",
											"id": 13918
										}
									]
								},
								{
									"id": 65055,
									"name": "ITrellisRowModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the trellis row header model."
									},
									"children": [
										{
											"id": 65058,
											"name": "cells",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the text."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2474,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "ITrellisCellModel",
													"id": 64993
												}
											}
										},
										{
											"id": 65059,
											"name": "items",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the data items."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2478,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										},
										{
											"id": 65061,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46273,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IViewModel",
												"id": 13918
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.parent",
												"id": 13920
											}
										},
										{
											"id": 65057,
											"name": "rowHeader",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the row header."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2470,
													"character": 26
												}
											],
											"type": {
												"type": "reference",
												"name": "ITrellisRowHeaderModel",
												"id": 65040
											}
										},
										{
											"id": 65056,
											"name": "rowIndex",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the row index."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2466,
													"character": 25
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 65060,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 46269,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1686
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IViewModel.type",
												"id": 13919
											}
										},
										{
											"id": 65062,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 65063,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 65064,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface",
														"id": 1048
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface",
														"id": 1049
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 5590,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface",
												"id": 1049
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												65058,
												65059,
												65061,
												65057,
												65056,
												65060
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												65062
											]
										}
									],
									"sources": [
										{
											"fileName": "source/trellis/modules/trellis.ts",
											"line": 2462,
											"character": 37
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IViewModel",
											"id": 13918
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"kind": 256,
									"children": [
										64993,
										65003,
										65018,
										65028,
										65040,
										65055
									]
								}
							],
							"sources": [
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 80,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 321,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 369,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 421,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 442,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 548,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 607,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 644,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 703,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 740,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 878,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 928,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 987,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 1024,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 1075,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 1118,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 1170,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 1213,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 1272,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 1309,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 1358,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 1395,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 1447,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 1484,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 1522,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 1559,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 1598,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 1630,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 1669,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 1701,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 1740,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 1772,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 1811,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 1843,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 1874,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 1918,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 2001,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 2097,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 2180,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 2276,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 2303,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 2346,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 2377,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 2412,
									"character": 19
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 2456,
									"character": 19
								}
							]
						},
						{
							"id": 65065,
							"name": "options",
							"kind": 2,
							"kindString": "Module",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 65136,
									"name": "IPlotConfigTrellisOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the config option for trellis."
									},
									"children": [
										{
											"id": 65139,
											"name": "hoverStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the hover text style."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2670,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 17399
											}
										},
										{
											"id": 65141,
											"name": "includeAxesInCells",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether has independent axis in every trellis cell."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2678,
													"character": 26
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 65142,
											"name": "includeEmptyCells",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the empty cell is shown when the data is null."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2682,
													"character": 25
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 65140,
											"name": "padding",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the trellis cell padding."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2674,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "IPaddingOption",
												"id": 17169
											}
										},
										{
											"id": 65137,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the trellis divider lines style."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2662,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "ILineStyleOption",
												"id": 17121
											}
										},
										{
											"id": 65138,
											"name": "textStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets text style."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2666,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 17399
											}
										},
										{
											"id": 65145,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 65146,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 65143,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 65144,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												65139,
												65141,
												65142,
												65140,
												65137,
												65138
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												65145,
												65143
											]
										}
									],
									"sources": [
										{
											"fileName": "source/trellis/modules/trellis.ts",
											"line": 2658,
											"character": 45
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 17156
										}
									]
								},
								{
									"id": 65147,
									"name": "ITrellisLayoutEncodingOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the trellis layout encoding option."
									},
									"children": [
										{
											"id": 65149,
											"name": "columnSort",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the columns sort option."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2701,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "ISortEncodingOption",
												"id": 16283
											}
										},
										{
											"id": 65151,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field name."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56771,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IEncodingOption.field",
												"id": 16930
											}
										},
										{
											"id": 65152,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field label."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 56775,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IEncodingOption.label",
												"id": 16931
											}
										},
										{
											"id": 65148,
											"name": "rowSort",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the rows sort option."
											},
											"sources": [
												{
													"fileName": "source/trellis/modules/trellis.ts",
													"line": 2696,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "ISortEncodingOption",
												"id": 16283
											}
										},
										{
											"id": 65150,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the type."
											},
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 53764,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ILayoutEncodingOption.type",
												"id": 16258
											}
										},
										{
											"id": 65155,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 65156,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 17159
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57423,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 17159
											}
										},
										{
											"id": 65153,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 65154,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 17157
													}
												}
											],
											"sources": [
												{
													"fileName": "source/core/modules/core.ts",
													"line": 57419,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 17157
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												65149,
												65151,
												65152,
												65148,
												65150
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												65155,
												65153
											]
										}
									],
									"sources": [
										{
											"fileName": "source/trellis/modules/trellis.ts",
											"line": 2692,
											"character": 49
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "ILayoutEncodingOption",
											"id": 16257
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"kind": 256,
									"children": [
										65136,
										65147
									]
								}
							],
							"sources": [
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 2483,
									"character": 20
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 2583,
									"character": 20
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 2652,
									"character": 20
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 2686,
									"character": 20
								}
							]
						},
						{
							"id": 65157,
							"name": "plugins",
							"kind": 2,
							"kindString": "Module",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 2706,
									"character": 20
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 2730,
									"character": 20
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 2754,
									"character": 20
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 2778,
									"character": 20
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 2802,
									"character": 20
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 2822,
									"character": 20
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 2842,
									"character": 20
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 2862,
									"character": 20
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 2882,
									"character": 20
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 2933,
									"character": 20
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 2981,
									"character": 20
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 3022,
									"character": 20
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 3063,
									"character": 20
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 3104,
									"character": 20
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 3144,
									"character": 20
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 3184,
									"character": 20
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 3225,
									"character": 20
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 3266,
									"character": 20
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 3307,
									"character": 20
								},
								{
									"fileName": "source/trellis/modules/trellis.ts",
									"line": 9363,
									"character": 20
								}
							]
						}
					],
					"groups": [
						{
							"title": "Modules",
							"kind": 2,
							"children": [
								64028,
								65065,
								65157
							]
						}
					],
					"sources": [
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 8,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 80,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 321,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 369,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 421,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 442,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 548,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 607,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 644,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 703,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 740,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 878,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 928,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 987,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 1024,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 1075,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 1118,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 1170,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 1213,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 1272,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 1309,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 1358,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 1395,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 1447,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 1484,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 1522,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 1559,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 1598,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 1630,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 1669,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 1701,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 1740,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 1772,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 1811,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 1843,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 1874,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 1918,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 2001,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 2097,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 2180,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 2276,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 2303,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 2346,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 2377,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 2412,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 2456,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 2483,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 2583,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 2652,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 2686,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 2706,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 2730,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 2754,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 2778,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 2802,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 2822,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 2842,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 2862,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 2882,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 2933,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 2981,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 3022,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 3063,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 3104,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 3144,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 3184,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 3225,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 3266,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 3307,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 3348,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 3642,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 3885,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 4142,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 4730,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 4991,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 5097,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 5354,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 5930,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 6185,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 6999,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 7032,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 7064,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 7094,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 7201,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 7312,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 7351,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 7491,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 7602,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 7635,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 7727,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 7776,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 7825,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 7874,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 7986,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 8022,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 8041,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 8071,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 8100,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 8143,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 8173,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 8202,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 8227,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 8256,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 8289,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 8319,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 8440,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 8466,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 8496,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 8720,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 8753,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 8780,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 8812,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 8845,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 8875,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 8996,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 9023,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 9053,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 9158,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 9195,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 9249,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 9275,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 9301,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 9332,
							"character": 12
						},
						{
							"fileName": "source/trellis/modules/trellis.ts",
							"line": 9363,
							"character": 12
						}
					]
				}
			],
			"groups": [
				{
					"title": "Modules",
					"kind": 2,
					"children": [
						64014
					]
				}
			],
			"sources": [
				{
					"fileName": "source/trellis/modules/trellis.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "External modules",
			"kind": 1,
			"children": [
				1,
				56019,
				59686,
				72963,
				64013
			]
		}
	]
}