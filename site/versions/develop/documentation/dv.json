{
	"id": 0,
	"name": "dv",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "core",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/kennethliu/Projects/dv-chart/source/core/modules/core.ts",
			"comment": {},
			"children": [
				{
					"id": 6,
					"name": "dv",
					"kind": 2,
					"kindString": "Module",
					"flags": {},
					"comment": {},
					"children": [
						{
							"id": 39,
							"name": "core",
							"kind": 2,
							"kindString": "Module",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 40,
									"name": "collections",
									"kind": 2,
									"kindString": "Module",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 188,
											"character": 29
										},
										{
											"fileName": "core/modules/core.ts",
											"line": 1839,
											"character": 29
										}
									]
								}
							],
							"groups": [
								{
									"title": "Modules",
									"kind": 2,
									"children": [
										40
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 188,
									"character": 17
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 1839,
									"character": 17
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 2162,
									"character": 17
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 2342,
									"character": 17
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 2575,
									"character": 17
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 2824,
									"character": 17
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 2864,
									"character": 17
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 2912,
									"character": 17
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 2934,
									"character": 17
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 2984,
									"character": 17
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 3827,
									"character": 17
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 4159,
									"character": 17
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 4560,
									"character": 17
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 4565,
									"character": 17
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 6668,
									"character": 17
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 8449,
									"character": 17
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 8519,
									"character": 17
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 8694,
									"character": 17
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 8889,
									"character": 17
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 9007,
									"character": 17
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 9080,
									"character": 17
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 9234,
									"character": 17
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 9650,
									"character": 17
								}
							]
						},
						{
							"id": 2094,
							"name": "models",
							"kind": 2,
							"kindString": "Module",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 3431,
									"name": "ColorType",
									"kind": 4,
									"kindString": "Enumeration",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the color type."
									},
									"children": [
										{
											"id": 3432,
											"name": "CssColor",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Css color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 17043,
													"character": 16
												}
											],
											"defaultValue": "0"
										},
										{
											"id": 3433,
											"name": "LinearGradient",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Linear Gradient."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 17047,
													"character": 22
												}
											],
											"defaultValue": "1"
										},
										{
											"id": 3434,
											"name": "RadialGradient",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Radial Gradient."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 17051,
													"character": 22
												}
											],
											"defaultValue": "2"
										}
									],
									"groups": [
										{
											"title": "Enumeration members",
											"kind": 16,
											"children": [
												3432,
												3433,
												3434
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 17039,
											"character": 25
										}
									]
								},
								{
									"id": 6343,
									"name": "ExcludingModelPrediction",
									"kind": 128,
									"kindString": "Class",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the exclude model prediction."
									},
									"children": [
										{
											"id": 6345,
											"name": "constructor",
											"kind": 512,
											"kindString": "Constructor",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Initializes a new instance of the [ExcludingModelPrediction]{@link dv.models.ExcludingModelPrediction} class."
											},
											"signatures": [
												{
													"id": 6346,
													"name": "new ExcludingModelPrediction",
													"kind": 16384,
													"kindString": "Constructor signature",
													"flags": {},
													"comment": {
														"shortText": "Initializes a new instance of the [ExcludingModelPrediction]{@link dv.models.ExcludingModelPrediction} class."
													},
													"parameters": [
														{
															"id": 6347,
															"name": "modelTypes",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"shortText": "The model types.\n"
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "ExcludingModelPrediction",
														"id": 6343
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 25460,
													"character": 39
												}
											]
										},
										{
											"id": 6344,
											"name": "modelTypes",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true,
												"isProtected": true
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 25460,
													"character": 28
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 6348,
											"name": "predicate",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true,
												"isPublic": true
											},
											"signatures": [
												{
													"id": 6349,
													"name": "predicate",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Excluding hittest result with model type."
													},
													"parameters": [
														{
															"id": 6350,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "HitTestResult",
																"id": 1920
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 25474,
													"character": 24
												}
											],
											"implementationOf": {
												"type": "reference",
												"name": "IPrediction.predicate",
												"id": 6361
											}
										}
									],
									"groups": [
										{
											"title": "Constructors",
											"kind": 512,
											"children": [
												6345
											]
										},
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												6344
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												6348
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 25459,
											"character": 41
										}
									],
									"implementedTypes": [
										{
											"type": "reference",
											"name": "IPrediction",
											"id": 6359,
											"typeArguments": [
												{
													"type": "reference",
													"name": "HitTestResult",
													"id": 1920
												}
											]
										}
									]
								},
								{
									"id": 6351,
									"name": "IncludingModelPrediction",
									"kind": 128,
									"kindString": "Class",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the include model prediction."
									},
									"children": [
										{
											"id": 6353,
											"name": "constructor",
											"kind": 512,
											"kindString": "Constructor",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Initializes a new instance of the [IncludingModelPrediction]{@link dv.models.IncludingModelPrediction} class."
											},
											"signatures": [
												{
													"id": 6354,
													"name": "new IncludingModelPrediction",
													"kind": 16384,
													"kindString": "Constructor signature",
													"flags": {},
													"comment": {
														"shortText": "Initializes a new instance of the [IncludingModelPrediction]{@link dv.models.IncludingModelPrediction} class."
													},
													"parameters": [
														{
															"id": 6355,
															"name": "modelTypes",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"shortText": "The model types.\n"
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IncludingModelPrediction",
														"id": 6351
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 25491,
													"character": 38
												}
											]
										},
										{
											"id": 6352,
											"name": "modelTypes",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true,
												"isProtected": true
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 25491,
													"character": 28
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 6356,
											"name": "predicate",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 6357,
													"name": "predicate",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Including hittest result with model type."
													},
													"parameters": [
														{
															"id": 6358,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "HitTestResult",
																"id": 1920
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 25505,
													"character": 17
												}
											],
											"implementationOf": {
												"type": "reference",
												"name": "IPrediction.predicate",
												"id": 6361
											}
										}
									],
									"groups": [
										{
											"title": "Constructors",
											"kind": 512,
											"children": [
												6353
											]
										},
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												6352
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												6356
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 25490,
											"character": 41
										}
									],
									"implementedTypes": [
										{
											"type": "reference",
											"name": "IPrediction",
											"id": 6359,
											"typeArguments": [
												{
													"type": "reference",
													"name": "HitTestResult",
													"id": 1920
												}
											]
										}
									]
								},
								{
									"id": 10047,
									"name": "IAdornerRender",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a adorner render."
									},
									"children": [
										{
											"id": 10048,
											"name": "render",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 10049,
													"name": "render",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Draws the adorner."
													},
													"parameters": [
														{
															"id": 10050,
															"name": "render",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The render."
															},
															"type": {
																"type": "reference",
																"name": "IRender",
																"id": 22404
															}
														},
														{
															"id": 10051,
															"name": "points",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The location of adorners.\n"
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"name": "Point"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 35803,
													"character": 14
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												10048
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 35796,
											"character": 35
										}
									]
								},
								{
									"id": 8152,
									"name": "IAxisLabel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the axis labels interface."
									},
									"children": [
										{
											"id": 8153,
											"name": "labels",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 8154,
													"name": "labels",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the labels.",
														"returns": "The labels.\n"
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "IAxisLabelModel",
															"id": 10950
														}
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 30908,
													"character": 14
												}
											]
										},
										{
											"id": 8155,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 8156,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 8157,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5558,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface"
											}
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												8153,
												8155
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 30903,
											"character": 31
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IQueryInterface"
										}
									]
								},
								{
									"id": 10950,
									"name": "IAxisLabelModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents an axis label."
									},
									"children": [
										{
											"id": 10951,
											"name": "hover",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the mouse pointer is on it."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39564,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 10955,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39763,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IModel",
												"id": 11033
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.parent",
												"id": 11035
											}
										},
										{
											"id": 10954,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39759,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1638
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.type",
												"id": 11034
											}
										},
										{
											"id": 10956,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 10957,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 10958,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5558,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface"
											}
										},
										{
											"id": 10952,
											"name": "relatedModels",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 10953,
													"name": "relatedModels",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the related models."
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "IModel",
															"id": 11033
														}
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39568,
													"character": 21
												}
											]
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												10951,
												10955,
												10954
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												10956,
												10952
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 39560,
											"character": 36
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IModel",
											"id": 11033
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "ICategoryAxisLabelModel",
											"id": 10978
										}
									]
								},
								{
									"id": 10959,
									"name": "IAxisModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents an axis."
									},
									"children": [
										{
											"id": 10965,
											"name": "axisType",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the axis type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39603,
													"character": 25
												}
											],
											"type": {
												"type": "reference",
												"name": "AxisType",
												"id": 1610
											}
										},
										{
											"id": 10962,
											"name": "majorUnit",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the major unit."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39591,
													"character": 26
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 10960,
											"name": "max",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the maximum value."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39583,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 10961,
											"name": "min",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the minimum value."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39587,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 10963,
											"name": "minorUnit",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the minor unit."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39595,
													"character": 26
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 10967,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39763,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IModel",
												"id": 11033
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.parent",
												"id": 11035
											}
										},
										{
											"id": 10964,
											"name": "position",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the axis position."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39599,
													"character": 25
												}
											],
											"type": {
												"type": "reference",
												"name": "AxisPosition",
												"id": 1606
											}
										},
										{
											"id": 10966,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39759,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1638
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.type",
												"id": 11034
											}
										},
										{
											"id": 10968,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 10969,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 10970,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5558,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												10965,
												10962,
												10960,
												10961,
												10963,
												10967,
												10964,
												10966
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												10968
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 39579,
											"character": 31
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IModel",
											"id": 11033
										}
									]
								},
								{
									"id": 8158,
									"name": "IAxisTitle",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the axis title interface."
									},
									"children": [
										{
											"id": 8161,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 8162,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 8163,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5558,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface"
											}
										},
										{
											"id": 8159,
											"name": "title",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 8160,
													"name": "title",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the title.",
														"returns": "The title.\n"
													},
													"type": {
														"type": "reference",
														"name": "IAxisTitleModel",
														"id": 10971
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 30923,
													"character": 13
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												8161,
												8159
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 30918,
											"character": 31
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IQueryInterface"
										}
									]
								},
								{
									"id": 10971,
									"name": "IAxisTitleModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents an axis title."
									},
									"children": [
										{
											"id": 10972,
											"name": "hover",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the mouse pointer is on it."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39617,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 10974,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39763,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IModel",
												"id": 11033
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.parent",
												"id": 11035
											}
										},
										{
											"id": 10973,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39759,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1638
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.type",
												"id": 11034
											}
										},
										{
											"id": 10975,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 10976,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 10977,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5558,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												10972,
												10974,
												10973
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												10975
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 39613,
											"character": 36
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IModel",
											"id": 11033
										}
									]
								},
								{
									"id": 2264,
									"name": "ICanvasMeasurer",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the canvas measurer interface."
									},
									"children": [
										{
											"id": 2265,
											"name": "begin",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2266,
													"name": "begin",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Begin the measure and init the canvas element."
													},
													"parameters": [
														{
															"id": 2267,
															"name": "context",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "CanvasRenderingContext2D"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 11791,
													"character": 13
												}
											]
										},
										{
											"id": 2268,
											"name": "end",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2269,
													"name": "end",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "End the measure."
													},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 11796,
													"character": 11
												}
											]
										},
										{
											"id": 2270,
											"name": "measureString",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2271,
													"name": "measureString",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Measure string."
													},
													"parameters": [
														{
															"id": 2272,
															"name": "s",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The measure string."
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2273,
															"name": "fontSize",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2274,
															"name": "fontFamily",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2275,
															"name": "fontWeight",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2276,
															"name": "fontStyle",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "Size"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IMeasurer.measureString",
														"id": 2278
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 11816,
													"character": 21
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IMeasurer.measureString",
												"id": 2278
											}
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												2265,
												2268,
												2270
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 11785,
											"character": 36
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IMeasurer",
											"id": 2277
										}
									]
								},
								{
									"id": 8347,
									"name": "ICartesianPlotModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the cartesian plot model."
									},
									"children": [
										{
											"id": 8351,
											"name": "items",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the data items."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33940,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataModel.items",
												"id": 9270
											}
										},
										{
											"id": 8350,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the name."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33959,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPlotModel.name",
												"id": 9278
											}
										},
										{
											"id": 8353,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39763,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IModel",
												"id": 11033
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.parent",
												"id": 11035
											}
										},
										{
											"id": 8349,
											"name": "points",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the points."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33955,
													"character": 23
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IPointModel",
													"id": 9285
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPlotModel.points",
												"id": 9277
											}
										},
										{
											"id": 8348,
											"name": "seriesList",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the cartesian series list."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 31529,
													"character": 27
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "ICartesianSeriesModel",
													"id": 8383
												}
											}
										},
										{
											"id": 8352,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39759,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1638
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.type",
												"id": 11034
											}
										},
										{
											"id": 8354,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 8355,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 8356,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5558,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												8351,
												8350,
												8353,
												8349,
												8348,
												8352
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												8354
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 31525,
											"character": 40
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IPlotModel",
											"id": 9276
										}
									]
								},
								{
									"id": 8357,
									"name": "ICartesianPointModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the data point model in the x-y coordinate system."
									},
									"children": [
										{
											"id": 8373,
											"name": "additionalKind",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the additional kind."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 34002,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.additionalKind",
												"id": 9296
											}
										},
										{
											"id": 8370,
											"name": "color",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33990,
													"character": 13
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ILinearGradientColor",
														"id": 3445
													},
													{
														"type": "reference",
														"name": "IRadialGradientColor",
														"id": 3450
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.color",
												"id": 9293
											}
										},
										{
											"id": 8359,
											"name": "detail",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the detail."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 31548,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "DataValueType",
												"id": 23211
											}
										},
										{
											"id": 8360,
											"name": "dimension",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the dimension value."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 31552,
													"character": 26
												}
											],
											"type": {
												"type": "reference",
												"name": "DataValueType",
												"id": 23211
											}
										},
										{
											"id": 8375,
											"name": "filtered",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether it is filtered out."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 34010,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.filtered",
												"id": 9298
											}
										},
										{
											"id": 8376,
											"name": "hover",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the mouse pointer is on it."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 34014,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.hover",
												"id": 9299
											}
										},
										{
											"id": 8363,
											"name": "item",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the item."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33974,
													"character": 21
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 8364,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 8365,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 8366,
																"name": "key",
																"kind": 32768,
																"kindString": "Parameter",
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "reference",
															"name": "DataValueType",
															"id": 23211
														}
													},
													"sources": [
														{
															"fileName": "core/modules/core.ts",
															"line": 33974,
															"character": 22
														}
													]
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.item",
												"id": 9286
											}
										},
										{
											"id": 8377,
											"name": "items",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the data items."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33940,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataModel.items",
												"id": 9270
											}
										},
										{
											"id": 8362,
											"name": "offset",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the offset of the data point."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 31560,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 8379,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39763,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IModel",
												"id": 11033
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.parent",
												"id": 11035
											}
										},
										{
											"id": 8374,
											"name": "selected",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether it is selected."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 34006,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.selected",
												"id": 9297
											}
										},
										{
											"id": 8371,
											"name": "shape",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the shape."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33994,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.shape",
												"id": 9294
											}
										},
										{
											"id": 8372,
											"name": "size",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the size."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33998,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.size",
												"id": 9295
											}
										},
										{
											"id": 8367,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33978,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 13527
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.style",
												"id": 9290
											}
										},
										{
											"id": 8368,
											"name": "text",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the text config."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33982,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "IPlotConfigTextOption",
												"id": 13825
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.text",
												"id": 9291
											}
										},
										{
											"id": 8369,
											"name": "tooltip",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the tooltip config."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33986,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"name": "IPlotConfigTooltipOption",
												"id": 13843
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.tooltip",
												"id": 9292
											}
										},
										{
											"id": 8378,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39759,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1638
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.type",
												"id": 11034
											}
										},
										{
											"id": 8361,
											"name": "value",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the value of the data point."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 31556,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 8358,
											"name": "valueDefinition",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the value definition."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 31544,
													"character": 32
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 8380,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 8381,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 8382,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5558,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												8373,
												8370,
												8359,
												8360,
												8375,
												8376,
												8363,
												8377,
												8362,
												8379,
												8374,
												8371,
												8372,
												8367,
												8368,
												8369,
												8378,
												8361,
												8358
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												8380
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 31540,
											"character": 41
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IPointModel",
											"id": 9285
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "IStockPointModel",
											"id": 48456
										}
									]
								},
								{
									"id": 8383,
									"name": "ICartesianSeriesModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the cartesian series model."
									},
									"children": [
										{
											"id": 8384,
											"name": "axisX",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the axis x."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 31575,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "IAxisModel",
												"id": 10959
											}
										},
										{
											"id": 8385,
											"name": "axisY",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the axis y."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 31579,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "IAxisModel",
												"id": 10959
											}
										},
										{
											"id": 8390,
											"name": "color",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 34037,
													"character": 13
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ILinearGradientColor",
														"id": 3445
													},
													{
														"type": "reference",
														"name": "IRadialGradientColor",
														"id": 3450
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ISeriesModel.color",
												"id": 9309
											}
										},
										{
											"id": 8387,
											"name": "detail",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the detail."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 31587,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "DataValueType",
												"id": 23211
											}
										},
										{
											"id": 8392,
											"name": "filtered",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether it is filtered out."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 34045,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ISeriesModel.filtered",
												"id": 9311
											}
										},
										{
											"id": 8393,
											"name": "hover",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the mouse pointer is on it."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 34049,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ISeriesModel.hover",
												"id": 9312
											}
										},
										{
											"id": 8394,
											"name": "items",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the data items."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33940,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataModel.items",
												"id": 9270
											}
										},
										{
											"id": 8396,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39763,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IModel",
												"id": 11033
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.parent",
												"id": 11035
											}
										},
										{
											"id": 8388,
											"name": "points",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the points."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 34029,
													"character": 23
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IPointModel",
													"id": 9285
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ISeriesModel.points",
												"id": 9307
											}
										},
										{
											"id": 8391,
											"name": "selected",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether it is selected."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 34041,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ISeriesModel.selected",
												"id": 9310
											}
										},
										{
											"id": 8389,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 34033,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 13527
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ISeriesModel.style",
												"id": 9308
											}
										},
										{
											"id": 8395,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39759,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1638
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.type",
												"id": 11034
											}
										},
										{
											"id": 8386,
											"name": "valueDefinition",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the value definition."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 31583,
													"character": 32
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 8397,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 8398,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 8399,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5558,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												8384,
												8385,
												8390,
												8387,
												8392,
												8393,
												8394,
												8396,
												8388,
												8391,
												8389,
												8395,
												8386
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												8397
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 31571,
											"character": 42
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "ISeriesModel",
											"id": 9306
										}
									]
								},
								{
									"id": 10978,
									"name": "ICategoryAxisLabelModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a category label in the axis."
									},
									"children": [
										{
											"id": 10979,
											"name": "hover",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the mouse pointer is on it."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39564,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAxisLabelModel.hover",
												"id": 10951
											}
										},
										{
											"id": 10983,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39763,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IModel",
												"id": 11033
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.parent",
												"id": 11035
											}
										},
										{
											"id": 10982,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39759,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1638
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.type",
												"id": 11034
											}
										},
										{
											"id": 10984,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 10985,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 10986,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5558,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface"
											}
										},
										{
											"id": 10980,
											"name": "relatedModels",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 10981,
													"name": "relatedModels",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the related models."
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "IModel",
															"id": 11033
														}
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IAxisLabelModel.relatedModels",
														"id": 10952
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39568,
													"character": 21
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IAxisLabelModel.relatedModels",
												"id": 10952
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												10979,
												10983,
												10982
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												10984,
												10980
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 39628,
											"character": 44
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IAxisLabelModel",
											"id": 10950
										}
									]
								},
								{
									"id": 10067,
									"name": "IClickInteraction",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a click interaction."
									},
									"children": [
										{
											"id": 10068,
											"name": "onClick",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 10069,
													"name": "onClick",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Clicks the model."
													},
													"parameters": [
														{
															"id": 10070,
															"name": "evt",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The motion event."
															},
															"type": {
																"type": "reference",
																"name": "MotionEvent",
																"id": 942
															}
														},
														{
															"id": 10071,
															"name": "model",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The model.\n"
															},
															"type": {
																"type": "reference",
																"name": "IModel",
																"id": 11033
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 35871,
													"character": 15
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												10068
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 35864,
											"character": 38
										}
									]
								},
								{
									"id": 3435,
									"name": "IColor",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the color."
									},
									"children": [
										{
											"id": 3437,
											"name": "isTransparent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets whether it is transparent."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 17070,
													"character": 30
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 3436,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 17066,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ColorType",
												"id": 3431
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3437,
												3436
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 17062,
											"character": 27
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "ICssColor",
											"id": 3441
										},
										{
											"type": "reference",
											"name": "ILinearGradientColor",
											"id": 3445
										},
										{
											"type": "reference",
											"name": "IRadialGradientColor",
											"id": 3450
										}
									]
								},
								{
									"id": 3438,
									"name": "IColorStop",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the color stop."
									},
									"children": [
										{
											"id": 3439,
											"name": "color",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 17085,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3440,
											"name": "stop",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stop."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 17089,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3439,
												3440
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 17081,
											"character": 31
										}
									]
								},
								{
									"id": 10072,
									"name": "IConditionalFormattingRule",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the conditional formatting rule."
									},
									"children": [
										{
											"id": 10073,
											"name": "evaluate",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 10074,
													"name": "evaluate",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Evaluates the current instance"
													},
													"parameters": [
														{
															"id": 10075,
															"name": "context",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The current instance.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 35888,
													"character": 16
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												10073
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 35882,
											"character": 47
										}
									]
								},
								{
									"id": 3441,
									"name": "ICssColor",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the css color."
									},
									"children": [
										{
											"id": 3442,
											"name": "color",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 17104,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3444,
											"name": "isTransparent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets whether it is transparent."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 17070,
													"character": 30
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IColor.isTransparent",
												"id": 3437
											}
										},
										{
											"id": 3443,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 17066,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ColorType",
												"id": 3431
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IColor.type",
												"id": 3436
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3442,
												3444,
												3443
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 17100,
											"character": 30
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IColor",
											"id": 3435
										}
									]
								},
								{
									"id": 8227,
									"name": "IDataLabel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the data label interface."
									},
									"children": [
										{
											"id": 8228,
											"name": "dataLabel",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 8229,
													"name": "dataLabel",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the data label.",
														"returns": "The data label.\n"
													},
													"type": {
														"type": "reference",
														"name": "IDataLabelModel",
														"id": 11003
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 31093,
													"character": 17
												}
											]
										},
										{
											"id": 8230,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 8231,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 8232,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5558,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface"
											}
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												8228,
												8230
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 31087,
											"character": 31
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IQueryInterface"
										}
									]
								},
								{
									"id": 11003,
									"name": "IDataLabelModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a data label object."
									},
									"children": [
										{
											"id": 11005,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39763,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IModel",
												"id": 11033
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.parent",
												"id": 11035
											}
										},
										{
											"id": 11004,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39759,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1638
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.type",
												"id": 11034
											}
										},
										{
											"id": 11006,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 11007,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 11008,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5558,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												11005,
												11004
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												11006
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 39678,
											"character": 36
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IModel",
											"id": 11033
										}
									]
								},
								{
									"id": 9269,
									"name": "IDataModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a data model."
									},
									"children": [
										{
											"id": 9270,
											"name": "items",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the data items."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33940,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 9272,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39763,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IModel",
												"id": 11033
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.parent",
												"id": 11035
											}
										},
										{
											"id": 9271,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39759,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1638
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.type",
												"id": 11034
											}
										},
										{
											"id": 9273,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 9274,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 9275,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5558,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												9270,
												9272,
												9271
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												9273
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 33936,
											"character": 31
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IModel",
											"id": 11033
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "IPlotModel",
											"id": 9276
										},
										{
											"type": "reference",
											"name": "IPointModel",
											"id": 9285
										},
										{
											"type": "reference",
											"name": "ISeriesModel",
											"id": 9306
										}
									]
								},
								{
									"id": 10083,
									"name": "IDateParser",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the date parser."
									},
									"children": [
										{
											"id": 10084,
											"name": "parse",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 10085,
													"name": "parse",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Parses the date based on the date format.",
														"returns": "The Date value.\n"
													},
													"parameters": [
														{
															"id": 10086,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The string value.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 10087,
															"name": "format",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "Date"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 35935,
													"character": 13
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												10084
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 35927,
											"character": 32
										}
									]
								},
								{
									"id": 11009,
									"name": "IDvModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a data visualization model."
									},
									"children": [
										{
											"id": 11012,
											"name": "footer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the footer."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39701,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IHeaderFooterModel",
												"id": 11019
											}
										},
										{
											"id": 11011,
											"name": "header",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the header."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39697,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IHeaderFooterModel",
												"id": 11019
											}
										},
										{
											"id": 11010,
											"name": "option",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the option."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39693,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IConfigOption",
												"id": 13499
											}
										},
										{
											"id": 11015,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39763,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IModel",
												"id": 11033
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.parent",
												"id": 11035
											}
										},
										{
											"id": 11013,
											"name": "plotAreas",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the plot areas."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39705,
													"character": 26
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IPlotAreaModel",
													"id": 11039
												}
											}
										},
										{
											"id": 11014,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39759,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1638
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.type",
												"id": 11034
											}
										},
										{
											"id": 11016,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 11017,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 11018,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5558,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												11012,
												11011,
												11010,
												11015,
												11013,
												11014
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												11016
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 39689,
											"character": 29
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IModel",
											"id": 11033
										}
									]
								},
								{
									"id": 10088,
									"name": "IFilter",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the filter."
									},
									"children": [
										{
											"id": 10089,
											"name": "filter",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 10090,
													"name": "filter",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Filter the value."
													},
													"parameters": [
														{
															"id": 10091,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The value"
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 10092,
															"name": "key",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The key.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 35953,
													"character": 14
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												10089
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 35946,
											"character": 28
										}
									]
								},
								{
									"id": 8341,
									"name": "IGridLine",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the axis grid line interface."
									},
									"children": [
										{
											"id": 8342,
											"name": "gridLines",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 8343,
													"name": "gridLines",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the grid lines.",
														"returns": "The grid lines.\n"
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "IGridLineModel",
															"id": 10987
														}
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 31515,
													"character": 17
												}
											]
										},
										{
											"id": 8344,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 8345,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 8346,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5558,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface"
											}
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												8342,
												8344
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 31510,
											"character": 30
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IQueryInterface"
										}
									]
								},
								{
									"id": 10987,
									"name": "IGridLineModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a grid line object."
									},
									"children": [
										{
											"id": 10989,
											"name": "isMajor",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the whether the gridline is major."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39647,
													"character": 24
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 10988,
											"name": "orientation",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the orientation."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39643,
													"character": 28
												}
											],
											"type": {
												"type": "reference",
												"name": "Orientation",
												"id": 1737
											}
										},
										{
											"id": 10991,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39763,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IModel",
												"id": 11033
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.parent",
												"id": 11035
											}
										},
										{
											"id": 10990,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39759,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1638
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.type",
												"id": 11034
											}
										},
										{
											"id": 10992,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 10993,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 10994,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5558,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												10989,
												10988,
												10991,
												10990
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												10992
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 39639,
											"character": 35
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IModel",
											"id": 11033
										}
									]
								},
								{
									"id": 11019,
									"name": "IHeaderFooterModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a header or footer object."
									},
									"children": [
										{
											"id": 11022,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39763,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IModel",
												"id": 11033
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.parent",
												"id": 11035
											}
										},
										{
											"id": 11020,
											"name": "title",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the title."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39720,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 11021,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39759,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1638
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.type",
												"id": 11034
											}
										},
										{
											"id": 11023,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 11024,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 11025,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5558,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												11022,
												11020,
												11021
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												11023
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 39716,
											"character": 39
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IModel",
											"id": 11033
										}
									]
								},
								{
									"id": 9221,
									"name": "IHierarchicalPlotModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the field."
									},
									"children": [
										{
											"id": 9225,
											"name": "items",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the data items."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33940,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataModel.items",
												"id": 9270
											}
										},
										{
											"id": 9224,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the name."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33959,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPlotModel.name",
												"id": 9278
											}
										},
										{
											"id": 9227,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39763,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IModel",
												"id": 11033
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.parent",
												"id": 11035
											}
										},
										{
											"id": 9223,
											"name": "points",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the points."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33955,
													"character": 23
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IPointModel",
													"id": 9285
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPlotModel.points",
												"id": 9277
											}
										},
										{
											"id": 9222,
											"name": "root",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the root point.",
												"tags": [
													{
														"tag": "returns",
														"text": "The root point.\n"
													}
												]
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33853,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "IHierarchicalPointModel",
												"id": 9231
											}
										},
										{
											"id": 9226,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39759,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1638
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.type",
												"id": 11034
											}
										},
										{
											"id": 9228,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 9229,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 9230,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5558,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												9225,
												9224,
												9227,
												9223,
												9222,
												9226
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												9228
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 33847,
											"character": 43
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IPlotModel",
											"id": 9276
										}
									]
								},
								{
									"id": 9231,
									"name": "IHierarchicalPointModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the field."
									},
									"children": [
										{
											"id": 9247,
											"name": "additionalKind",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the additional kind."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 34002,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.additionalKind",
												"id": 9296
											}
										},
										{
											"id": 9236,
											"name": "children",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the child points."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33884,
													"character": 25
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IHierarchicalPointModel",
													"id": 9231
												}
											}
										},
										{
											"id": 9244,
											"name": "color",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33990,
													"character": 13
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ILinearGradientColor",
														"id": 3445
													},
													{
														"type": "reference",
														"name": "IRadialGradientColor",
														"id": 3450
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.color",
												"id": 9293
											}
										},
										{
											"id": 9234,
											"name": "depth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the point depth."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33876,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 9249,
											"name": "filtered",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether it is filtered out."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 34010,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.filtered",
												"id": 9298
											}
										},
										{
											"id": 9250,
											"name": "hover",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the mouse pointer is on it."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 34014,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.hover",
												"id": 9299
											}
										},
										{
											"id": 9237,
											"name": "item",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the item."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33974,
													"character": 21
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 9238,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 9239,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 9240,
																"name": "key",
																"kind": 32768,
																"kindString": "Parameter",
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "reference",
															"name": "DataValueType",
															"id": 23211
														}
													},
													"sources": [
														{
															"fileName": "core/modules/core.ts",
															"line": 33974,
															"character": 22
														}
													]
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.item",
												"id": 9286
											}
										},
										{
											"id": 9251,
											"name": "items",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the data items."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33940,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataModel.items",
												"id": 9270
											}
										},
										{
											"id": 9233,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the point name."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33872,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 9253,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39763,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IModel",
												"id": 11033
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.parent",
												"id": 11035
											}
										},
										{
											"id": 9248,
											"name": "selected",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether it is selected."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 34006,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.selected",
												"id": 9297
											}
										},
										{
											"id": 9245,
											"name": "shape",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the shape."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33994,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.shape",
												"id": 9294
											}
										},
										{
											"id": 9246,
											"name": "size",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the size."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33998,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.size",
												"id": 9295
											}
										},
										{
											"id": 9241,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33978,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 13527
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.style",
												"id": 9290
											}
										},
										{
											"id": 9242,
											"name": "text",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the text config."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33982,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "IPlotConfigTextOption",
												"id": 13825
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.text",
												"id": 9291
											}
										},
										{
											"id": 9243,
											"name": "tooltip",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the tooltip config."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33986,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"name": "IPlotConfigTooltipOption",
												"id": 13843
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.tooltip",
												"id": 9292
											}
										},
										{
											"id": 9252,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39759,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1638
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.type",
												"id": 11034
											}
										},
										{
											"id": 9235,
											"name": "value",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the point value."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33880,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 9232,
											"name": "valueDefinition",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the value definition."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33868,
													"character": 32
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 9254,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 9255,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 9256,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5558,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												9247,
												9236,
												9244,
												9234,
												9249,
												9250,
												9237,
												9251,
												9233,
												9253,
												9248,
												9245,
												9246,
												9241,
												9242,
												9243,
												9252,
												9235,
												9232
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												9254
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 33864,
											"character": 44
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IPointModel",
											"id": 9285
										}
									]
								},
								{
									"id": 10093,
									"name": "IHoverInteraction",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a hover interaction."
									},
									"children": [
										{
											"id": 10095,
											"name": "model",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the current model."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 35972,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "IModel",
												"id": 11033
											}
										},
										{
											"id": 10094,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the name."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 35968,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 10113,
											"name": "dispose",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 10114,
													"name": "dispose",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Disposes and releases resources."
													},
													"type": {
														"type": "intrinsic",
														"name": "void"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IDisposable.dispose"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5538,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IDisposable.dispose"
											}
										},
										{
											"id": 10096,
											"name": "hover",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 10097,
													"name": "hover",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Checks whether the model can be hover.",
														"returns": "True if it can be hover, otherwise false.\n"
													},
													"parameters": [
														{
															"id": 10098,
															"name": "evt",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The motion event."
															},
															"type": {
																"type": "reference",
																"name": "MotionEvent",
																"id": 942
															}
														},
														{
															"id": 10099,
															"name": "model",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The model.\n"
															},
															"type": {
																"type": "reference",
																"name": "IModel",
																"id": 11033
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 35982,
													"character": 13
												}
											]
										},
										{
											"id": 10100,
											"name": "isModel",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 10101,
													"name": "isModel",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Checks whether the model is the same.",
														"returns": "True if it is same, otherwise false.\n"
													},
													"parameters": [
														{
															"id": 10102,
															"name": "evt",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The motion event."
															},
															"type": {
																"type": "reference",
																"name": "MotionEvent",
																"id": 942
															}
														},
														{
															"id": 10103,
															"name": "model",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The model.\n"
															},
															"type": {
																"type": "reference",
																"name": "IModel",
																"id": 11033
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 35991,
													"character": 15
												}
											]
										},
										{
											"id": 10104,
											"name": "onEnter",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 10105,
													"name": "onEnter",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Enter the model."
													},
													"parameters": [
														{
															"id": 10106,
															"name": "evt",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The motion event.\n"
															},
															"type": {
																"type": "reference",
																"name": "MotionEvent",
																"id": 942
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 35997,
													"character": 15
												}
											]
										},
										{
											"id": 10107,
											"name": "onLeave",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 10108,
													"name": "onLeave",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Leave the model."
													},
													"parameters": [
														{
															"id": 10109,
															"name": "evt",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The motion event.\n"
															},
															"type": {
																"type": "reference",
																"name": "MotionEvent",
																"id": 942
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 36003,
													"character": 15
												}
											]
										},
										{
											"id": 10110,
											"name": "onMove",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 10111,
													"name": "onMove",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Hover the model."
													},
													"parameters": [
														{
															"id": 10112,
															"name": "evt",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The motion event.\n"
															},
															"type": {
																"type": "reference",
																"name": "MotionEvent",
																"id": 942
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 36009,
													"character": 14
												}
											]
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												10095,
												10094
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												10113,
												10096,
												10100,
												10104,
												10107,
												10110
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 35964,
											"character": 38
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IDisposable"
										}
									]
								},
								{
									"id": 11056,
									"name": "IItemizedLegendModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents an itemized legend model."
									},
									"children": [
										{
											"id": 11057,
											"name": "items",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the legend items."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39820,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "ILegendItemModel",
													"id": 11065
												}
											}
										},
										{
											"id": 11059,
											"name": "kind",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the kind."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39883,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ILegendModel.kind",
												"id": 11082
											}
										},
										{
											"id": 11061,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39763,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IModel",
												"id": 11033
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.parent",
												"id": 11035
											}
										},
										{
											"id": 11058,
											"name": "title",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the title."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39879,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ILegendModel.title",
												"id": 11081
											}
										},
										{
											"id": 11060,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39759,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1638
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.type",
												"id": 11034
											}
										},
										{
											"id": 11062,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 11063,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 11064,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5558,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												11057,
												11059,
												11061,
												11058,
												11060
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												11062
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 39816,
											"character": 41
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "ILegendModel",
											"id": 11080
										}
									]
								},
								{
									"id": 11026,
									"name": "ILayer",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a layer object."
									},
									"children": [
										{
											"id": 11030,
											"name": "hitTest",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 11031,
													"name": "hitTest",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Hit test the layer.",
														"returns": "@HitInfo the result of hittest\n"
													},
													"parameters": [
														{
															"id": 11032,
															"name": "point",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "-The location in the control."
															},
															"type": {
																"type": "reference",
																"name": "Point"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "HitTestResult",
														"id": 1920
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39745,
													"character": 15
												}
											]
										},
										{
											"id": 11027,
											"name": "render",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 11028,
													"name": "render",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Render the layer."
													},
													"parameters": [
														{
															"id": 11029,
															"name": "render",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "-The render.\n"
															},
															"type": {
																"type": "reference",
																"name": "IRender",
																"id": 22404
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39737,
													"character": 14
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												11030,
												11027
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 39731,
											"character": 27
										}
									]
								},
								{
									"id": 11065,
									"name": "ILegendItemModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a legend item object."
									},
									"children": [
										{
											"id": 11068,
											"name": "color",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39843,
													"character": 22
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ILinearGradientColor",
														"id": 3445
													},
													{
														"type": "reference",
														"name": "IRadialGradientColor",
														"id": 3450
													}
												]
											}
										},
										{
											"id": 11071,
											"name": "filtered",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether it is filtered out."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39855,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 11072,
											"name": "hover",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the mouse pointer is on it."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39859,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 11076,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39763,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IModel",
												"id": 11033
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.parent",
												"id": 11035
											}
										},
										{
											"id": 11070,
											"name": "selected",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether it is selected."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39851,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 11069,
											"name": "shape",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the shape."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39847,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 11067,
											"name": "size",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the size."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39839,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 11066,
											"name": "title",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Get the title."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39835,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 11075,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39759,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1638
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.type",
												"id": 11034
											}
										},
										{
											"id": 11077,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 11078,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 11079,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5558,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface"
											}
										},
										{
											"id": 11073,
											"name": "relatedModels",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 11074,
													"name": "relatedModels",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the related models."
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "IModel",
															"id": 11033
														}
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39864,
													"character": 21
												}
											]
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												11068,
												11071,
												11072,
												11076,
												11070,
												11069,
												11067,
												11066,
												11075
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												11077,
												11073
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 39831,
											"character": 37
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IModel",
											"id": 11033
										}
									]
								},
								{
									"id": 11080,
									"name": "ILegendModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a legend model."
									},
									"children": [
										{
											"id": 11082,
											"name": "kind",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the kind."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39883,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 11084,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39763,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IModel",
												"id": 11033
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.parent",
												"id": 11035
											}
										},
										{
											"id": 11081,
											"name": "title",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the title."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39879,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 11083,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39759,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1638
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.type",
												"id": 11034
											}
										},
										{
											"id": 11085,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 11086,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 11087,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5558,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												11082,
												11084,
												11081,
												11083
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												11085
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 39875,
											"character": 33
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IModel",
											"id": 11033
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "IItemizedLegendModel",
											"id": 11056
										}
									]
								},
								{
									"id": 11088,
									"name": "ILegendTitleModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a legend title model."
									},
									"children": [
										{
											"id": 11091,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39763,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IModel",
												"id": 11033
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.parent",
												"id": 11035
											}
										},
										{
											"id": 11089,
											"name": "title",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the title."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39898,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 11090,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39759,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1638
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.type",
												"id": 11034
											}
										},
										{
											"id": 11092,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 11093,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 11094,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5558,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												11091,
												11089,
												11090
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												11092
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 39894,
											"character": 38
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IModel",
											"id": 11033
										}
									]
								},
								{
									"id": 3445,
									"name": "ILinearGradientColor",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the linear gradient color."
									},
									"children": [
										{
											"id": 3447,
											"name": "colorStops",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the list containing color and offset."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 17123,
													"character": 27
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IColorStop",
													"id": 3438
												}
											}
										},
										{
											"id": 3446,
											"name": "degree",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the degree."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 17119,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 3449,
											"name": "isTransparent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets whether it is transparent."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 17070,
													"character": 30
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IColor.isTransparent",
												"id": 3437
											}
										},
										{
											"id": 3448,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 17066,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ColorType",
												"id": 3431
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IColor.type",
												"id": 3436
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3447,
												3446,
												3449,
												3448
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 17115,
											"character": 41
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IColor",
											"id": 3435
										}
									]
								},
								{
									"id": 2277,
									"name": "IMeasurer",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the measurer."
									},
									"children": [
										{
											"id": 2278,
											"name": "measureString",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2279,
													"name": "measureString",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Measure string."
													},
													"parameters": [
														{
															"id": 2280,
															"name": "s",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The measure string."
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2281,
															"name": "fontSize",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2282,
															"name": "fontFamily",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2283,
															"name": "fontWeight",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2284,
															"name": "fontStyle",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "Size"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 11816,
													"character": 21
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												2278
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 11806,
											"character": 30
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "ICanvasMeasurer",
											"id": 2264
										},
										{
											"type": "reference",
											"name": "ISvgMeasurer",
											"id": 2285
										}
									]
								},
								{
									"id": 11033,
									"name": "IModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a model object."
									},
									"children": [
										{
											"id": 11035,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39763,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IModel",
												"id": 11033
											}
										},
										{
											"id": 11034,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39759,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1638
											}
										},
										{
											"id": 11036,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 11037,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 11038,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5558,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												11035,
												11034
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												11036
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 39755,
											"character": 27
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IQueryInterface"
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "IDataModel",
											"id": 9269
										},
										{
											"type": "reference",
											"name": "IAxisLabelModel",
											"id": 10950
										},
										{
											"type": "reference",
											"name": "IAxisModel",
											"id": 10959
										},
										{
											"type": "reference",
											"name": "IAxisTitleModel",
											"id": 10971
										},
										{
											"type": "reference",
											"name": "IGridLineModel",
											"id": 10987
										},
										{
											"type": "reference",
											"name": "IDataLabelModel",
											"id": 11003
										},
										{
											"type": "reference",
											"name": "IDvModel",
											"id": 11009
										},
										{
											"type": "reference",
											"name": "IHeaderFooterModel",
											"id": 11019
										},
										{
											"type": "reference",
											"name": "IPlotAreaModel",
											"id": 11039
										},
										{
											"type": "reference",
											"name": "IPlotsPaneModel",
											"id": 11049
										},
										{
											"type": "reference",
											"name": "ILegendItemModel",
											"id": 11065
										},
										{
											"type": "reference",
											"name": "ILegendModel",
											"id": 11080
										},
										{
											"type": "reference",
											"name": "ILegendTitleModel",
											"id": 11088
										},
										{
											"type": "reference",
											"name": "ITrellisCellModel",
											"id": 55642
										},
										{
											"type": "reference",
											"name": "ITrellisColumnHeaderModel",
											"id": 55652
										},
										{
											"type": "reference",
											"name": "ITrellisColumnModel",
											"id": 55667
										},
										{
											"type": "reference",
											"name": "ITrellisModel",
											"id": 55677
										},
										{
											"type": "reference",
											"name": "ITrellisRowHeaderModel",
											"id": 55689
										},
										{
											"type": "reference",
											"name": "ITrellisRowModel",
											"id": 55704
										}
									]
								},
								{
									"id": 9512,
									"name": "IParallelPlotModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the parallel plot object."
									},
									"children": [
										{
											"id": 9516,
											"name": "items",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the data items."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33940,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataModel.items",
												"id": 9270
											}
										},
										{
											"id": 9515,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the name."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33959,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPlotModel.name",
												"id": 9278
											}
										},
										{
											"id": 9518,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39763,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IModel",
												"id": 11033
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.parent",
												"id": 11035
											}
										},
										{
											"id": 9514,
											"name": "points",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the points."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33955,
													"character": 23
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IPointModel",
													"id": 9285
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPlotModel.points",
												"id": 9277
											}
										},
										{
											"id": 9513,
											"name": "seriesList",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the series list."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 34848,
													"character": 27
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IParallelSeriesModel",
													"id": 9544
												}
											}
										},
										{
											"id": 9517,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39759,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1638
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.type",
												"id": 11034
											}
										},
										{
											"id": 9519,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 9520,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 9521,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5558,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												9516,
												9515,
												9518,
												9514,
												9513,
												9517
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												9519
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 34844,
											"character": 39
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IPlotModel",
											"id": 9276
										}
									]
								},
								{
									"id": 9522,
									"name": "IParallelPointModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the parallel point object."
									},
									"children": [
										{
											"id": 9534,
											"name": "additionalKind",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the additional kind."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 34002,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.additionalKind",
												"id": 9296
											}
										},
										{
											"id": 9531,
											"name": "color",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33990,
													"character": 13
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ILinearGradientColor",
														"id": 3445
													},
													{
														"type": "reference",
														"name": "IRadialGradientColor",
														"id": 3450
													}
												]
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.color",
												"id": 9293
											}
										},
										{
											"id": 9523,
											"name": "dimension",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the dimension name."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 34863,
													"character": 26
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 9536,
											"name": "filtered",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether it is filtered out."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 34010,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.filtered",
												"id": 9298
											}
										},
										{
											"id": 9537,
											"name": "hover",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the mouse pointer is on it."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 34014,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.hover",
												"id": 9299
											}
										},
										{
											"id": 9524,
											"name": "item",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the item."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33974,
													"character": 21
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 9525,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 9526,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 9527,
																"name": "key",
																"kind": 32768,
																"kindString": "Parameter",
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "reference",
															"name": "DataValueType",
															"id": 23211
														}
													},
													"sources": [
														{
															"fileName": "core/modules/core.ts",
															"line": 33974,
															"character": 22
														}
													]
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.item",
												"id": 9286
											}
										},
										{
											"id": 9538,
											"name": "items",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the data items."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33940,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataModel.items",
												"id": 9270
											}
										},
										{
											"id": 9540,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39763,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IModel",
												"id": 11033
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.parent",
												"id": 11035
											}
										},
										{
											"id": 9535,
											"name": "selected",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether it is selected."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 34006,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.selected",
												"id": 9297
											}
										},
										{
											"id": 9532,
											"name": "shape",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the shape."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33994,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.shape",
												"id": 9294
											}
										},
										{
											"id": 9533,
											"name": "size",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the size."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33998,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.size",
												"id": 9295
											}
										},
										{
											"id": 9528,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33978,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 13527
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.style",
												"id": 9290
											}
										},
										{
											"id": 9529,
											"name": "text",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the text config."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33982,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "IPlotConfigTextOption",
												"id": 13825
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.text",
												"id": 9291
											}
										},
										{
											"id": 9530,
											"name": "tooltip",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the tooltip config."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33986,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"name": "IPlotConfigTooltipOption",
												"id": 13843
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IPointModel.tooltip",
												"id": 9292
											}
										},
										{
											"id": 9539,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39759,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1638
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.type",
												"id": 11034
											}
										},
										{
											"id": 9541,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 9542,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 9543,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5558,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												9534,
												9531,
												9523,
												9536,
												9537,
												9524,
												9538,
												9540,
												9535,
												9532,
												9533,
												9528,
												9529,
												9530,
												9539
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												9541
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 34859,
											"character": 40
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IPointModel",
											"id": 9285
										}
									]
								},
								{
									"id": 9544,
									"name": "IParallelSeriesModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the parallel series object."
									},
									"children": [
										{
											"id": 9546,
											"name": "color",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the color of the data point."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 34882,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"overwrites": {
												"type": "reference",
												"name": "ISeriesModel.color",
												"id": 9309
											}
										},
										{
											"id": 9549,
											"name": "filtered",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether it is filtered out."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 34045,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ISeriesModel.filtered",
												"id": 9311
											}
										},
										{
											"id": 9550,
											"name": "hover",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the mouse pointer is on it."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 34049,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ISeriesModel.hover",
												"id": 9312
											}
										},
										{
											"id": 9551,
											"name": "items",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the data items."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33940,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataModel.items",
												"id": 9270
											}
										},
										{
											"id": 9553,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39763,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IModel",
												"id": 11033
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.parent",
												"id": 11035
											}
										},
										{
											"id": 9545,
											"name": "points",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the points."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 34878,
													"character": 23
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IParallelPointModel",
													"id": 9522
												}
											},
											"overwrites": {
												"type": "reference",
												"name": "ISeriesModel.points",
												"id": 9307
											}
										},
										{
											"id": 9548,
											"name": "selected",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether it is selected."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 34041,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ISeriesModel.selected",
												"id": 9310
											}
										},
										{
											"id": 9547,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 34033,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 13527
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ISeriesModel.style",
												"id": 9308
											}
										},
										{
											"id": 9552,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39759,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1638
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.type",
												"id": 11034
											}
										},
										{
											"id": 9554,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 9555,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 9556,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5558,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												9546,
												9549,
												9550,
												9551,
												9553,
												9545,
												9548,
												9547,
												9552
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												9554
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 34874,
											"character": 41
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "ISeriesModel",
											"id": 9306
										}
									]
								},
								{
									"id": 11039,
									"name": "IPlotAreaModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a plot area."
									},
									"children": [
										{
											"id": 11041,
											"name": "column",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the column index."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39782,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 11042,
											"name": "legends",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the legends."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39786,
													"character": 24
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "ILegendModel",
													"id": 11080
												}
											}
										},
										{
											"id": 11045,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39763,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IModel",
												"id": 11033
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.parent",
												"id": 11035
											}
										},
										{
											"id": 11043,
											"name": "plotsPanes",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the plot panes."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39790,
													"character": 27
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IPlotsPaneModel",
													"id": 11049
												}
											}
										},
										{
											"id": 11040,
											"name": "row",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the row index."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39778,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 11044,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39759,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1638
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.type",
												"id": 11034
											}
										},
										{
											"id": 11046,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 11047,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 11048,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5558,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												11041,
												11042,
												11045,
												11043,
												11040,
												11044
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												11046
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 39774,
											"character": 35
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IModel",
											"id": 11033
										}
									]
								},
								{
									"id": 9276,
									"name": "IPlotModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the plot model."
									},
									"children": [
										{
											"id": 9279,
											"name": "items",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the data items."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33940,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataModel.items",
												"id": 9270
											}
										},
										{
											"id": 9278,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the name."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33959,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 9281,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39763,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IModel",
												"id": 11033
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.parent",
												"id": 11035
											}
										},
										{
											"id": 9277,
											"name": "points",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the points."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33955,
													"character": 23
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IPointModel",
													"id": 9285
												}
											}
										},
										{
											"id": 9280,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39759,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1638
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.type",
												"id": 11034
											}
										},
										{
											"id": 9282,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 9283,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 9284,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5558,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												9279,
												9278,
												9281,
												9277,
												9280
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												9282
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 33951,
											"character": 31
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IDataModel",
											"id": 9269
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "ICartesianPlotModel",
											"id": 8347
										},
										{
											"type": "reference",
											"name": "IHierarchicalPlotModel",
											"id": 9221
										},
										{
											"type": "reference",
											"name": "IParallelPlotModel",
											"id": 9512
										}
									]
								},
								{
									"id": 11049,
									"name": "IPlotsPaneModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a plots."
									},
									"children": [
										{
											"id": 11052,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39763,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IModel",
												"id": 11033
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.parent",
												"id": 11035
											}
										},
										{
											"id": 11050,
											"name": "plots",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the plots."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39805,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IPlotModel",
													"id": 9276
												}
											}
										},
										{
											"id": 11051,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39759,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1638
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.type",
												"id": 11034
											}
										},
										{
											"id": 11053,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 11054,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 11055,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5558,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												11052,
												11050,
												11051
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												11053
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 39801,
											"character": 36
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IModel",
											"id": 11033
										}
									]
								},
								{
									"id": 9285,
									"name": "IPointModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the point object."
									},
									"children": [
										{
											"id": 9296,
											"name": "additionalKind",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the additional kind."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 34002,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 9293,
											"name": "color",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33990,
													"character": 13
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ILinearGradientColor",
														"id": 3445
													},
													{
														"type": "reference",
														"name": "IRadialGradientColor",
														"id": 3450
													}
												]
											}
										},
										{
											"id": 9298,
											"name": "filtered",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether it is filtered out."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 34010,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 9299,
											"name": "hover",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the mouse pointer is on it."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 34014,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 9286,
											"name": "item",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the item."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33974,
													"character": 21
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 9287,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 9288,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 9289,
																"name": "key",
																"kind": 32768,
																"kindString": "Parameter",
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "reference",
															"name": "DataValueType",
															"id": 23211
														}
													},
													"sources": [
														{
															"fileName": "core/modules/core.ts",
															"line": 33974,
															"character": 22
														}
													]
												}
											}
										},
										{
											"id": 9300,
											"name": "items",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the data items."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33940,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataModel.items",
												"id": 9270
											}
										},
										{
											"id": 9302,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39763,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IModel",
												"id": 11033
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.parent",
												"id": 11035
											}
										},
										{
											"id": 9297,
											"name": "selected",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether it is selected."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 34006,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 9294,
											"name": "shape",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the shape."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33994,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 9295,
											"name": "size",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the size."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33998,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 9290,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33978,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 13527
											}
										},
										{
											"id": 9291,
											"name": "text",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the text config."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33982,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "IPlotConfigTextOption",
												"id": 13825
											}
										},
										{
											"id": 9292,
											"name": "tooltip",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the tooltip config."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33986,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"name": "IPlotConfigTooltipOption",
												"id": 13843
											}
										},
										{
											"id": 9301,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39759,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1638
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.type",
												"id": 11034
											}
										},
										{
											"id": 9303,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 9304,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 9305,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5558,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												9296,
												9293,
												9298,
												9299,
												9286,
												9300,
												9302,
												9297,
												9294,
												9295,
												9290,
												9291,
												9292,
												9301
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												9303
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 33970,
											"character": 32
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IDataModel",
											"id": 9269
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "ICartesianPointModel",
											"id": 8357
										},
										{
											"type": "reference",
											"name": "IHierarchicalPointModel",
											"id": 9231
										},
										{
											"type": "reference",
											"name": "IParallelPointModel",
											"id": 9522
										}
									]
								},
								{
									"id": 6359,
									"name": "IPrediction",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the prediction template."
									},
									"typeParameter": [
										{
											"id": 6360,
											"name": "T",
											"kind": 131072,
											"kindString": "Type parameter",
											"flags": {}
										}
									],
									"children": [
										{
											"id": 6361,
											"name": "predicate",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 6362,
													"name": "predicate",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Predicate."
													},
													"parameters": [
														{
															"id": 6363,
															"name": "item",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "typeParameter",
																"name": "T"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 25525,
													"character": 17
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												6361
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 25521,
											"character": 32
										}
									],
									"implementedBy": [
										{
											"type": "reference",
											"name": "ExcludingModelPrediction",
											"id": 6343
										},
										{
											"type": "reference",
											"name": "IncludingModelPrediction",
											"id": 6351
										}
									]
								},
								{
									"id": 3450,
									"name": "IRadialGradientColor",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the radial gradient color."
									},
									"children": [
										{
											"id": 3455,
											"name": "colorStops",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the list containing color and offset."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 17154,
													"character": 27
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IColorStop",
													"id": 3438
												}
											}
										},
										{
											"id": 3453,
											"name": "end",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the end location."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 17146,
													"character": 20
												}
											],
											"type": {
												"type": "reference",
												"name": "Point"
											}
										},
										{
											"id": 3454,
											"name": "endRadius",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the end radius."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 17150,
													"character": 26
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 3457,
											"name": "isTransparent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets whether it is transparent."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 17070,
													"character": 30
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IColor.isTransparent",
												"id": 3437
											}
										},
										{
											"id": 3451,
											"name": "start",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the start location."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 17138,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "Point"
											}
										},
										{
											"id": 3452,
											"name": "startRadius",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the start radius."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 17142,
													"character": 28
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 3456,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 17066,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ColorType",
												"id": 3431
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IColor.type",
												"id": 3436
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												3455,
												3453,
												3454,
												3457,
												3451,
												3452,
												3456
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 17134,
											"character": 41
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IColor",
											"id": 3435
										}
									]
								},
								{
									"id": 2095,
									"name": "IRenderEngine",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the render engine."
									},
									"children": [
										{
											"id": 2107,
											"name": "devicePixelRatio",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the devicePixelRatio for canvas renderengine"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 11564,
													"character": 24
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2097,
											"name": "fill",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the color used to fill the element."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 11524,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ILinearGradientColor",
														"id": 3445
													},
													{
														"type": "reference",
														"name": "IRadialGradientColor",
														"id": 3450
													}
												]
											}
										},
										{
											"id": 2103,
											"name": "fontFamily",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the font family for the text output."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 11548,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2102,
											"name": "fontSize",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the font size for the text output."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 11544,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2105,
											"name": "fontStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the font style for the text output."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 11556,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "FontStyle",
												"id": 1671
											}
										},
										{
											"id": 2104,
											"name": "fontWeight",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the font weight for the text output."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 11552,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2096,
											"name": "opacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the opacity used to fill the element."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 11520,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2098,
											"name": "stroke",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the color used to outline the element."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 11528,
													"character": 14
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ILinearGradientColor",
														"id": 3445
													},
													{
														"type": "reference",
														"name": "IRadialGradientColor",
														"id": 3450
													}
												]
											}
										},
										{
											"id": 2100,
											"name": "strokeDasharray",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the pattern of dashes and gaps of the outline."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 11536,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2099,
											"name": "strokeWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the thickness of the outline."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 11532,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2106,
											"name": "textDecoration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text decoration for the text output."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 11560,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextDecorationOption",
												"id": 13912
											}
										},
										{
											"id": 2101,
											"name": "textFill",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 11540,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2218,
											"name": "addClipRect",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2219,
													"name": "addClipRect",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2220,
															"name": "clipRect",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Rect"
															}
														},
														{
															"id": 2221,
															"name": "id",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 11598,
													"character": 19
												}
											]
										},
										{
											"id": 2108,
											"name": "beginRender",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2109,
													"name": "beginRender",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Clear the viewport and start the rendering cycle."
													},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 11570,
													"character": 19
												}
											]
										},
										{
											"id": 2179,
											"name": "drawDonutSegment",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2180,
													"name": "drawDonutSegment",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2181,
															"name": "cx",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2182,
															"name": "cy",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2183,
															"name": "radius",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2184,
															"name": "innerRadius",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2185,
															"name": "startAngle",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2186,
															"name": "sweepAngle",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2187,
															"name": "className",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2188,
															"name": "style",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2189,
															"name": "clipPath",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 11593,
													"character": 24
												}
											]
										},
										{
											"id": 2123,
											"name": "drawEllipse",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2124,
													"name": "drawEllipse",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2125,
															"name": "cx",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2126,
															"name": "cy",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2127,
															"name": "rx",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2128,
															"name": "ry",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2129,
															"name": "className",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2130,
															"name": "style",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 11586,
													"character": 19
												}
											]
										},
										{
											"id": 2204,
											"name": "drawImage",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2205,
													"name": "drawImage",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2206,
															"name": "imageHref",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2207,
															"name": "x",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2208,
															"name": "y",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2209,
															"name": "w",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2210,
															"name": "h",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2211,
															"name": "matrix",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 11596,
													"character": 17
												}
											]
										},
										{
											"id": 2140,
											"name": "drawLine",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2141,
													"name": "drawLine",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2142,
															"name": "x1",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2143,
															"name": "y1",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2144,
															"name": "x2",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2145,
															"name": "y2",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2146,
															"name": "className",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2147,
															"name": "style",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 11588,
													"character": 16
												}
											]
										},
										{
											"id": 2148,
											"name": "drawLines",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2149,
													"name": "drawLines",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2150,
															"name": "xs",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														},
														{
															"id": 2151,
															"name": "ys",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														},
														{
															"id": 2152,
															"name": "className",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2153,
															"name": "style",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2154,
															"name": "clipPath",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 11589,
													"character": 17
												}
											]
										},
										{
											"id": 2169,
											"name": "drawPieSegment",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2170,
													"name": "drawPieSegment",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2171,
															"name": "cx",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2172,
															"name": "cy",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2173,
															"name": "radius",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2174,
															"name": "startAngle",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2175,
															"name": "sweepAngle",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2176,
															"name": "className",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2177,
															"name": "style",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2178,
															"name": "clipPath",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 11592,
													"character": 22
												}
											]
										},
										{
											"id": 2162,
											"name": "drawPolygon",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2163,
													"name": "drawPolygon",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2164,
															"name": "xs",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														},
														{
															"id": 2165,
															"name": "ys",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														},
														{
															"id": 2166,
															"name": "className",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2167,
															"name": "style",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2168,
															"name": "clipPath",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 11591,
													"character": 19
												}
											]
										},
										{
											"id": 2131,
											"name": "drawRect",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2132,
													"name": "drawRect",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2133,
															"name": "x",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2134,
															"name": "y",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2135,
															"name": "w",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2136,
															"name": "h",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2137,
															"name": "className",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2138,
															"name": "style",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2139,
															"name": "clipPath",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 11587,
													"character": 16
												}
											]
										},
										{
											"id": 2155,
											"name": "drawSplines",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2156,
													"name": "drawSplines",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2157,
															"name": "xs",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														},
														{
															"id": 2158,
															"name": "ys",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														},
														{
															"id": 2159,
															"name": "className",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2160,
															"name": "style",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 2161,
															"name": "clipPath",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 11590,
													"character": 19
												}
											]
										},
										{
											"id": 2190,
											"name": "drawString",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2191,
													"name": "drawString",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2192,
															"name": "s",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2193,
															"name": "pt",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Point"
															}
														},
														{
															"id": 2194,
															"name": "className",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2195,
															"name": "style",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 11594,
													"character": 18
												}
											]
										},
										{
											"id": 2196,
											"name": "drawStringRotated",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2197,
													"name": "drawStringRotated",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2198,
															"name": "label",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2199,
															"name": "pt",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Point"
															}
														},
														{
															"id": 2200,
															"name": "center",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "Point"
															}
														},
														{
															"id": 2201,
															"name": "angle",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2202,
															"name": "className",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2203,
															"name": "style",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 11595,
													"character": 25
												}
											]
										},
										{
											"id": 2121,
											"name": "endGroup",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2122,
													"name": "endGroup",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 11584,
													"character": 16
												}
											]
										},
										{
											"id": 2110,
											"name": "endRender",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2111,
													"name": "endRender",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Ends the rendering cycle."
													},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 11574,
													"character": 17
												}
											]
										},
										{
											"id": 2212,
											"name": "measureString",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2213,
													"name": "measureString",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2214,
															"name": "s",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2215,
															"name": "className",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2216,
															"name": "groupName",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2217,
															"name": "style",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "Size"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 11597,
													"character": 21
												}
											]
										},
										{
											"id": 2112,
											"name": "setViewportSize",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2113,
													"name": "setViewportSize",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Sets the size of the viewport."
													},
													"parameters": [
														{
															"id": 2114,
															"name": "width",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The viewport width."
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 2115,
															"name": "height",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The viewport height.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 11581,
													"character": 23
												}
											]
										},
										{
											"id": 2116,
											"name": "startGroup",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2117,
													"name": "startGroup",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 2118,
															"name": "className",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2119,
															"name": "clipPath",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2120,
															"name": "createTransform",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 11583,
													"character": 18
												}
											]
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												2107,
												2097,
												2103,
												2102,
												2105,
												2104,
												2096,
												2098,
												2100,
												2099,
												2106,
												2101
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												2218,
												2108,
												2179,
												2123,
												2204,
												2140,
												2148,
												2169,
												2162,
												2131,
												2155,
												2190,
												2196,
												2121,
												2110,
												2212,
												2112,
												2116
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 11516,
											"character": 34
										}
									]
								},
								{
									"id": 9306,
									"name": "ISeriesModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the series object."
									},
									"children": [
										{
											"id": 9309,
											"name": "color",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 34037,
													"character": 13
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ILinearGradientColor",
														"id": 3445
													},
													{
														"type": "reference",
														"name": "IRadialGradientColor",
														"id": 3450
													}
												]
											}
										},
										{
											"id": 9311,
											"name": "filtered",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether it is filtered out."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 34045,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 9312,
											"name": "hover",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the mouse pointer is on it."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 34049,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 9313,
											"name": "items",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the data items."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 33940,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataModel.items",
												"id": 9270
											}
										},
										{
											"id": 9315,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39763,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IModel",
												"id": 11033
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.parent",
												"id": 11035
											}
										},
										{
											"id": 9307,
											"name": "points",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the points."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 34029,
													"character": 23
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IPointModel",
													"id": 9285
												}
											}
										},
										{
											"id": 9310,
											"name": "selected",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether it is selected."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 34041,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 9308,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 34033,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 13527
											}
										},
										{
											"id": 9314,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39759,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1638
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.type",
												"id": 11034
											}
										},
										{
											"id": 9316,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 9317,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 9318,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5558,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												9309,
												9311,
												9312,
												9313,
												9315,
												9307,
												9310,
												9308,
												9314
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												9316
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 34025,
											"character": 33
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IDataModel",
											"id": 9269
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "ICartesianSeriesModel",
											"id": 8383
										},
										{
											"type": "reference",
											"name": "IParallelSeriesModel",
											"id": 9544
										}
									]
								},
								{
									"id": 10137,
									"name": "IShapeElement",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the shape element."
									},
									"children": [
										{
											"id": 10140,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 10141,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 10142,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5558,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface"
											}
										},
										{
											"id": 10138,
											"name": "shape",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 10139,
													"name": "shape",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Query the model shape.",
														"returns": "The shape.\n"
													},
													"type": {
														"type": "reference",
														"name": "IShape",
														"id": 22972
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 36108,
													"character": 13
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												10140,
												10138
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 36102,
											"character": 34
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IQueryInterface"
										}
									]
								},
								{
									"id": 10115,
									"name": "IStringFormatting",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the string formatting."
									},
									"children": [
										{
											"id": 10120,
											"name": "defaultFormat",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 10121,
													"name": "defaultFormat",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the default format of the data type.",
														"returns": "The default format.\n"
													},
													"parameters": [
														{
															"id": 10122,
															"name": "dataType",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The data type.\n"
															},
															"type": {
																"type": "reference",
																"name": "DataType"
															}
														},
														{
															"id": 10123,
															"name": "percentage",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 36036,
													"character": 21
												}
											]
										},
										{
											"id": 10116,
											"name": "format",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 10117,
													"name": "format",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the formatting string of the object.",
														"returns": "The formatting string.\n"
													},
													"parameters": [
														{
															"id": 10118,
															"name": "format",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 10119,
															"name": "obj",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The object.\n"
															},
															"type": {
																"type": "reference",
																"name": "DataValueType",
																"id": 23211
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 36028,
													"character": 14
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												10120,
												10116
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 36020,
											"character": 38
										}
									]
								},
								{
									"id": 22568,
									"name": "IStyle",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the style for render."
									},
									"children": [
										{
											"id": 22570,
											"name": "fill",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 73949,
													"character": 12
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ILinearGradientColor",
														"id": 3445
													},
													{
														"type": "reference",
														"name": "IRadialGradientColor",
														"id": 3450
													}
												]
											}
										},
										{
											"id": 22569,
											"name": "fillOpacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 73948,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 22577,
											"name": "fontFamily",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 73956,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 22576,
											"name": "fontSize",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 73955,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 22579,
											"name": "fontStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 73958,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "FontStyle",
												"id": 1671
											}
										},
										{
											"id": 22578,
											"name": "fontWeight",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 73957,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 22572,
											"name": "stroke",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 73951,
													"character": 14
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ILinearGradientColor",
														"id": 3445
													},
													{
														"type": "reference",
														"name": "IRadialGradientColor",
														"id": 3450
													}
												]
											}
										},
										{
											"id": 22574,
											"name": "strokeDasharray",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 73953,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 22571,
											"name": "strokeOpacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 73950,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 22573,
											"name": "strokeWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 73952,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 22580,
											"name": "textDecoration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 73959,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextDecorationOption",
												"id": 13912
											}
										},
										{
											"id": 22575,
											"name": "textFill",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 73954,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 22581,
											"name": "clone",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 22582,
													"name": "clone",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 73961,
													"character": 13
												}
											]
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												22570,
												22569,
												22577,
												22576,
												22579,
												22578,
												22572,
												22574,
												22571,
												22573,
												22580,
												22575
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												22581
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 73947,
											"character": 27
										}
									]
								},
								{
									"id": 2285,
									"name": "ISvgMeasurer",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the svg measurer interface."
									},
									"children": [
										{
											"id": 2286,
											"name": "begin",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2287,
													"name": "begin",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Begin the measure and init the svg element."
													},
													"parameters": [
														{
															"id": 2288,
															"name": "svgTextElement",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The svg text element.\n"
															},
															"type": {
																"type": "reference",
																"name": "SVGTextElement"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 11832,
													"character": 13
												}
											]
										},
										{
											"id": 2289,
											"name": "end",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2290,
													"name": "end",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "End the measure."
													},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 11837,
													"character": 11
												}
											]
										},
										{
											"id": 2291,
											"name": "getBBox",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2292,
													"name": "getBBox",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Get BBox."
													},
													"type": {
														"type": "reference",
														"name": "Rect"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 11842,
													"character": 15
												}
											]
										},
										{
											"id": 2293,
											"name": "measureString",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 2294,
													"name": "measureString",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Measure string."
													},
													"parameters": [
														{
															"id": 2295,
															"name": "s",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The measure string."
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2296,
															"name": "fontSize",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2297,
															"name": "fontFamily",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2298,
															"name": "fontWeight",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 2299,
															"name": "fontStyle",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "Size"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IMeasurer.measureString",
														"id": 2278
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 11816,
													"character": 21
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IMeasurer.measureString",
												"id": 2278
											}
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												2286,
												2289,
												2291,
												2293
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 11826,
											"character": 33
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IMeasurer",
											"id": 2277
										}
									]
								},
								{
									"id": 10124,
									"name": "ISymbol",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the symbol."
									},
									"children": [
										{
											"id": 10125,
											"name": "color",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets color value"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 36051,
													"character": 13
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"name": "ILinearGradientColor",
														"id": 3445
													},
													{
														"type": "reference",
														"name": "IRadialGradientColor",
														"id": 3450
													}
												]
											}
										},
										{
											"id": 10126,
											"name": "render",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 10127,
													"name": "render",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Draws the symbol."
													},
													"parameters": [
														{
															"id": 10128,
															"name": "render",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The render."
															},
															"type": {
																"type": "reference",
																"name": "IRender",
																"id": 22404
															}
														},
														{
															"id": 10129,
															"name": "rectangle",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The symbol rectangle."
															},
															"type": {
																"type": "reference",
																"name": "Rect"
															}
														},
														{
															"id": 10130,
															"name": "style",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The data point style.\n"
															},
															"type": {
																"type": "reference",
																"name": "IStyle",
																"id": 22568
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 36060,
													"character": 14
												}
											]
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												10125
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												10126
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 36047,
											"character": 28
										}
									]
								},
								{
									"id": 6367,
									"name": "ISymbolProvider",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the symbol provider."
									},
									"children": [
										{
											"id": 6368,
											"name": "getSymbol",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 6369,
													"name": "getSymbol",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the symbol name.",
														"returns": "The symbol.\n"
													},
													"parameters": [
														{
															"id": 6370,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 25557,
													"character": 17
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												6368
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 25551,
											"character": 36
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumerations",
									"kind": 4,
									"children": [
										3431
									]
								},
								{
									"title": "Classes",
									"kind": 128,
									"children": [
										6343,
										6351
									]
								},
								{
									"title": "Interfaces",
									"kind": 256,
									"children": [
										10047,
										8152,
										10950,
										10959,
										8158,
										10971,
										2264,
										8347,
										8357,
										8383,
										10978,
										10067,
										3435,
										3438,
										10072,
										3441,
										8227,
										11003,
										9269,
										10083,
										11009,
										10088,
										8341,
										10987,
										11019,
										9221,
										9231,
										10093,
										11056,
										11026,
										11065,
										11080,
										11088,
										3445,
										2277,
										11033,
										9512,
										9522,
										9544,
										11039,
										9276,
										11049,
										9285,
										6359,
										3450,
										2095,
										9306,
										10137,
										10115,
										22568,
										2285,
										10124,
										6367
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 11510,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 11616,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 11659,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 11779,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 11800,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 11820,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 11846,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 12011,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 13107,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 14090,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 15004,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 15021,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 15576,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 15595,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 15611,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 15627,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 16505,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 16554,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 16646,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 16741,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 16793,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 16811,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 16841,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 16883,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 16940,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 17033,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 17056,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 17075,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 17094,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 17109,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 17128,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 17160,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 17283,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 17363,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 17418,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 17461,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 17493,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 17536,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 17568,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 17611,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 17643,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 17682,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 17714,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 17756,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 17772,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 17800,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 17818,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 17912,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 18043,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 18187,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 18220,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 18540,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 18616,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 18781,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 18868,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 18955,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 19030,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 19105,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 19180,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 19255,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 19330,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 19387,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 19436,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 19472,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 19503,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 19526,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 19543,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 19605,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 19721,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 19844,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 19882,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 19978,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 20103,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 20215,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 20394,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 20522,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 20564,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 20616,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 20667,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 20683,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 20704,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 20724,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 20990,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 21078,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 21129,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 21319,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 21358,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 21390,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 21430,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 21462,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 21603,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 21642,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 21674,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 21713,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 21745,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 21784,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 21816,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 21941,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 22079,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 22126,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 22168,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 22208,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 22240,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 22272,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 22292,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 22405,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 22444,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 22485,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 22571,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 22610,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 22651,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 22831,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 22890,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 22922,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 22967,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 23052,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 23089,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 23137,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 23238,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 23366,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 23521,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 23681,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 23830,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 23899,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 24037,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 24209,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 24459,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 24614,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 24809,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 24896,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 25057,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 25215,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 25240,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 25307,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 25332,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 25357,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 25453,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 25484,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 25515,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 25545,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 25562,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 25664,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 25727,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 25755,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 25772,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 25846,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 25981,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 26146,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 26213,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 26427,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 26527,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 26632,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 26665,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 26713,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 26787,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 26824,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 26936,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 27220,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 27366,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 27404,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 27436,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 27680,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 27757,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 27778,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 27838,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 27984,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 28119,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 28168,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 28221,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 28297,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 28349,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 28468,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 28612,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 28677,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 28783,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 28992,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 29256,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 29478,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 29701,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 29882,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 30179,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 30242,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 30315,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 30405,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 30580,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 30649,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 30853,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 30875,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 30897,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 30912,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 30927,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 30986,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 31059,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 31082,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 31098,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 31139,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 31190,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 31247,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 31309,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 31399,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 31445,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 31481,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 31504,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 31519,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 31534,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 31565,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 31592,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 31748,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 31912,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 32067,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 32135,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 32169,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 32198,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 32224,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 32427,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 32476,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 32525,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 32657,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 32751,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 32944,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 33070,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 33179,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 33292,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 33417,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 33549,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 33691,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 33766,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 33841,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 33858,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 33889,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 33930,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 33945,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 33964,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 34019,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 34054,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 34122,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 34210,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 34265,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 34441,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 34611,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 34680,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 34766,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 34838,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 34853,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 34868,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 34887,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 34985,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 35023,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 35061,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 35205,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 35245,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 35281,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 35387,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 35429,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 35533,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 35687,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 35790,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 35807,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 35826,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 35858,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 35876,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 35893,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 35921,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 35940,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 35958,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 36014,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 36041,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 36065,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 36096,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 36113,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 36259,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 36351,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 38143,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 38194,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 38548,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 38575,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 38733,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 38892,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 38909,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 38948,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 39000,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 39069,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 39108,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 39176,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 39215,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 39254,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 39270,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 39286,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 39314,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 39330,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 39358,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 39374,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 39390,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 39409,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 39538,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 39554,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 39573,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 39607,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 39622,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 39633,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 39652,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 39672,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 39683,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 39710,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 39725,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 39749,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 39768,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 39795,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 39810,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 39825,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 39869,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 39888,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 50400,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 50446,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 50490,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 51313,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 51359,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 51403,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 51560,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 51606,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 51650,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 51941,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 51987,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 52030,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 53510,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 53895,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 53941,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 53984,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 54044,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 55191,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 55286,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 55300,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 55314,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 55330,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 55344,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 55358,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 55374,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 55386,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 55455,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 55476,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 55491,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 55512,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 55526,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 55542,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 55586,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 55794,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 55840,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 55890,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 57965,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 58011,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 58060,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 59677,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 59725,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 62908,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 63083,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 63264,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 63449,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 63599,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 63804,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 63842,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 63920,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 64038,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 64195,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 64238,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 64323,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 64355,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 64392,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 64427,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 64470,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 64600,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 64635,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 64689,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 64819,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 64844,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 64879,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 64923,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 65053,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 65088,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 65142,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 65272,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 65307,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 65361,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 65491,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 65535,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 65576,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 65761,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 65956,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 66074,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 66151,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 66348,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 66408,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 66573,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 66775,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 66988,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 67144,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 67191,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 67260,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 67297,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 67345,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 67410,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 67533,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 67757,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 67935,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 67968,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 68009,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 68322,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 68373,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 68635,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 68774,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 68911,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 68952,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 69169,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 69278,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 69431,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 69540,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 70488,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 70750,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 70804,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 70858,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 70915,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 70985,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 71138,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 71214,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 73559,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 73941,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 96209,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 96239,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 101723,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 102055,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 102263,
									"character": 19
								}
							]
						},
						{
							"id": 11095,
							"name": "options",
							"kind": 2,
							"kindString": "Module",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 13425,
									"name": "IAnimationOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the animation option."
									},
									"children": [
										{
											"id": 13427,
											"name": "duration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the animation duration in milliseconds."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47898,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13428,
											"name": "easing",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the topWidth."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47902,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "AnimationEasing",
												"id": 1565
											}
										},
										{
											"id": 13426,
											"name": "mode",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the mode."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47894,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "AnimationMode",
												"id": 1598
											}
										},
										{
											"id": 13430,
											"name": "staggering",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets staggering."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47910,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 13429,
											"name": "startDelay",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets time in milliseconds before the animation should start."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47906,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13433,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13434,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13431,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13432,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13427,
												13428,
												13426,
												13430,
												13429
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13433,
												13431
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 47890,
											"character": 37
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "IHoverAnimationOption",
											"id": 13639
										}
									]
								},
								{
									"id": 14498,
									"name": "IAnnotationOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the annotation overlay option."
									},
									"children": [
										{
											"id": 14506,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48942,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1757
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 13755
											}
										},
										{
											"id": 14501,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the label."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50931,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 14499,
											"name": "offset",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the offset."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50923,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 14502,
											"name": "placement",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the placement."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50935,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "Placement",
												"id": 1806
											}
										},
										{
											"id": 14504,
											"name": "pointPath",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the pointPath."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50943,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 14503,
											"name": "position",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the placement."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50939,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "AnnotationPosition"
											}
										},
										{
											"id": 14507,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48946,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 13891
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 13756
											}
										},
										{
											"id": 14500,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50927,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IOverlayStyleOption",
												"id": 14512
											}
										},
										{
											"id": 14505,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48938,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 13754
											}
										},
										{
											"id": 14510,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 14511,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 14508,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 14509,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												14506,
												14501,
												14499,
												14502,
												14504,
												14503,
												14507,
												14500,
												14505
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												14510,
												14508
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 50919,
											"character": 45
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOverlayOption",
											"id": 13753
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "IEllipseOverlayOption",
											"id": 14616
										},
										{
											"type": "reference",
											"name": "IImageOverlayOption",
											"id": 14707
										},
										{
											"type": "reference",
											"name": "ILineOverlayOption",
											"id": 14827
										},
										{
											"type": "reference",
											"name": "IRectangleOverlayOption",
											"id": 15041
										},
										{
											"type": "reference",
											"name": "ITextOverlayOption",
											"id": 15317
										}
									]
								},
								{
									"id": 13435,
									"name": "IAxisOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the option of the axis."
									},
									"children": [
										{
											"id": 13467,
											"name": "axisLine",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets axisLine hidden or show"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48051,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 13444,
											"name": "format",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the format of axis labels."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47957,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13475,
											"name": "groupGrid",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the group gridlines of the axis."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48083,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "TickMark",
												"id": 1871
											}
										},
										{
											"id": 13476,
											"name": "groupGridStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the group gridlines style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48087,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "ILineStyleOption",
												"id": 13739
											}
										},
										{
											"id": 13470,
											"name": "height",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the percentage of plot in view on the axis, value is 0-1."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48063,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 13932
											}
										},
										{
											"id": 13448,
											"name": "hoverStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the hover text style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47973,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 13920
											}
										},
										{
											"id": 13466,
											"name": "labelAngle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the rotation angle of the axis labels.",
												"text": "The angle is measured in degrees with valid values ranging from -90 to 90.\n"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48047,
													"character": 18
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										},
										{
											"id": 13449,
											"name": "labelStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the axis label style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47977,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "ILabelStyleOption",
												"id": 14182
											}
										},
										{
											"id": 13441,
											"name": "labels",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the axis labels is shown."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47945,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 13463,
											"name": "lineStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the axis line style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48033,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ILineStyleOption",
												"id": 13739
											}
										},
										{
											"id": 13468,
											"name": "logBase",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the log base."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48055,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13459,
											"name": "majorGrid",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the axis includes major grid lines."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48017,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 13461,
											"name": "majorGridStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the major grid line style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48025,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "ILineStyleOption",
												"id": 13739
											}
										},
										{
											"id": 13455,
											"name": "majorTickSize",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the major size."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48001,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13457,
											"name": "majorTickStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the major tick style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48009,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "ILineStyleOption",
												"id": 13739
											}
										},
										{
											"id": 13453,
											"name": "majorTicks",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the localtion of the major axis tick marks."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47993,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "TickMark",
												"id": 1871
											}
										},
										{
											"id": 13451,
											"name": "majorUnit",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the number of units between the major axis ticks."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47985,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13443,
											"name": "max",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the max value."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47953,
													"character": 11
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 13932
											}
										},
										{
											"id": 13472,
											"name": "maxHeight",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the max height."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48071,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 13932
											}
										},
										{
											"id": 13471,
											"name": "maxWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the max width."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48067,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 13932
											}
										},
										{
											"id": 13442,
											"name": "min",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the min value."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47949,
													"character": 11
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 13932
											}
										},
										{
											"id": 13460,
											"name": "minorGrid",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the axis includes minor grid lines."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48021,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 13462,
											"name": "minorGridStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the minor grid line style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48029,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "ILineStyleOption",
												"id": 13739
											}
										},
										{
											"id": 13456,
											"name": "minorTickSize",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the minor size."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48005,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13458,
											"name": "minorTickStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the minor tick style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48013,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "ILineStyleOption",
												"id": 13739
											}
										},
										{
											"id": 13454,
											"name": "minorTicks",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the localtion of the minor axis tick marks."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47997,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "TickMark",
												"id": 1871
											}
										},
										{
											"id": 13452,
											"name": "minorUnit",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the number of units between the minor axis ticks."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47989,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13464,
											"name": "origin",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the value at which an axis crosses the perpendicular axis."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48037,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13440,
											"name": "overlappingLabels",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the labels can be overlapped."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47941,
													"character": 25
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlappingLabels",
												"id": 1740
											}
										},
										{
											"id": 13437,
											"name": "plots",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the name of plots using the axis."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47929,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 13439,
											"name": "position",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the axis position."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47937,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "AxisPosition",
												"id": 1606
											}
										},
										{
											"id": 13465,
											"name": "reversed",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the axis is reversed (top to bottom or right to left)."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48041,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 13445,
											"name": "scale",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the axis scale."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47961,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueScaleOption",
												"id": 13939
											}
										},
										{
											"id": 13474,
											"name": "scrollbarVisible",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the scrollbar show or hide."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48079,
													"character": 24
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 13446,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the axis style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47965,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IStyleOption",
												"id": 13899
											}
										},
										{
											"id": 13447,
											"name": "textStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the axis text style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47969,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 13920
											}
										},
										{
											"id": 13438,
											"name": "title",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the axis title."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47933,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13450,
											"name": "titleStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the axis title style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47981,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "ILabelStyleOption",
												"id": 14182
											}
										},
										{
											"id": 13436,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the axis type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47925,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "AxisType",
												"id": 1610
											}
										},
										{
											"id": 13477,
											"name": "useActualMax",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the actual max value is used."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48091,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 13473,
											"name": "viewSize",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the width."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48075,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13469,
											"name": "width",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the width."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48059,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 13932
											}
										},
										{
											"id": 13481,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13482,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13479,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13480,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13467,
												13444,
												13475,
												13476,
												13470,
												13448,
												13466,
												13449,
												13441,
												13463,
												13468,
												13459,
												13461,
												13455,
												13457,
												13453,
												13451,
												13443,
												13472,
												13471,
												13442,
												13460,
												13462,
												13456,
												13458,
												13454,
												13452,
												13464,
												13440,
												13437,
												13439,
												13465,
												13445,
												13474,
												13446,
												13447,
												13438,
												13450,
												13436,
												13477,
												13473,
												13469
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13481,
												13479
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 47921,
											"character": 32
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									]
								},
								{
									"id": 13995,
									"name": "IBarOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the text style option."
									},
									"children": [
										{
											"id": 14001,
											"name": "borderRadius",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the border radius."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49894,
													"character": 20
												}
											],
											"type": {
												"type": "reference",
												"name": "IBorderRadiusOption",
												"id": 13483
											}
										},
										{
											"id": 13996,
											"name": "bottomWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the bottomWidth."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49864,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13998,
											"name": "neckHeight",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the neckHeight"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49873,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 14000,
											"name": "overlap",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the amount of overlap between multiple bar plots.",
												"text": "The overlap can be specified as a percentage (0-1) where 0 means no overlap,\nand 1 means completely overlapped. This property also supports\na negative value (-1 to 0) which creates a gap between clustered bars.\n"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49890,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13997,
											"name": "topWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the topWidth."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49868,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13999,
											"name": "width",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the width for bar clusters.",
												"text": "The width can be specified as percentage (0-1) of the available space.\nThe default value is 0.7 which means the bars take up 70% of the available\nspace and the other 30% is the gap. This property does not support negative values.\n"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49881,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 14004,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 14005,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 14002,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 14003,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												14001,
												13996,
												13998,
												14000,
												13997,
												13999
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												14004,
												14002
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 49860,
											"character": 31
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									]
								},
								{
									"id": 14261,
									"name": "IBinOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the bin option."
									},
									"children": [
										{
											"id": 14262,
											"name": "steps",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the steps."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50284,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										},
										{
											"id": 14265,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 14266,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 14263,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 14264,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												14262
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												14265,
												14263
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 50280,
											"character": 31
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									]
								},
								{
									"id": 14267,
									"name": "IBinTransformOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the bin transform option."
									},
									"children": [
										{
											"id": 14268,
											"name": "bin",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the bin."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50299,
													"character": 11
												}
											],
											"type": {
												"type": "reference",
												"name": "IBinOption",
												"id": 14261
											}
										},
										{
											"id": 14269,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50303,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 14270,
											"name": "outputAs",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the as."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50307,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 14273,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 14274,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 14271,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 14272,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												14268,
												14269,
												14270
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												14273,
												14271
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 50295,
											"character": 40
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									]
								},
								{
									"id": 13483,
									"name": "IBorderRadiusOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the border radius option."
									},
									"children": [
										{
											"id": 13484,
											"name": "horizontalRadius",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the horizontal radius."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48112,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"name": "IBorderRadiusValueOption",
												"id": 13490
											}
										},
										{
											"id": 13485,
											"name": "verticalRadius",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the vertical radius."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48117,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "IBorderRadiusValueOption",
												"id": 13490
											}
										},
										{
											"id": 13488,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13489,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13486,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13487,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13484,
												13485
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13488,
												13486
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 48108,
											"character": 40
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									]
								},
								{
									"id": 13490,
									"name": "IBorderRadiusValueOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the border radius."
									},
									"children": [
										{
											"id": 13494,
											"name": "bottomLeft",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the bottom left."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48144,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 13932
											}
										},
										{
											"id": 13493,
											"name": "bottomRight",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the bottom right."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48140,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 13932
											}
										},
										{
											"id": 13491,
											"name": "topLeft",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the top left."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48132,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 13932
											}
										},
										{
											"id": 13492,
											"name": "topRight",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the top right."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48136,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 13932
											}
										},
										{
											"id": 13497,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13498,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13495,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13496,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13494,
												13493,
												13491,
												13492
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13497,
												13495
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 48128,
											"character": 45
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									]
								},
								{
									"id": 13015,
									"name": "ICategoryEncodingOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the category encoding option."
									},
									"children": [
										{
											"id": 13017,
											"name": "excludeNulls",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the null category is shown."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 45849,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 13018,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field name."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48415,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IEncodingOption.field",
												"id": 13560
											}
										},
										{
											"id": 13019,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field label."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48419,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IEncodingOption.label",
												"id": 13561
											}
										},
										{
											"id": 13016,
											"name": "sort",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the sort option."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 45844,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "ISortEncodingOption",
												"id": 13077
											}
										},
										{
											"id": 13022,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13023,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13020,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13021,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13017,
												13018,
												13019,
												13016
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13022,
												13020
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 45840,
											"character": 44
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IEncodingOption",
											"id": 13559
										}
									]
								},
								{
									"id": 13024,
									"name": "IColorEncodingOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the color encoding option."
									},
									"children": [
										{
											"id": 13025,
											"name": "aggregate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the aggregate option."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 45864,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "Aggregate",
												"id": 1552
											}
										},
										{
											"id": 13027,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field name."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48415,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IEncodingOption.field",
												"id": 13560
											}
										},
										{
											"id": 13028,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field label."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48419,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IEncodingOption.label",
												"id": 13561
											}
										},
										{
											"id": 13026,
											"name": "sort",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the sort option."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 45868,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "OrderType",
												"id": 1733
											}
										},
										{
											"id": 13031,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13032,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13029,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13030,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13025,
												13027,
												13028,
												13026
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13031,
												13029
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 45860,
											"character": 41
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IEncodingOption",
											"id": 13559
										}
									]
								},
								{
									"id": 13388,
									"name": "IColorOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents color option."
									},
									"children": [
										{
											"id": 13389,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the color type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47803,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ColorOptionType",
												"id": 1617
											}
										},
										{
											"id": 13392,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13393,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13390,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13391,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13389
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13392,
												13390
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 47799,
											"character": 33
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "ICssColorOption",
											"id": 13401
										},
										{
											"type": "reference",
											"name": "ILinearGradientOption",
											"id": 13408
										},
										{
											"type": "reference",
											"name": "IRadialGradientOption",
											"id": 13416
										}
									]
								},
								{
									"id": 13394,
									"name": "IColorStopOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents color stop option."
									},
									"children": [
										{
											"id": 13395,
											"name": "color",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47818,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13396,
											"name": "stop",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stop."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47822,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13399,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13400,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13397,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13398,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13395,
												13396
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13399,
												13397
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 47814,
											"character": 37
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									]
								},
								{
									"id": 13499,
									"name": "IConfigOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the config option of the control."
									},
									"children": [
										{
											"id": 13505,
											"name": "backgroundColor",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the background color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48179,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 13388
											}
										},
										{
											"id": 13513,
											"name": "bar",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the bar option;"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48211,
													"character": 11
												}
											],
											"type": {
												"type": "reference",
												"name": "IBarOption",
												"id": 13995
											}
										},
										{
											"id": 13512,
											"name": "borderStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the border style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48207,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "ILineStyleOption",
												"id": 13739
											}
										},
										{
											"id": 13501,
											"name": "footer",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the chart footer option."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48163,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "IFooterOption",
												"id": 13566
											}
										},
										{
											"id": 13500,
											"name": "header",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the chart header option."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48159,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "IHeaderOption",
												"id": 13624
											}
										},
										{
											"id": 13506,
											"name": "legend",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the global legend config."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48183,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "IGlobalLegendOption",
												"id": 13581
											}
										},
										{
											"id": 13514,
											"name": "padding",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the padding;"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48215,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "IPaddingOption",
												"id": 13761
											}
										},
										{
											"id": 13502,
											"name": "palette",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the palette."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48167,
													"character": 15
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IColorOption",
													"id": 13388
												}
											}
										},
										{
											"id": 13504,
											"name": "plotAreaLayout",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the layout of the plot areas."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48175,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "IPlotAreaLayoutOption",
												"id": 13770
											}
										},
										{
											"id": 13503,
											"name": "plotAreas",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the plot area."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48171,
													"character": 17
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IPlotAreaOption",
													"id": 13777
												}
											}
										},
										{
											"id": 13508,
											"name": "selectedStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the selection style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48191,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ISelectionStyleOption",
												"id": 14195
											}
										},
										{
											"id": 13507,
											"name": "selectionMode",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the selection model."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48187,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "SelectionMode",
												"id": 1834
											}
										},
										{
											"id": 13510,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48199,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IStyleOption",
												"id": 13899
											}
										},
										{
											"id": 13511,
											"name": "textStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48203,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 13920
											}
										},
										{
											"id": 13509,
											"name": "unselectedStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the unselection style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48195,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "ISelectionStyleOption",
												"id": 14195
											}
										},
										{
											"id": 13517,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13518,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13515,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13516,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13505,
												13513,
												13512,
												13501,
												13500,
												13506,
												13514,
												13502,
												13504,
												13503,
												13508,
												13507,
												13510,
												13511,
												13509
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13517,
												13515
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 48155,
											"character": 34
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									]
								},
								{
									"id": 13033,
									"name": "IContentEncodingOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the content encoding option.",
										"text": "The example defines a custom data label in the plot option:\n\n     {\n         type: 'Bar',\n         encodings: {\n             values: [{\n                 field: 'Sales'\n             }],\n             category: {\n                 field: 'Country'\n             },\n             text: [{\n                 field: 'Downloads'\n             }, {\n                 field: 'Salesman'\n             }]\n         },\n         config: {\n             text: {\n                 template: '{xField.name} : {xField.value} \\n{valueField.name} : {valueField.value}'\n             }\n         }\n     }\n\nThe example defines a custom tooltip in the plot option:\n\n     {\n         type: 'Bar',\n         encodings: {\n             values: [{\n                 field: 'Sales'\n             }],\n             category: {\n                 field: 'Country'\n             },\n             tooltip: [{\n                 field: 'Downloads'\n             }, {\n                 field: 'Salesman'\n             }]\n         },\n         config: {\n             tooltip: {\n                 scope: 'Default',\n                 template: '{xField.name} : {xField.value} \\n{valueField.name} : {valueField.value}'\n             }\n         }\n     }\n\n"
									},
									"children": [
										{
											"id": 13034,
											"name": "aggregate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the aggregate option."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 45933,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "Aggregate",
												"id": 1552
											}
										},
										{
											"id": 13035,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field name."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48415,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IEncodingOption.field",
												"id": 13560
											}
										},
										{
											"id": 13036,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field label."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48419,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IEncodingOption.label",
												"id": 13561
											}
										},
										{
											"id": 13039,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13040,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13037,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13038,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13034,
												13035,
												13036
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13039,
												13037
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 45929,
											"character": 43
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IEncodingOption",
											"id": 13559
										}
									]
								},
								{
									"id": 13401,
									"name": "ICssColorOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the css color option."
									},
									"children": [
										{
											"id": 13402,
											"name": "color",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47837,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13403,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the color type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47803,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ColorOptionType",
												"id": 1617
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IColorOption.type",
												"id": 13389
											}
										},
										{
											"id": 13406,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13407,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13404,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13405,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13402,
												13403
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13406,
												13404
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 47833,
											"character": 36
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IColorOption",
											"id": 13388
										}
									]
								},
								{
									"id": 17674,
									"name": "ICumulativeMovingAverageTrendlineOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents CMA trend line overlay option."
									},
									"children": [
										{
											"id": 17680,
											"name": "detailKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail key."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58421,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailKey",
												"id": 17553
											}
										},
										{
											"id": 17679,
											"name": "detailLevel",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail level."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58417,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "DetailLevel",
												"id": 37469
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailLevel",
												"id": 17552
											}
										},
										{
											"id": 17684,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48942,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1757
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 13755
											}
										},
										{
											"id": 17678,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58413,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.field",
												"id": 17551
											}
										},
										{
											"id": 17677,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the label."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58409,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.label",
												"id": 17550
											}
										},
										{
											"id": 17675,
											"name": "period",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the period."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58515,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17685,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48946,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 13891
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 13756
											}
										},
										{
											"id": 17676,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the style"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58405,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 13527
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.style",
												"id": 17549
											}
										},
										{
											"id": 17683,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48938,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 13754
											}
										},
										{
											"id": 17688,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17689,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 17686,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17687,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17680,
												17679,
												17684,
												17678,
												17677,
												17675,
												17685,
												17676,
												17683
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17688,
												17686
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 58511,
											"character": 67
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "ITrendLineOverlayOption",
											"id": 17548
										}
									]
								},
								{
									"id": 13519,
									"name": "IDataOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the data option.",
										"text": "The example defines data in the option:\n\n     {\n         name: 'samples',\n         values: [ {\n             country: 'US',\n             sales: 300\n         }, {\n             country: 'CHINA',\n             sales: 500\n         }]\n     }\n\n"
									},
									"children": [
										{
											"id": 13522,
											"name": "dateFormats",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the date format list or whether no data format is acceptable.",
												"text": "When the string data is given in the values, the data format is used to verify whether it is a date value.\nIf it is false, no any data format is used to verity the date value.\nIf it is true, the following date formats are used to verify the date value.\n\n * r\n\nUser can give a date string format list to verify the date format.\n"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48260,
													"character": 19
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 13520,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the name of the data source."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48244,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13521,
											"name": "values",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the value list."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48248,
													"character": 14
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 13525,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13526,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13523,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13524,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13522,
												13520,
												13521
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13525,
												13523
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 48240,
											"character": 32
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									]
								},
								{
									"id": 13527,
									"name": "IDataPointStyleOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the style option."
									},
									"children": [
										{
											"id": 13531,
											"name": "backgroundColor",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the background color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48287,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 13388
											}
										},
										{
											"id": 13543,
											"name": "borderRadius",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the border radius."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48335,
													"character": 20
												}
											],
											"type": {
												"type": "reference",
												"name": "IBorderRadiusOption",
												"id": 13483
											}
										},
										{
											"id": 13530,
											"name": "fill",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the fill color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48283,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 13388
											}
										},
										{
											"id": 13528,
											"name": "opacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the opacity value of fill color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48275,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13532,
											"name": "stroke",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48291,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 13388
											}
										},
										{
											"id": 13534,
											"name": "strokeDasharray",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke dash array."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48299,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13529,
											"name": "strokeOpacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the opacity value of stroke color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48279,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13533,
											"name": "strokeWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke width."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48295,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13538,
											"name": "symbolFill",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the background color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48315,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 13388
											}
										},
										{
											"id": 13536,
											"name": "symbolOpacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the opacity value of symbol fill color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48307,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13535,
											"name": "symbolShape",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the shape of symbol."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48303,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13542,
											"name": "symbolSize",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke size."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48331,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13539,
											"name": "symbolStroke",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48319,
													"character": 20
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 13388
											}
										},
										{
											"id": 13541,
											"name": "symbolStrokeDasharray",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke dash array."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48327,
													"character": 29
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13537,
											"name": "symbolStrokeOpacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the opacity value of symbol stroke color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48311,
													"character": 27
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13540,
											"name": "symbolStrokeWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke width."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48323,
													"character": 25
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13544,
											"name": "clone",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13545,
													"name": "clone",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a copy of this object."
													},
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48340,
													"character": 13
												}
											]
										},
										{
											"id": 13548,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13549,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13546,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13547,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13531,
												13543,
												13530,
												13528,
												13532,
												13534,
												13529,
												13533,
												13538,
												13536,
												13535,
												13542,
												13539,
												13541,
												13537,
												13540
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13544,
												13548,
												13546
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 48271,
											"character": 42
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "IGroupStyleOption",
											"id": 13599
										},
										{
											"type": "reference",
											"name": "ISelectionStyleOption",
											"id": 14195
										}
									]
								},
								{
									"id": 13041,
									"name": "IDetailEncodingOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the detail encoding option.",
										"text": "The option provides the field where the values is grouped. Currently, only string or boolean field type can be supported in the option.\n\nThe example defines detail in the plot option:\n\n     {\n         type: 'Bar',\n         encodings: {\n             values: [{\n                 field: 'Sales',\n                 aggregate: 'Sum'\n             }],\n             category: {\n                 field: 'Country'\n             },\n             details: [{\n                 field: 'Company',\n                 group: 'Cluster'\n             }]\n         }\n     }\n\n"
									},
									"children": [
										{
											"id": 13044,
											"name": "excludeNulls",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the null group is shown."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 45978,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 13045,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field name."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48415,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IEncodingOption.field",
												"id": 13560
											}
										},
										{
											"id": 13043,
											"name": "group",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the group option."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 45974,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "Group",
												"id": 1702
											}
										},
										{
											"id": 13046,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field label."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48419,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IEncodingOption.label",
												"id": 13561
											}
										},
										{
											"id": 13042,
											"name": "sort",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the sort option."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 45970,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "ISortEncodingOption",
												"id": 13077
											}
										},
										{
											"id": 13049,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13050,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13047,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13048,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13044,
												13045,
												13043,
												13046,
												13042
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13049,
												13047
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 45966,
											"character": 42
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IEncodingOption",
											"id": 13559
										}
									]
								},
								{
									"id": 13550,
									"name": "IDvOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the option for dv."
									},
									"children": [
										{
											"id": 13552,
											"name": "config",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the config option."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48359,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "IConfigOption",
												"id": 13499
											}
										},
										{
											"id": 13553,
											"name": "data",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the data option."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48363,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataOption",
												"id": 13519
											}
										},
										{
											"id": 13551,
											"name": "plots",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the plot options."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48355,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IPlotOption",
													"id": 13868
												}
											}
										},
										{
											"id": 13554,
											"name": "transform",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the transform option."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48367,
													"character": 17
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IBinTransformOption",
													"id": 14267
												}
											}
										},
										{
											"id": 13557,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13558,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13555,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13556,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13552,
												13553,
												13551,
												13554
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13557,
												13555
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 48351,
											"character": 30
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									]
								},
								{
									"id": 14616,
									"name": "IEllipseOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the ellipse overlay option."
									},
									"children": [
										{
											"id": 14619,
											"name": "angle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the rotate angle."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 51140,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 14627,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48942,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1757
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 13755
											}
										},
										{
											"id": 14618,
											"name": "height",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the height."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 51136,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 14622,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the label."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50931,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.label",
												"id": 14501
											}
										},
										{
											"id": 14620,
											"name": "offset",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the offset."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50923,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.offset",
												"id": 14499
											}
										},
										{
											"id": 14623,
											"name": "placement",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the placement."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50935,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "Placement",
												"id": 1806
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.placement",
												"id": 14502
											}
										},
										{
											"id": 14625,
											"name": "pointPath",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the pointPath."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50943,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.pointPath",
												"id": 14504
											}
										},
										{
											"id": 14624,
											"name": "position",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the placement."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50939,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "AnnotationPosition"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.position",
												"id": 14503
											}
										},
										{
											"id": 14628,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48946,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 13891
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 13756
											}
										},
										{
											"id": 14621,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50927,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IOverlayStyleOption",
												"id": 14512
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.style",
												"id": 14500
											}
										},
										{
											"id": 14626,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48938,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 13754
											}
										},
										{
											"id": 14617,
											"name": "width",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the width."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 51132,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 14631,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 14632,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 14629,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 14630,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												14619,
												14627,
												14618,
												14622,
												14620,
												14623,
												14625,
												14624,
												14628,
												14621,
												14626,
												14617
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												14631,
												14629
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 51128,
											"character": 42
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IAnnotationOverlayOption",
											"id": 14498
										}
									]
								},
								{
									"id": 13559,
									"name": "IEncodingOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the encoding option inficating the binding field.",
										"text": "The option provides the field where the values is bound.\n\nThe example defines color encoding in the plot option:\n\n     {\n         type: 'Line',\n         encodings: {\n             values: [{\n                 field: 'Sales',\n                 aggregate: 'Sum'\n             }],\n             color: {\n                 field: 'Country'\n             }\n         }\n     }\n\nThe example defines size in the plot option:\n\n     {\n         type: 'Line',\n         encodings: {\n             values: [{\n                 field: 'Sales',\n                 aggregate: 'Sum'\n             }],\n             size: {\n                 field: 'Sales'\n             }\n         }\n     }\n\n"
									},
									"children": [
										{
											"id": 13560,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field name."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48415,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13561,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field label."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48419,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13564,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13565,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13562,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13563,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13560,
												13561
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13564,
												13562
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 48411,
											"character": 36
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "ICategoryEncodingOption",
											"id": 13015
										},
										{
											"type": "reference",
											"name": "IColorEncodingOption",
											"id": 13024
										},
										{
											"type": "reference",
											"name": "IContentEncodingOption",
											"id": 13033
										},
										{
											"type": "reference",
											"name": "IDetailEncodingOption",
											"id": 13041
										},
										{
											"type": "reference",
											"name": "ILayoutEncodingOption",
											"id": 13051
										},
										{
											"type": "reference",
											"name": "IShapeEncodingOption",
											"id": 13059
										},
										{
											"type": "reference",
											"name": "ISizeEncodingOption",
											"id": 13068
										},
										{
											"type": "reference",
											"name": "ISortEncodingOption",
											"id": 13077
										}
									]
								},
								{
									"id": 16009,
									"name": "IErrorBarOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the error bar overlay option."
									},
									"children": [
										{
											"id": 16019,
											"name": "detailKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail key."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 54300,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16018,
											"name": "detailLevel",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail level."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 54296,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "DetailLevel",
												"id": 37469
											}
										},
										{
											"id": 16014,
											"name": "direction",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Determines the display option of the error bar."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 54280,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ErrorBarDirection",
												"id": 15811
											}
										},
										{
											"id": 16021,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48942,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1757
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 13755
											}
										},
										{
											"id": 16012,
											"name": "endCap",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Whether an end cap is displayed on the error bar. Default value is true."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 54272,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 16013,
											"name": "errorType",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "The type of erro bar type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 54276,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ErrorBarErrorType",
												"id": 15815
											}
										},
										{
											"id": 16017,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 54292,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16011,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the label."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 54268,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16015,
											"name": "orientation",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Determines the orientation option of the error bar."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 54284,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "ErrorBarOrientation",
												"id": 15820
											}
										},
										{
											"id": 16022,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48946,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 13891
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 13756
											}
										},
										{
											"id": 16010,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 54264,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IOverlayStyleOption",
												"id": 14512
											}
										},
										{
											"id": 16020,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48938,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 13754
											}
										},
										{
											"id": 16016,
											"name": "value",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "The value used for number of standard deviations, or percentage or fixed value. This property may have no effect if errorType == StandardError."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 54288,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 16025,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16026,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 16023,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16024,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												16019,
												16018,
												16014,
												16021,
												16012,
												16013,
												16017,
												16011,
												16015,
												16022,
												16010,
												16020,
												16016
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												16025,
												16023
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 54260,
											"character": 36
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOverlayOption",
											"id": 13753
										}
									]
								},
								{
									"id": 17722,
									"name": "IExponentialMovingAverageTrendlineOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents EWMA trend line overlay option."
									},
									"children": [
										{
											"id": 17727,
											"name": "detailKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail key."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58421,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailKey",
												"id": 17553
											}
										},
										{
											"id": 17726,
											"name": "detailLevel",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail level."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58417,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "DetailLevel",
												"id": 37469
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailLevel",
												"id": 17552
											}
										},
										{
											"id": 17731,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48942,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1757
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 13755
											}
										},
										{
											"id": 17725,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58413,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.field",
												"id": 17551
											}
										},
										{
											"id": 17724,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the label."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58409,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.label",
												"id": 17550
											}
										},
										{
											"id": 17732,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48946,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 13891
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 13756
											}
										},
										{
											"id": 17723,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the style"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58405,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 13527
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.style",
												"id": 17549
											}
										},
										{
											"id": 17730,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48938,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 13754
											}
										},
										{
											"id": 17735,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17736,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 17733,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17734,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17727,
												17726,
												17731,
												17725,
												17724,
												17732,
												17723,
												17730
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17735,
												17733
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 58541,
											"character": 68
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "ITrendLineOverlayOption",
											"id": 17548
										}
									]
								},
								{
									"id": 17580,
									"name": "IExponentialTrendLineOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents exponential trend line overlay option."
									},
									"children": [
										{
											"id": 17586,
											"name": "detailKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail key."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58421,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailKey",
												"id": 17553
											}
										},
										{
											"id": 17585,
											"name": "detailLevel",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail level."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58417,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "DetailLevel",
												"id": 37469
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailLevel",
												"id": 17552
											}
										},
										{
											"id": 17590,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48942,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1757
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 13755
											}
										},
										{
											"id": 17584,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58413,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.field",
												"id": 17551
											}
										},
										{
											"id": 17583,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the label."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58409,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.label",
												"id": 17550
											}
										},
										{
											"id": 17591,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48946,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 13891
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 13756
											}
										},
										{
											"id": 17582,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the style"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58405,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 13527
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.style",
												"id": 17549
											}
										},
										{
											"id": 17589,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48938,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 13754
											}
										},
										{
											"id": 17594,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17595,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 17592,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17593,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17586,
												17585,
												17590,
												17584,
												17583,
												17591,
												17582,
												17589
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17594,
												17592
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 58454,
											"character": 55
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "ITrendLineOverlayOption",
											"id": 17548
										}
									]
								},
								{
									"id": 13166,
									"name": "IFieldsValueEncodingOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the field value encoding option."
									},
									"children": [
										{
											"id": 13169,
											"name": "aggregate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the aggregate option."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 46304,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "Aggregate",
												"id": 1552
											}
										},
										{
											"id": 13170,
											"name": "excludeNulls",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the null values is shown."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 46308,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 13167,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field name."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 46296,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13168,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field label."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 46300,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13171,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets option type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 46369,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IValueEncodingOption.type",
												"id": 13194
											}
										},
										{
											"id": 13174,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13175,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13172,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13173,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13169,
												13170,
												13167,
												13168,
												13171
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13174,
												13172
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 46292,
											"character": 47
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IValueEncodingOption",
											"id": 13193
										}
									]
								},
								{
									"id": 13566,
									"name": "IFooterOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents footer option."
									},
									"children": [
										{
											"id": 13575,
											"name": "borderStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the border."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48466,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "ILineStyleOption",
												"id": 13739
											}
										},
										{
											"id": 13571,
											"name": "hAlign",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the horizontal alignment."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48450,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "HAlign",
												"id": 1705
											}
										},
										{
											"id": 13568,
											"name": "height",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the footer height."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48438,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 13932
											}
										},
										{
											"id": 13569,
											"name": "maxHeight",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the max footer height."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48442,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 13932
											}
										},
										{
											"id": 13570,
											"name": "padding",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the footer padding."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48446,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "IPaddingOption",
												"id": 13761
											}
										},
										{
											"id": 13573,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the footer style"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48458,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IStyleOption",
												"id": 13899
											}
										},
										{
											"id": 13574,
											"name": "textStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the footer title style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48462,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 13920
											}
										},
										{
											"id": 13567,
											"name": "title",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the footer title."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48434,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13572,
											"name": "vAlign",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the vertical alignment."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48454,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "VAlign",
												"id": 1876
											}
										},
										{
											"id": 13576,
											"name": "width",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the width with pixel or \"Auto\"."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48470,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 13932
											}
										},
										{
											"id": 13579,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13580,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13577,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13578,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13575,
												13571,
												13568,
												13569,
												13570,
												13573,
												13574,
												13567,
												13572,
												13576
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13579,
												13577
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 48430,
											"character": 34
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									]
								},
								{
									"id": 13581,
									"name": "IGlobalLegendOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents global legend option."
									},
									"children": [
										{
											"id": 13588,
											"name": "borderStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the border."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48509,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "ILineStyleOption",
												"id": 13739
											}
										},
										{
											"id": 13591,
											"name": "filteredOutStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the filtered out text style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48521,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 13920
											}
										},
										{
											"id": 13590,
											"name": "hoverStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the hover text style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48517,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 13920
											}
										},
										{
											"id": 13593,
											"name": "itemPadding",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the item padding;"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48529,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "IPaddingOption",
												"id": 13761
											}
										},
										{
											"id": 13582,
											"name": "orientation",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the legend orientation."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48485,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "Orientation",
												"id": 1737
											}
										},
										{
											"id": 13592,
											"name": "padding",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the padding;"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48525,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "IPaddingOption",
												"id": 13761
											}
										},
										{
											"id": 13583,
											"name": "position",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the legend position."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48489,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "Position",
												"id": 1817
											}
										},
										{
											"id": 13586,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the style"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48501,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "ILegendStyleOption",
												"id": 13725
											}
										},
										{
											"id": 13587,
											"name": "textStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48505,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 13920
											}
										},
										{
											"id": 13584,
											"name": "titlePosition",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the legend title position."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48493,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "Position",
												"id": 1817
											}
										},
										{
											"id": 13589,
											"name": "titleStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets title style"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48513,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 13920
											}
										},
										{
											"id": 13585,
											"name": "wrapping",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the title is wrapped."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48497,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 13597,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13598,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13595,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13596,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13588,
												13591,
												13590,
												13593,
												13582,
												13592,
												13583,
												13586,
												13587,
												13584,
												13589,
												13585
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13597,
												13595
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 48481,
											"character": 40
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									]
								},
								{
									"id": 13599,
									"name": "IGroupStyleOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents group style option."
									},
									"children": [
										{
											"id": 13605,
											"name": "backgroundColor",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the background color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48287,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 13388
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.backgroundColor",
												"id": 13531
											}
										},
										{
											"id": 13617,
											"name": "borderRadius",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the border radius."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48335,
													"character": 20
												}
											],
											"type": {
												"type": "reference",
												"name": "IBorderRadiusOption",
												"id": 13483
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.borderRadius",
												"id": 13543
											}
										},
										{
											"id": 13604,
											"name": "fill",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the fill color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48283,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 13388
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.fill",
												"id": 13530
											}
										},
										{
											"id": 13601,
											"name": "group",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the group."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48553,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13602,
											"name": "opacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the opacity value of fill color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48275,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.opacity",
												"id": 13528
											}
										},
										{
											"id": 13606,
											"name": "stroke",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48291,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 13388
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.stroke",
												"id": 13532
											}
										},
										{
											"id": 13608,
											"name": "strokeDasharray",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke dash array."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48299,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.strokeDasharray",
												"id": 13534
											}
										},
										{
											"id": 13603,
											"name": "strokeOpacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the opacity value of stroke color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48279,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.strokeOpacity",
												"id": 13529
											}
										},
										{
											"id": 13607,
											"name": "strokeWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke width."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48295,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.strokeWidth",
												"id": 13533
											}
										},
										{
											"id": 13612,
											"name": "symbolFill",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the background color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48315,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 13388
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.symbolFill",
												"id": 13538
											}
										},
										{
											"id": 13610,
											"name": "symbolOpacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the opacity value of symbol fill color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48307,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.symbolOpacity",
												"id": 13536
											}
										},
										{
											"id": 13609,
											"name": "symbolShape",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the shape of symbol."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48303,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.symbolShape",
												"id": 13535
											}
										},
										{
											"id": 13616,
											"name": "symbolSize",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke size."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48331,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.symbolSize",
												"id": 13542
											}
										},
										{
											"id": 13613,
											"name": "symbolStroke",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48319,
													"character": 20
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 13388
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.symbolStroke",
												"id": 13539
											}
										},
										{
											"id": 13615,
											"name": "symbolStrokeDasharray",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke dash array."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48327,
													"character": 29
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.symbolStrokeDasharray",
												"id": 13541
											}
										},
										{
											"id": 13611,
											"name": "symbolStrokeOpacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the opacity value of symbol stroke color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48311,
													"character": 27
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.symbolStrokeOpacity",
												"id": 13537
											}
										},
										{
											"id": 13614,
											"name": "symbolStrokeWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke width."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48323,
													"character": 25
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.symbolStrokeWidth",
												"id": 13540
											}
										},
										{
											"id": 13600,
											"name": "valueField",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the value field name."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48549,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13618,
											"name": "clone",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13619,
													"name": "clone",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a copy of this object."
													},
													"type": {
														"type": "intrinsic",
														"name": "object"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IDataPointStyleOption.clone",
														"id": 13544
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48340,
													"character": 13
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.clone",
												"id": 13544
											}
										},
										{
											"id": 13622,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13623,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13620,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13621,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13605,
												13617,
												13604,
												13601,
												13602,
												13606,
												13608,
												13603,
												13607,
												13612,
												13610,
												13609,
												13616,
												13613,
												13615,
												13611,
												13614,
												13600
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13618,
												13622,
												13620
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 48545,
											"character": 38
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IDataPointStyleOption",
											"id": 13527
										}
									]
								},
								{
									"id": 13624,
									"name": "IHeaderOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents header option."
									},
									"children": [
										{
											"id": 13633,
											"name": "borderStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the border."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48600,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "ILineStyleOption",
												"id": 13739
											}
										},
										{
											"id": 13629,
											"name": "hAlign",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the horizontal alignment."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48584,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "HAlign",
												"id": 1705
											}
										},
										{
											"id": 13626,
											"name": "height",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the header height."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48572,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 13932
											}
										},
										{
											"id": 13627,
											"name": "maxHeight",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the max header height."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48576,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 13932
											}
										},
										{
											"id": 13628,
											"name": "padding",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the header padding."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48580,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "IPaddingOption",
												"id": 13761
											}
										},
										{
											"id": 13631,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the header style"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48592,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IStyleOption",
												"id": 13899
											}
										},
										{
											"id": 13632,
											"name": "textStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the header title style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48596,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 13920
											}
										},
										{
											"id": 13625,
											"name": "title",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the header title."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48568,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13630,
											"name": "vAlign",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the vertical alignment."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48588,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "VAlign",
												"id": 1876
											}
										},
										{
											"id": 13634,
											"name": "width",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the width with pixel or \"Auto\"."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48604,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 13932
											}
										},
										{
											"id": 13637,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13638,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13635,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13636,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13633,
												13629,
												13626,
												13627,
												13628,
												13631,
												13632,
												13625,
												13630,
												13634
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13637,
												13635
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 48564,
											"character": 34
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									]
								},
								{
									"id": 13639,
									"name": "IHoverAnimationOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the hover animation option."
									},
									"children": [
										{
											"id": 13642,
											"name": "duration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the animation duration in milliseconds."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47898,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnimationOption.duration",
												"id": 13427
											}
										},
										{
											"id": 13643,
											"name": "easing",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the topWidth."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47902,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "AnimationEasing",
												"id": 1565
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnimationOption.easing",
												"id": 13428
											}
										},
										{
											"id": 13641,
											"name": "mode",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the mode."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47894,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "AnimationMode",
												"id": 1598
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnimationOption.mode",
												"id": 13426
											}
										},
										{
											"id": 13640,
											"name": "scale",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the scale."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48619,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 13932
											}
										},
										{
											"id": 13645,
											"name": "staggering",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets staggering."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47910,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnimationOption.staggering",
												"id": 13430
											}
										},
										{
											"id": 13644,
											"name": "startDelay",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets time in milliseconds before the animation should start."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47906,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnimationOption.startDelay",
												"id": 13429
											}
										},
										{
											"id": 13648,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13649,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13646,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13647,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13642,
												13643,
												13641,
												13640,
												13645,
												13644
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13648,
												13646
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 48615,
											"character": 42
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IAnimationOption",
											"id": 13425
										}
									]
								},
								{
									"id": 14707,
									"name": "IImageOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the image overlay option."
									},
									"children": [
										{
											"id": 14710,
											"name": "angle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the rotate angle."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 51262,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 14719,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48942,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1757
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 13755
											}
										},
										{
											"id": 14709,
											"name": "height",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the height."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 51258,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 14714,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the label."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50931,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.label",
												"id": 14501
											}
										},
										{
											"id": 14712,
											"name": "offset",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the offset."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50923,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.offset",
												"id": 14499
											}
										},
										{
											"id": 14715,
											"name": "placement",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the placement."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50935,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "Placement",
												"id": 1806
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.placement",
												"id": 14502
											}
										},
										{
											"id": 14717,
											"name": "pointPath",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the pointPath."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50943,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.pointPath",
												"id": 14504
											}
										},
										{
											"id": 14716,
											"name": "position",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the placement."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50939,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "AnnotationPosition"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.position",
												"id": 14503
											}
										},
										{
											"id": 14720,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48946,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 13891
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 13756
											}
										},
										{
											"id": 14711,
											"name": "source",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the source url."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 51266,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 14713,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50927,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IOverlayStyleOption",
												"id": 14512
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.style",
												"id": 14500
											}
										},
										{
											"id": 14718,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48938,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 13754
											}
										},
										{
											"id": 14708,
											"name": "width",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the width."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 51254,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 14723,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 14724,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 14721,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 14722,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												14710,
												14719,
												14709,
												14714,
												14712,
												14715,
												14717,
												14716,
												14720,
												14711,
												14713,
												14718,
												14708
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												14723,
												14721
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 51250,
											"character": 40
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IAnnotationOverlayOption",
											"id": 14498
										}
									]
								},
								{
									"id": 14182,
									"name": "ILabelStyleOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the style option of the label."
									},
									"children": [
										{
											"id": 14184,
											"name": "color",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49622,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITextStyleOption.color",
												"id": 13921
											}
										},
										{
											"id": 14186,
											"name": "fontFamily",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the font family."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49630,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITextStyleOption.fontFamily",
												"id": 13923
											}
										},
										{
											"id": 14185,
											"name": "fontSize",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the font size."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49626,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITextStyleOption.fontSize",
												"id": 13922
											}
										},
										{
											"id": 14188,
											"name": "fontStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the font style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49638,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "FontStyle",
												"id": 1671
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITextStyleOption.fontStyle",
												"id": 13925
											}
										},
										{
											"id": 14187,
											"name": "fontWeight",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the font weight"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49634,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITextStyleOption.fontWeight",
												"id": 13924
											}
										},
										{
											"id": 14190,
											"name": "overflow",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text overflow."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49646,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "TextOverflow",
												"id": 1861
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITextStyleOption.overflow",
												"id": 13927
											}
										},
										{
											"id": 14183,
											"name": "padding",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the padding."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50133,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "IPaddingOption",
												"id": 13761
											}
										},
										{
											"id": 14189,
											"name": "textDecoration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text decoration."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49642,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextDecorationOption",
												"id": 13912
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITextStyleOption.textDecoration",
												"id": 13926
											}
										},
										{
											"id": 14193,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 14194,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 14191,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 14192,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												14184,
												14186,
												14185,
												14188,
												14187,
												14190,
												14183,
												14189
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												14193,
												14191
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 50129,
											"character": 38
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "ITextStyleOption",
											"id": 13920
										}
									]
								},
								{
									"id": 13051,
									"name": "ILayoutEncodingOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the layout encoding option."
									},
									"children": [
										{
											"id": 13053,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field name."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48415,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IEncodingOption.field",
												"id": 13560
											}
										},
										{
											"id": 13054,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field label."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48419,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IEncodingOption.label",
												"id": 13561
											}
										},
										{
											"id": 13052,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 45993,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13057,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13058,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13055,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13056,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13053,
												13054,
												13052
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13057,
												13055
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 45989,
											"character": 42
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IEncodingOption",
											"id": 13559
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "ITrellisLayoutEncodingOption",
											"id": 55791
										}
									]
								},
								{
									"id": 13650,
									"name": "ILegendGradientOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Legend gradient color option."
									},
									"children": [
										{
											"id": 13651,
											"name": "enabled",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether it is enabled."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48634,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 13653,
											"name": "max",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the max value."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48642,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13652,
											"name": "min",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the min value."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48638,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13655,
											"name": "palette",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the palette of gradient color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48650,
													"character": 15
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 13654,
											"name": "unit",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the unit."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48646,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13658,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13659,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13656,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13657,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13651,
												13653,
												13652,
												13655,
												13654
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13658,
												13656
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 48630,
											"character": 42
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									]
								},
								{
									"id": 13688,
									"name": "ILegendOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the legend option."
									},
									"children": [
										{
											"id": 13696,
											"name": "borderStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the border."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48766,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "ILineStyleOption",
												"id": 13739
											}
										},
										{
											"id": 13699,
											"name": "filteredOutStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the filtered out text style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48778,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 13920
											}
										},
										{
											"id": 13701,
											"name": "gradient",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the gradient of the legend."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48786,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "ILegendGradientOption",
												"id": 13650
											}
										},
										{
											"id": 13711,
											"name": "hAlign",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the hAlign of the legend."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48826,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "HAlign",
												"id": 1705
											}
										},
										{
											"id": 13705,
											"name": "height",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the height."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48802,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 13932
											}
										},
										{
											"id": 13698,
											"name": "hoverStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the hover text style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48774,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 13920
											}
										},
										{
											"id": 13703,
											"name": "itemPadding",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the item padding;"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48794,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "IPaddingOption",
												"id": 13761
											}
										},
										{
											"id": 13709,
											"name": "items",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets options to the items in legend."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48818,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "ILegendItemOption"
												}
											}
										},
										{
											"id": 13707,
											"name": "maxHeight",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the max height."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48810,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 13932
											}
										},
										{
											"id": 13706,
											"name": "maxWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the max width."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48806,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 13932
											}
										},
										{
											"id": 13690,
											"name": "orientation",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the legend orientation."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48742,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "Orientation",
												"id": 1737
											}
										},
										{
											"id": 13702,
											"name": "padding",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the padding;"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48790,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "IPaddingOption",
												"id": 13761
											}
										},
										{
											"id": 13691,
											"name": "position",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the legend position."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48746,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "Position",
												"id": 1817
											}
										},
										{
											"id": 13700,
											"name": "ranges",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the ranges of the legend item value."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48782,
													"character": 14
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "ILegendRangeOption",
													"id": 13718
												}
											}
										},
										{
											"id": 13708,
											"name": "sortOrder",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the sort order of the items in the legend."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48814,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "SortOrder",
												"id": 1851
											}
										},
										{
											"id": 13694,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the style"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48758,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "ILegendStyleOption",
												"id": 13725
											}
										},
										{
											"id": 13710,
											"name": "template",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the template of the legend."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48822,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13695,
											"name": "textStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48762,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 13920
											}
										},
										{
											"id": 13692,
											"name": "title",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the legend title."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48750,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13693,
											"name": "titlePosition",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the legend title position."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48754,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "Position",
												"id": 1817
											}
										},
										{
											"id": 13697,
											"name": "titleStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets title style"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48770,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 13920
											}
										},
										{
											"id": 13689,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the legend type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48738,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "LegendType",
												"id": 1711
											}
										},
										{
											"id": 13712,
											"name": "vAlign",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the vAlign of the legend."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48830,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "VAlign",
												"id": 1876
											}
										},
										{
											"id": 13704,
											"name": "width",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the width."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48798,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IValueOption",
												"id": 13932
											}
										},
										{
											"id": 13716,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13717,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13714,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13715,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13696,
												13699,
												13701,
												13711,
												13705,
												13698,
												13703,
												13709,
												13707,
												13706,
												13690,
												13702,
												13691,
												13700,
												13708,
												13694,
												13710,
												13695,
												13692,
												13693,
												13697,
												13689,
												13712,
												13704
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13716,
												13714
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 48734,
											"character": 34
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									]
								},
								{
									"id": 13718,
									"name": "ILegendRangeOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the legend range option."
									},
									"children": [
										{
											"id": 13719,
											"name": "title",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the title."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48849,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13720,
											"name": "to",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the value that upper edge of the range."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48853,
													"character": 10
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13723,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13724,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13721,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13722,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13719,
												13720
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13723,
												13721
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 48845,
											"character": 39
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									]
								},
								{
									"id": 13725,
									"name": "ILegendStyleOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the legend style option."
									},
									"children": [
										{
											"id": 13727,
											"name": "backgroundColor",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the background color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49556,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 13388
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IStyleOption.backgroundColor",
												"id": 13900
											}
										},
										{
											"id": 13734,
											"name": "fill",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the fill."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49584,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 13388
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IStyleOption.fill",
												"id": 13907
											}
										},
										{
											"id": 13726,
											"name": "iconColor",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the color of symbol."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48868,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 13388
											}
										},
										{
											"id": 13731,
											"name": "innerStroke",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the inner stroke color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49572,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 13388
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IStyleOption.innerStroke",
												"id": 13904
											}
										},
										{
											"id": 13733,
											"name": "innerStrokeDasharray",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the inner stroke dash array."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49580,
													"character": 28
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IStyleOption.innerStrokeDasharray",
												"id": 13906
											}
										},
										{
											"id": 13732,
											"name": "innerStrokeWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the inner stroke width."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49576,
													"character": 24
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IStyleOption.innerStrokeWidth",
												"id": 13905
											}
										},
										{
											"id": 13728,
											"name": "stroke",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49560,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 13388
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IStyleOption.stroke",
												"id": 13901
											}
										},
										{
											"id": 13730,
											"name": "strokeDasharray",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke dash array."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49568,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IStyleOption.strokeDasharray",
												"id": 13903
											}
										},
										{
											"id": 13729,
											"name": "strokeWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke width."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49564,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IStyleOption.strokeWidth",
												"id": 13902
											}
										},
										{
											"id": 13737,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13738,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13735,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13736,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13727,
												13734,
												13726,
												13731,
												13733,
												13732,
												13728,
												13730,
												13729
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13737,
												13735
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 48864,
											"character": 39
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IStyleOption",
											"id": 13899
										}
									]
								},
								{
									"id": 14827,
									"name": "ILineOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the line overlay option."
									},
									"children": [
										{
											"id": 14837,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48942,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1757
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 13755
											}
										},
										{
											"id": 14829,
											"name": "end",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the end."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 51513,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 14832,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the label."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50931,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.label",
												"id": 14501
											}
										},
										{
											"id": 14830,
											"name": "offset",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the offset."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50923,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.offset",
												"id": 14499
											}
										},
										{
											"id": 14833,
											"name": "placement",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the placement."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50935,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "Placement",
												"id": 1806
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.placement",
												"id": 14502
											}
										},
										{
											"id": 14835,
											"name": "pointPath",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the pointPath."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50943,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.pointPath",
												"id": 14504
											}
										},
										{
											"id": 14834,
											"name": "position",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the placement."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50939,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "AnnotationPosition"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.position",
												"id": 14503
											}
										},
										{
											"id": 14838,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48946,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 13891
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 13756
											}
										},
										{
											"id": 14828,
											"name": "start",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the start."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 51509,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 14831,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50927,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IOverlayStyleOption",
												"id": 14512
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.style",
												"id": 14500
											}
										},
										{
											"id": 14836,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48938,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 13754
											}
										},
										{
											"id": 14841,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 14842,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 14839,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 14840,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												14837,
												14829,
												14832,
												14830,
												14833,
												14835,
												14834,
												14838,
												14828,
												14831,
												14836
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												14841,
												14839
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 51505,
											"character": 39
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IAnnotationOverlayOption",
											"id": 14498
										}
									]
								},
								{
									"id": 13739,
									"name": "ILineStyleOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the line style option.",
										"text": "The example defines line style:\n\n     {\n         stroke: 'yellow',\n         strokeWidth: 2,\n         strokeDasharray: '3, 3'\n     }\n\n"
									},
									"children": [
										{
											"id": 13740,
											"name": "opacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke opacity."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48892,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13741,
											"name": "stroke",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48896,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 13388
											}
										},
										{
											"id": 13743,
											"name": "strokeDasharray",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke dash array."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48904,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13742,
											"name": "strokeWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke width."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48900,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13746,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13747,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13744,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13745,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13740,
												13741,
												13743,
												13742
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13746,
												13744
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 48888,
											"character": 37
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									]
								},
								{
									"id": 13408,
									"name": "ILinearGradientOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the linear gradient option."
									},
									"children": [
										{
											"id": 13409,
											"name": "angle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the gradient lines' angle of direction."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47852,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13410,
											"name": "colorStops",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the the color-stop list."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47856,
													"character": 18
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IColorStopOption",
													"id": 13394
												}
											}
										},
										{
											"id": 13411,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the color type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47803,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ColorOptionType",
												"id": 1617
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IColorOption.type",
												"id": 13389
											}
										},
										{
											"id": 13414,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13415,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13412,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13413,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13409,
												13410,
												13411
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13414,
												13412
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 47848,
											"character": 42
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IColorOption",
											"id": 13388
										}
									]
								},
								{
									"id": 17611,
									"name": "ILinearTrendLineOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents linear trend line overlay option."
									},
									"children": [
										{
											"id": 17617,
											"name": "detailKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail key."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58421,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailKey",
												"id": 17553
											}
										},
										{
											"id": 17616,
											"name": "detailLevel",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail level."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58417,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "DetailLevel",
												"id": 37469
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailLevel",
												"id": 17552
											}
										},
										{
											"id": 17621,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48942,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1757
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 13755
											}
										},
										{
											"id": 17615,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58413,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.field",
												"id": 17551
											}
										},
										{
											"id": 17614,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the label."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58409,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.label",
												"id": 17550
											}
										},
										{
											"id": 17622,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48946,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 13891
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 13756
											}
										},
										{
											"id": 17613,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the style"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58405,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 13527
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.style",
												"id": 17549
											}
										},
										{
											"id": 17620,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48938,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 13754
											}
										},
										{
											"id": 17625,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17626,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 17623,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17624,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17617,
												17616,
												17621,
												17615,
												17614,
												17622,
												17613,
												17620
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17625,
												17623
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 58472,
											"character": 50
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "ITrendLineOverlayOption",
											"id": 17548
										}
									]
								},
								{
									"id": 17627,
									"name": "ILogarithmicTrendlineOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents logarithmic trend line overlay option."
									},
									"children": [
										{
											"id": 17632,
											"name": "detailKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail key."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58421,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailKey",
												"id": 17553
											}
										},
										{
											"id": 17631,
											"name": "detailLevel",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail level."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58417,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "DetailLevel",
												"id": 37469
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailLevel",
												"id": 17552
											}
										},
										{
											"id": 17636,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48942,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1757
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 13755
											}
										},
										{
											"id": 17630,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58413,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.field",
												"id": 17551
											}
										},
										{
											"id": 17629,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the label."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58409,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.label",
												"id": 17550
											}
										},
										{
											"id": 17637,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48946,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 13891
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 13756
											}
										},
										{
											"id": 17628,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the style"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58405,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 13527
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.style",
												"id": 17549
											}
										},
										{
											"id": 17635,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48938,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 13754
											}
										},
										{
											"id": 17640,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17641,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 17638,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17639,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17632,
												17631,
												17636,
												17630,
												17629,
												17637,
												17628,
												17635
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17640,
												17638
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 58483,
											"character": 55
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "ITrendLineOverlayOption",
											"id": 17548
										}
									]
								},
								{
									"id": 17706,
									"name": "IMovingAnnualTotalTrendlineOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents MovingAnnualTotal trend line overlay option."
									},
									"children": [
										{
											"id": 17712,
											"name": "detailKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail key."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58421,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailKey",
												"id": 17553
											}
										},
										{
											"id": 17711,
											"name": "detailLevel",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail level."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58417,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "DetailLevel",
												"id": 37469
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailLevel",
												"id": 17552
											}
										},
										{
											"id": 17716,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48942,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1757
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 13755
											}
										},
										{
											"id": 17710,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58413,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.field",
												"id": 17551
											}
										},
										{
											"id": 17709,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the label."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58409,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.label",
												"id": 17550
											}
										},
										{
											"id": 17707,
											"name": "period",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the period."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58535,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17717,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48946,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 13891
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 13756
											}
										},
										{
											"id": 17708,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the style"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58405,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 13527
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.style",
												"id": 17549
											}
										},
										{
											"id": 17715,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48938,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 13754
											}
										},
										{
											"id": 17720,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17721,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 17718,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17719,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17712,
												17711,
												17716,
												17710,
												17709,
												17707,
												17717,
												17708,
												17715
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17720,
												17718
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 58531,
											"character": 61
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "ITrendLineOverlayOption",
											"id": 17548
										}
									]
								},
								{
									"id": 13748,
									"name": "IOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents overlay option."
									},
									"children": [
										{
											"id": 13751,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13752,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											]
										},
										{
											"id": 13749,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13750,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13751,
												13749
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 48915,
											"character": 28
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "IRangeFieldOption",
											"id": 13176
										},
										{
											"type": "reference",
											"name": "IValueEncodingOption",
											"id": 13193
										},
										{
											"type": "reference",
											"name": "IColorOption",
											"id": 13388
										},
										{
											"type": "reference",
											"name": "IColorStopOption",
											"id": 13394
										},
										{
											"type": "reference",
											"name": "IAnimationOption",
											"id": 13425
										},
										{
											"type": "reference",
											"name": "IAxisOption",
											"id": 13435
										},
										{
											"type": "reference",
											"name": "IBorderRadiusOption",
											"id": 13483
										},
										{
											"type": "reference",
											"name": "IBorderRadiusValueOption",
											"id": 13490
										},
										{
											"type": "reference",
											"name": "IConfigOption",
											"id": 13499
										},
										{
											"type": "reference",
											"name": "IDataOption",
											"id": 13519
										},
										{
											"type": "reference",
											"name": "IDataPointStyleOption",
											"id": 13527
										},
										{
											"type": "reference",
											"name": "IDvOption",
											"id": 13550
										},
										{
											"type": "reference",
											"name": "IEncodingOption",
											"id": 13559
										},
										{
											"type": "reference",
											"name": "IFooterOption",
											"id": 13566
										},
										{
											"type": "reference",
											"name": "IGlobalLegendOption",
											"id": 13581
										},
										{
											"type": "reference",
											"name": "IHeaderOption",
											"id": 13624
										},
										{
											"type": "reference",
											"name": "ILegendGradientOption",
											"id": 13650
										},
										{
											"type": "reference",
											"name": "ILegendOption",
											"id": 13688
										},
										{
											"type": "reference",
											"name": "ILegendRangeOption",
											"id": 13718
										},
										{
											"type": "reference",
											"name": "ILineStyleOption",
											"id": 13739
										},
										{
											"type": "reference",
											"name": "IOverlayOption",
											"id": 13753
										},
										{
											"type": "reference",
											"name": "IPaddingOption",
											"id": 13761
										},
										{
											"type": "reference",
											"name": "IPlotAreaLayoutOption",
											"id": 13770
										},
										{
											"type": "reference",
											"name": "IPlotAreaOption",
											"id": 13777
										},
										{
											"type": "reference",
											"name": "IPlotConfigOption",
											"id": 13792
										},
										{
											"type": "reference",
											"name": "IPlotConfigTextOption",
											"id": 13825
										},
										{
											"type": "reference",
											"name": "IPlotConfigTooltipOption",
											"id": 13843
										},
										{
											"type": "reference",
											"name": "IPlotEncodingsOption",
											"id": 13854
										},
										{
											"type": "reference",
											"name": "IPlotOption",
											"id": 13868
										},
										{
											"type": "reference",
											"name": "IRuleActionPropertyOption",
											"id": 13877
										},
										{
											"type": "reference",
											"name": "IRuleActionOption",
											"id": 13884
										},
										{
											"type": "reference",
											"name": "IRuleOption",
											"id": 13891
										},
										{
											"type": "reference",
											"name": "IStyleOption",
											"id": 13899
										},
										{
											"type": "reference",
											"name": "ITextDecorationOption",
											"id": 13912
										},
										{
											"type": "reference",
											"name": "ITextStyleOption",
											"id": 13920
										},
										{
											"type": "reference",
											"name": "IValueOption",
											"id": 13932
										},
										{
											"type": "reference",
											"name": "IValueScaleOption",
											"id": 13939
										},
										{
											"type": "reference",
											"name": "IBarOption",
											"id": 13995
										},
										{
											"type": "reference",
											"name": "ITextPlotConfigOption",
											"id": 14043
										},
										{
											"type": "reference",
											"name": "IBinOption",
											"id": 14261
										},
										{
											"type": "reference",
											"name": "IBinTransformOption",
											"id": 14267
										},
										{
											"type": "reference",
											"name": "IOverlayStyleOption",
											"id": 14512
										},
										{
											"type": "reference",
											"name": "IStockFieldOption",
											"id": 48585
										},
										{
											"type": "reference",
											"name": "IMapConfigOption",
											"id": 52911
										},
										{
											"type": "reference",
											"name": "IPlotConfigTrellisOption",
											"id": 55781
										}
									]
								},
								{
									"id": 16679,
									"name": "IOverlayLabelOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents overlay option."
									},
									"children": [
										{
											"id": 16681,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 56261,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayLabelDisplay",
												"id": 1745
											}
										},
										{
											"id": 16682,
											"name": "position",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the position type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 56265,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayLabelPosition",
												"id": 1750
											}
										},
										{
											"id": 16680,
											"name": "text",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text of label."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 56257,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16683,
											"name": "textStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text style of overlay datalabel."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 56269,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 13920
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												16681,
												16682,
												16680,
												16683
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 56253,
											"character": 40
										}
									]
								},
								{
									"id": 13753,
									"name": "IOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents overlay option."
									},
									"children": [
										{
											"id": 13755,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48942,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1757
											}
										},
										{
											"id": 13756,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48946,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 13891
												}
											}
										},
										{
											"id": 13754,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48938,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13759,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13760,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13757,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13758,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13755,
												13756,
												13754
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13759,
												13757
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 48934,
											"character": 35
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "IAnnotationOverlayOption",
											"id": 14498
										},
										{
											"type": "reference",
											"name": "IErrorBarOption",
											"id": 16009
										},
										{
											"type": "reference",
											"name": "IReferenceBandOverlayOption",
											"id": 16507
										},
										{
											"type": "reference",
											"name": "IReferenceLineOverlayOption",
											"id": 16687
										},
										{
											"type": "reference",
											"name": "ITrendLineOverlayOption",
											"id": 17548
										}
									]
								},
								{
									"id": 14512,
									"name": "IOverlayStyleOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the style option for overlay."
									},
									"children": [
										{
											"id": 14516,
											"name": "backgroundColor",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the background color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50969,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 13388
											}
										},
										{
											"id": 14515,
											"name": "fill",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the fill color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50965,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 13388
											}
										},
										{
											"id": 14513,
											"name": "opacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the opacity value of fill color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50957,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 14517,
											"name": "stroke",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50973,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 13388
											}
										},
										{
											"id": 14519,
											"name": "strokeDasharray",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke dash array."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50981,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 14514,
											"name": "strokeOpacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the opacity value of stroke color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50961,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 14518,
											"name": "strokeWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke width."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50977,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 14522,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 14523,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 14520,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 14521,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												14516,
												14515,
												14513,
												14517,
												14519,
												14514,
												14518
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												14522,
												14520
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 50953,
											"character": 40
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									]
								},
								{
									"id": 13761,
									"name": "IPaddingOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the padding option."
									},
									"children": [
										{
											"id": 13765,
											"name": "bottom",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the bottom."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48973,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13762,
											"name": "left",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the left."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48961,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13764,
											"name": "right",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the right."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48969,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13763,
											"name": "top",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the top."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48965,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13768,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13769,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13766,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13767,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13765,
												13762,
												13764,
												13763
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13768,
												13766
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 48957,
											"character": 35
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									]
								},
								{
									"id": 13770,
									"name": "IPlotAreaLayoutOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the Layout of plot area columns and rows."
									},
									"children": [
										{
											"id": 13771,
											"name": "columnWidths",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the array of column widths."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48988,
													"character": 20
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IValueOption",
													"id": 13932
												}
											}
										},
										{
											"id": 13772,
											"name": "rowHeights",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the array of row heights."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48992,
													"character": 18
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IValueOption",
													"id": 13932
												}
											}
										},
										{
											"id": 13775,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13776,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13773,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13774,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13771,
												13772
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13775,
												13773
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 48984,
											"character": 42
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									]
								},
								{
									"id": 13777,
									"name": "IPlotAreaOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents plot area.",
										"text": "The plot area may contain several plots.\n"
									},
									"children": [
										{
											"id": 13780,
											"name": "axes",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the axis options."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49017,
													"character": 12
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IAxisOption",
													"id": 13435
												}
											}
										},
										{
											"id": 13784,
											"name": "backgroundColor",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the background color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49033,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 13388
											}
										},
										{
											"id": 13783,
											"name": "borderStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the border style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49029,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "ILineStyleOption",
												"id": 13739
											}
										},
										{
											"id": 13779,
											"name": "column",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the column index of plot area."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49013,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13781,
											"name": "legend",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the legend config of all legends in the plot area."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49021,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "IGlobalLegendOption",
												"id": 13581
											}
										},
										{
											"id": 13782,
											"name": "legends",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the legend config."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49025,
													"character": 15
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "ILegendOption",
													"id": 13688
												}
											}
										},
										{
											"id": 13785,
											"name": "padding",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the padding."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49037,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "IPaddingOption",
												"id": 13761
											}
										},
										{
											"id": 13778,
											"name": "row",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the row index of plot area."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49009,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13786,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the element style in the plot area."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49041,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IStyleOption",
												"id": 13899
											}
										},
										{
											"id": 13787,
											"name": "textStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the element text style in the plot area."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49045,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 13920
											}
										},
										{
											"id": 13790,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13791,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13788,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13789,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13780,
												13784,
												13783,
												13779,
												13781,
												13782,
												13785,
												13778,
												13786,
												13787
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13790,
												13788
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 49005,
											"character": 36
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									]
								},
								{
									"id": 13792,
									"name": "IPlotConfigOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the config option of the plot."
									},
									"children": [
										{
											"id": 13793,
											"name": "axisMode",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets a value indicating axis mode."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49060,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "AxisMode",
												"id": 1602
											}
										},
										{
											"id": 13804,
											"name": "barLines",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the bar lines is shown."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49106,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 13796,
											"name": "clippingMode",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the clipping mode"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49072,
													"character": 20
												}
											],
											"type": {
												"type": "reference",
												"name": "ClippingMode",
												"id": 1613
											}
										},
										{
											"id": 13820,
											"name": "groupStyles",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the group styles."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49170,
													"character": 19
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IGroupStyleOption",
													"id": 13599
												}
											}
										},
										{
											"id": 13817,
											"name": "hAlign",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the horizontal alignment."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49158,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "HAlign",
												"id": 1705
											}
										},
										{
											"id": 13812,
											"name": "hoverAnimation",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the hover animation config."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49138,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "IHoverAnimationOption",
												"id": 13639
											}
										},
										{
											"id": 13807,
											"name": "hoverStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the hover style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49118,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 13527
											}
										},
										{
											"id": 13800,
											"name": "innerRadius",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the inner radius(for radial plots)."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49088,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13798,
											"name": "lineAspect",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the type of the line of the line and area chart."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49080,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "LineAspect",
												"id": 1716
											}
										},
										{
											"id": 13810,
											"name": "loadAnimation",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the loading animation config."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49130,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "IAnimationOption",
												"id": 13425
											}
										},
										{
											"id": 13799,
											"name": "offset",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the offset of data point."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49084,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13813,
											"name": "overlays",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlays options"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49142,
													"character": 16
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IOverlayOption",
													"id": 13753
												}
											}
										},
										{
											"id": 13819,
											"name": "palette",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the palette."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49166,
													"character": 15
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IColorOption",
													"id": 13388
												}
											}
										},
										{
											"id": 13803,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49102,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 13891
												}
											}
										},
										{
											"id": 13815,
											"name": "selectedStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the selection style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49150,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ISelectionStyleOption",
												"id": 14195
											}
										},
										{
											"id": 13797,
											"name": "showNulls",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets a value indicating how to show the null or empty value."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49076,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ShowNulls",
												"id": 1847
											}
										},
										{
											"id": 13802,
											"name": "startAngle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the starting angle of the plot."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49098,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13805,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the element style in the plot."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49110,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 13527
											}
										},
										{
											"id": 13795,
											"name": "swapAxes",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets a value indicating whether the axes is swapped."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49068,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 13801,
											"name": "sweep",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the sweep of plot for radial plots.",
												"text": "The valid value should be between 0 to 360.\n"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49094,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13794,
											"name": "symbols",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets a value indicating whether to show data point symbols."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49064,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 13808,
											"name": "text",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text config."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49122,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "IPlotConfigTextOption",
												"id": 13825
											}
										},
										{
											"id": 13814,
											"name": "textConfig",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the config for the text plot."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49146,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextPlotConfigOption",
												"id": 14043
											}
										},
										{
											"id": 13806,
											"name": "textStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets text style in the plot."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49114,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 13920
											}
										},
										{
											"id": 13809,
											"name": "tooltip",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the tooltip config."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49126,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "IPlotConfigTooltipOption",
												"id": 13843
											}
										},
										{
											"id": 13816,
											"name": "unselectedStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the unselection style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49154,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "ISelectionStyleOption",
												"id": 14195
											}
										},
										{
											"id": 13811,
											"name": "updateAnimation",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the update animation config."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49134,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IAnimationOption",
												"id": 13425
											}
										},
										{
											"id": 13818,
											"name": "vAlign",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the vertical alignment."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49162,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "VAlign",
												"id": 1876
											}
										},
										{
											"id": 13823,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13824,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13821,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13822,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13793,
												13804,
												13796,
												13820,
												13817,
												13812,
												13807,
												13800,
												13798,
												13810,
												13799,
												13813,
												13819,
												13803,
												13815,
												13797,
												13802,
												13805,
												13795,
												13801,
												13794,
												13808,
												13814,
												13806,
												13809,
												13816,
												13811,
												13818
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13823,
												13821
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 49056,
											"character": 38
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									]
								},
								{
									"id": 13825,
									"name": "IPlotConfigTextOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the config option for data label.",
										"text": "The option will be provided for the custom data label. It is only used after user set the text encoding.\nAbout the text encoding, please refer to [IContentEncodingOption]{@link dv.options.IContentEncodingOption}.\n\nThe example defines a custom data label in the plot option:\n\n     {\n         type: 'Bar',\n         encodings: {\n             values: [{\n                 field: 'Sales'\n             }],\n             category: {\n                 field: 'Country'\n             },\n             text: [{\n                 field: 'Downloads'\n             }, {\n                 field: 'Salesman'\n             }]\n         },\n         config: {\n             text: {\n                 scope: 'Default',\n                 template: '{xField.name} : {xField.value} \\n{valueField.name} : {valueField.value}'\n             }\n         }\n     }\n\nThe following token is supported within the template in the cartesian coordinate system:\n* {xField.name} - returns the field name in the x axis.\n* {xField.value} - returns the field value in the x axis.\n* {valueField.name} - returns the field name in the y axis.\n* {valueField.value} - returns the field value in the y axis.\n* {categoryField.name} - returns the category field name in the point.\n* {categoryField.value} - returns the category field value in the point.\n* {detailFields.name} - returns the detail field name in the point.\n* {detailFields.value} - returns the detail field value in the point.\n* {colorField.name} - returns the color field name in the point.\n* {colorField.value} - returns the color field value in the point.\n* {colorField.color} - returns the color symbol in the point.\n* {sizeField.name} - returns the size field name in the point.\n* {sizeField.value} - returns the size field value in the point.\n\nAlso, a field name can be supported within the template.\n* {Sales.name} - returns the Sales field name.\n* {Sales.value} or {Sales} - returns the Sales field value in the point.\n\nIf the field is aggregated, the aggregated value will be shown.\n"
									},
									"children": [
										{
											"id": 13836,
											"name": "borderStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the border."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49275,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "ILineStyleOption",
												"id": 13739
											}
										},
										{
											"id": 13832,
											"name": "connectingLine",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the connecting line option."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49259,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "ILineStyleOption",
												"id": 13739
											}
										},
										{
											"id": 13833,
											"name": "linePosition",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the line position."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49263,
													"character": 20
												}
											],
											"type": {
												"type": "reference",
												"name": "LinePosition",
												"id": 1730
											}
										},
										{
											"id": 13830,
											"name": "offset",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text offset of the data label."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49251,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13831,
											"name": "overlappingLabels",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets how to handle overlapping labels."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49255,
													"character": 25
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlappingLabels",
												"id": 1740
											}
										},
										{
											"id": 13829,
											"name": "placement",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text placement of the data label."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49247,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "Placement",
												"id": 1806
											}
										},
										{
											"id": 13828,
											"name": "position",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text position of the data label."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49243,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "TextPosition",
												"id": 1865
											}
										},
										{
											"id": 13826,
											"name": "scope",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the scope definition of the template.",
												"text": "The default value is 'Default'\n"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49235,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13834,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49267,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IStyleOption",
												"id": 13899
											}
										},
										{
											"id": 13827,
											"name": "template",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the data label template."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49239,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13835,
											"name": "textStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets text style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49271,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 13920
											}
										},
										{
											"id": 13837,
											"name": "clone",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13838,
													"name": "clone",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a copy of this object."
													},
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49280,
													"character": 13
												}
											]
										},
										{
											"id": 13841,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13842,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13839,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13840,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13836,
												13832,
												13833,
												13830,
												13831,
												13829,
												13828,
												13826,
												13834,
												13827,
												13835
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13837,
												13841,
												13839
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 49229,
											"character": 42
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									]
								},
								{
									"id": 13843,
									"name": "IPlotConfigTooltipOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the config option for tooltip.",
										"text": "The option will be provided for the custom tooltips. It is only used after user set the tooltip encoding.\nAbout the tooltip encoding, please refer to [IContentEncodingOption]{@link dv.options.IContentEncodingOption}.\n\nThe example defines a custom tooltip in the plot option:\n\n     {\n         type: 'Bar',\n         encodings: {\n             values: [{\n                 field: 'Sales'\n             }],\n             category: {\n                 field: 'Country'\n             },\n             tooltip: [{\n                 field: 'Downloads'\n             }, {\n                 field: 'Salesman'\n             }]\n         },\n         config: {\n             tooltip: {\n                 scope: 'Default',\n                 template: '{xField.name} : {xField.value} \\n{valueField.name} : {valueField.value}'\n             }\n         }\n     }\n\nThe following token is supported within the template in the cartesian coordinate system:\n* {xField.name} - returns the field name in the x axis.\n* {xField.value} - returns the field value in the x axis.\n* {valueField.name} - returns the field name in the y axis.\n* {valueField.value} - returns the field value in the y axis.\n* {categoryField.name} - returns the category field name in the point.\n* {categoryField.value} - returns the category field value in the point.\n* {detailFields.name} - returns the detail field name in the point.\n* {detailFields.value} - returns the detail field value in the point.\n* {colorField.name} - returns the color field name in the point.\n* {colorField.value} - returns the color field value in the point.\n* {colorField.color} - returns the color symbol in the point.\n* {sizeField.name} - returns the size field name in the point.\n* {sizeField.value} - returns the size field value in the point.\n\nAlso, a field name can be supported within the template.\n* {Sales.name} - returns the Sales field name.\n* {Sales.value} or {Sales} - returns the Sales field value in the point.\n\nIf the field is aggregated, the aggregated value will be shown.\n"
									},
									"children": [
										{
											"id": 13844,
											"name": "scope",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the scope definition of the template. The default value is 'DataPoint'"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49344,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13846,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49352,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IStyleOption",
												"id": 13899
											}
										},
										{
											"id": 13845,
											"name": "template",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the tooltip template."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49348,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13847,
											"name": "textStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets text style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49356,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 13920
											}
										},
										{
											"id": 13848,
											"name": "clone",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13849,
													"name": "clone",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a copy of this object."
													},
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49361,
													"character": 13
												}
											]
										},
										{
											"id": 13852,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13853,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13850,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13851,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13844,
												13846,
												13845,
												13847
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13848,
												13852,
												13850
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 49340,
											"character": 45
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									]
								},
								{
									"id": 13854,
									"name": "IPlotEncodingsOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the encodings option of the plot.",
										"text": "The option provides how the data items is bound.\n\nThe example defines encodings in the plot option:\n\n     {\n         type: 'Bar',\n         encodings: {\n             values: [{\n                 field: 'Sales',\n                 aggregate: 'Sum'\n             }, {\n                 field: 'Downloads',\n                 aggregate: 'Sum'\n             }],\n             category: {\n                 field: 'Country'\n             },\n             details: [{\n                 field: 'Company',\n                 group: 'Cluster'\n             }]\n         }\n     }\n\n"
									},
									"children": [
										{
											"id": 13856,
											"name": "category",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the category encoding."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49405,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "ICategoryEncodingOption",
												"id": 13015
											}
										},
										{
											"id": 13858,
											"name": "color",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the color encoding."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49413,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorEncodingOption",
												"id": 13024
											}
										},
										{
											"id": 13857,
											"name": "details",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail encodings."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49409,
													"character": 15
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IDetailEncodingOption",
													"id": 13041
												}
											}
										},
										{
											"id": 13863,
											"name": "layout",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the layout encodings."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49433,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "ILayoutEncodingOption",
												"id": 13051
											}
										},
										{
											"id": 13860,
											"name": "shape",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the shape encoding."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49421,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IShapeEncodingOption",
												"id": 13059
											}
										},
										{
											"id": 13859,
											"name": "size",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the size encoding."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49417,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "ISizeEncodingOption",
												"id": 13068
											}
										},
										{
											"id": 13861,
											"name": "text",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text encodings."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49425,
													"character": 12
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IContentEncodingOption",
													"id": 13033
												}
											}
										},
										{
											"id": 13862,
											"name": "tooltip",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the tooltip encodings."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49429,
													"character": 15
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IContentEncodingOption",
													"id": 13033
												}
											}
										},
										{
											"id": 13855,
											"name": "values",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the value encodings."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49401,
													"character": 14
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IValueEncodingOption",
													"id": 13193
												}
											}
										},
										{
											"id": 13866,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13867,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13864,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13865,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13856,
												13858,
												13857,
												13863,
												13860,
												13859,
												13861,
												13862,
												13855
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13866,
												13864
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 49397,
											"character": 41
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									]
								},
								{
									"id": 13868,
									"name": "IPlotOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents plot option."
									},
									"children": [
										{
											"id": 13872,
											"name": "config",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the plot config."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49460,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "IPlotConfigOption",
												"id": 13792
											}
										},
										{
											"id": 13871,
											"name": "encodings",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the plot encodings."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49456,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "IPlotEncodingsOption",
												"id": 13854
											}
										},
										{
											"id": 13869,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the plot name."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49448,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13870,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the plot type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49452,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13875,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13876,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13873,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13874,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13872,
												13871,
												13869,
												13870
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13875,
												13873
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 49444,
											"character": 32
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									]
								},
								{
									"id": 17563,
									"name": "IPolynomialTrendLineOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents polynomial trend line overlay option."
									},
									"children": [
										{
											"id": 17570,
											"name": "detailKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail key."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58421,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailKey",
												"id": 17553
											}
										},
										{
											"id": 17569,
											"name": "detailLevel",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail level."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58417,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "DetailLevel",
												"id": 37469
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailLevel",
												"id": 17552
											}
										},
										{
											"id": 17574,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48942,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1757
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 13755
											}
										},
										{
											"id": 17568,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58413,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.field",
												"id": 17551
											}
										},
										{
											"id": 17567,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the label."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58409,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.label",
												"id": 17550
											}
										},
										{
											"id": 17564,
											"name": "order",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the order."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58443,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17575,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48946,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 13891
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 13756
											}
										},
										{
											"id": 17566,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the style"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58405,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 13527
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.style",
												"id": 17549
											}
										},
										{
											"id": 17573,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48938,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 13754
											}
										},
										{
											"id": 17578,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17579,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 17576,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17577,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17570,
												17569,
												17574,
												17568,
												17567,
												17564,
												17575,
												17566,
												17573
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17578,
												17576
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 58439,
											"character": 54
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "ITrendLineOverlayOption",
											"id": 17548
										}
									]
								},
								{
									"id": 17596,
									"name": "IPowerTrendLineOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents power trend line overlay option."
									},
									"children": [
										{
											"id": 17601,
											"name": "detailKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail key."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58421,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailKey",
												"id": 17553
											}
										},
										{
											"id": 17600,
											"name": "detailLevel",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail level."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58417,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "DetailLevel",
												"id": 37469
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailLevel",
												"id": 17552
											}
										},
										{
											"id": 17605,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48942,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1757
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 13755
											}
										},
										{
											"id": 17599,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58413,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.field",
												"id": 17551
											}
										},
										{
											"id": 17598,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the label."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58409,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.label",
												"id": 17550
											}
										},
										{
											"id": 17606,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48946,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 13891
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 13756
											}
										},
										{
											"id": 17597,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the style"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58405,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 13527
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.style",
												"id": 17549
											}
										},
										{
											"id": 17604,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48938,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 13754
											}
										},
										{
											"id": 17609,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17610,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 17607,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17608,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17601,
												17600,
												17605,
												17599,
												17598,
												17606,
												17597,
												17604
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17609,
												17607
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 58465,
											"character": 49
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "ITrendLineOverlayOption",
											"id": 17548
										}
									]
								},
								{
									"id": 13416,
									"name": "IRadialGradientOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the radial gradient option."
									},
									"children": [
										{
											"id": 13419,
											"name": "colorStops",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the the color-stop list."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47879,
													"character": 18
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IColorStopOption",
													"id": 13394
												}
											}
										},
										{
											"id": 13417,
											"name": "extentKeyword",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the keyword describing how big the ending shape must be."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47871,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "GradientExtentKeyword",
												"id": 1687
											}
										},
										{
											"id": 13418,
											"name": "position",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the position of the gradient."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47875,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "GradientPosition",
												"id": 1692
											}
										},
										{
											"id": 13420,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the color type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 47803,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ColorOptionType",
												"id": 1617
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IColorOption.type",
												"id": 13389
											}
										},
										{
											"id": 13423,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13424,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13421,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13422,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13419,
												13417,
												13418,
												13420
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13423,
												13421
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 47867,
											"character": 42
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IColorOption",
											"id": 13388
										}
									]
								},
								{
									"id": 13176,
									"name": "IRangeFieldOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the range field option."
									},
									"children": [
										{
											"id": 13177,
											"name": "lower",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the lower field name."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 46323,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13178,
											"name": "upper",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the upper field name."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 46327,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13181,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13182,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13179,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13180,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13177,
												13178
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13181,
												13179
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 46319,
											"character": 38
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									]
								},
								{
									"id": 13183,
									"name": "IRangeFieldValueEncodingOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the range value encoding option."
									},
									"children": [
										{
											"id": 13186,
											"name": "aggregate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the aggregate option."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 46350,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "Aggregate",
												"id": 1552
											}
										},
										{
											"id": 13187,
											"name": "excludeNulls",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the null values is shown."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 46354,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 13184,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field name."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 46342,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IRangeFieldOption",
												"id": 13176
											}
										},
										{
											"id": 13185,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field label."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 46346,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IRangeFieldOption",
												"id": 13176
											}
										},
										{
											"id": 13188,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets option type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 46369,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IValueEncodingOption.type",
												"id": 13194
											}
										},
										{
											"id": 13191,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13192,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13189,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13190,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13186,
												13187,
												13184,
												13185,
												13188
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13191,
												13189
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 46338,
											"character": 51
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IValueEncodingOption",
											"id": 13193
										}
									]
								},
								{
									"id": 15041,
									"name": "IRectangleOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the rectangle overlay option."
									},
									"children": [
										{
											"id": 15044,
											"name": "angle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the rotate angle."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 51894,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 15052,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48942,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1757
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 13755
											}
										},
										{
											"id": 15043,
											"name": "height",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the height."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 51890,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 15047,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the label."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50931,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.label",
												"id": 14501
											}
										},
										{
											"id": 15045,
											"name": "offset",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the offset."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50923,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.offset",
												"id": 14499
											}
										},
										{
											"id": 15048,
											"name": "placement",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the placement."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50935,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "Placement",
												"id": 1806
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.placement",
												"id": 14502
											}
										},
										{
											"id": 15050,
											"name": "pointPath",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the pointPath."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50943,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.pointPath",
												"id": 14504
											}
										},
										{
											"id": 15049,
											"name": "position",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the placement."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50939,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "AnnotationPosition"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.position",
												"id": 14503
											}
										},
										{
											"id": 15053,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48946,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 13891
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 13756
											}
										},
										{
											"id": 15046,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50927,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IOverlayStyleOption",
												"id": 14512
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.style",
												"id": 14500
											}
										},
										{
											"id": 15051,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48938,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 13754
											}
										},
										{
											"id": 15042,
											"name": "width",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the width."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 51886,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 15056,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 15057,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 15054,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 15055,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												15044,
												15052,
												15043,
												15047,
												15045,
												15048,
												15050,
												15049,
												15053,
												15046,
												15051,
												15042
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												15056,
												15054
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 51882,
											"character": 44
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IAnnotationOverlayOption",
											"id": 14498
										}
									]
								},
								{
									"id": 16507,
									"name": "IReferenceBandOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents overlay option."
									},
									"children": [
										{
											"id": 16508,
											"name": "axis",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the axis"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 55730,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "AxisType",
												"id": 1610
											}
										},
										{
											"id": 16513,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48942,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1757
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 13755
											}
										},
										{
											"id": 16511,
											"name": "end",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the end"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 55742,
													"character": 11
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 16514,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48946,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 13891
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 13756
											}
										},
										{
											"id": 16510,
											"name": "start",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the start"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 55738,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 16509,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the style"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 55734,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "_DataPointStyleOption"
											}
										},
										{
											"id": 16512,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48938,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 13754
											}
										},
										{
											"id": 16517,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16518,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 16515,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16516,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												16508,
												16513,
												16511,
												16514,
												16510,
												16509,
												16512
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												16517,
												16515
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 55726,
											"character": 48
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOverlayOption",
											"id": 13753
										}
									]
								},
								{
									"id": 16684,
									"name": "IReferenceLineOverlayArgumentsOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the arguments in the reference line overlay option."
									},
									"children": [
										{
											"id": 16685,
											"name": "k",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "The percentile value in the range 0 to 1."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 56284,
													"character": 9
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 16686,
											"name": "percentileType",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "The percentile type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 56288,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "PercentileType",
												"id": 1803
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												16685,
												16686
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 56280,
											"character": 57
										}
									]
								},
								{
									"id": 16687,
									"name": "IReferenceLineOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents overlay option."
									},
									"children": [
										{
											"id": 16690,
											"name": "aggregate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the aggregate."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 56311,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ReferenceLineAggregate",
												"id": 1823
											}
										},
										{
											"id": 16696,
											"name": "arguments",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the arguments."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 56335,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "IReferenceLineOverlayArgumentsOption",
												"id": 16684
											}
										},
										{
											"id": 16688,
											"name": "axis",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the axis"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 56303,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "AxisType",
												"id": 1610
											}
										},
										{
											"id": 16695,
											"name": "detailKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail key."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 56331,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16693,
											"name": "detailLevel",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail level."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 56323,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "DetailLevel",
												"id": 37469
											}
										},
										{
											"id": 16698,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48942,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1757
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 13755
											}
										},
										{
											"id": 16694,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 56327,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 16692,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the label."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 56319,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IOverlayLabelOption",
												"id": 16679
											}
										},
										{
											"id": 16699,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48946,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 13891
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 13756
											}
										},
										{
											"id": 16689,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the style"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 56307,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "_DataPointStyleOption"
											}
										},
										{
											"id": 16697,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48938,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 13754
											}
										},
										{
											"id": 16691,
											"name": "value",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the value"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 56315,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 16702,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16703,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 16700,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 16701,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												16690,
												16696,
												16688,
												16695,
												16693,
												16698,
												16694,
												16692,
												16699,
												16689,
												16697,
												16691
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												16702,
												16700
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 56299,
											"character": 48
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOverlayOption",
											"id": 13753
										}
									]
								},
								{
									"id": 13884,
									"name": "IRuleActionOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the action in the conditional formatting rule option."
									},
									"children": [
										{
											"id": 13886,
											"name": "properties",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the collection of property name/value pairs.",
												"text": "The property value will be changed on the same target if the condition is true.\n"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49500,
													"character": 18
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleActionPropertyOption",
													"id": 13877
												}
											}
										},
										{
											"id": 13885,
											"name": "targetElement",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the target element."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49494,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13889,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13890,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13887,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13888,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13886,
												13885
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13889,
												13887
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 49490,
											"character": 38
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									]
								},
								{
									"id": 13877,
									"name": "IRuleActionPropertyOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the property definition in the action of the conditional formatting rule."
									},
									"children": [
										{
											"id": 13878,
											"name": "name",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the property name."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49475,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13879,
											"name": "value",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the property value will be set if the condition is true."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49479,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 13882,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13883,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13880,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13881,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13878,
												13879
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13882,
												13880
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 49471,
											"character": 46
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									]
								},
								{
									"id": 13891,
									"name": "IRuleOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the conditional formatting rule to change the property value if the condition is true.",
										"text": "Model example to define a rule to change the data point style based on the value:\n\n     {\n         condition: 'current.value > 1000',\n         type:'DataPoint',\n         actions:[{\n             targetElement:'DataPoint',\n             properties:[{\n                 name: 'color',\n                 value: 'red'\n             }]\n         }]\n     }\n"
									},
									"children": [
										{
											"id": 13894,
											"name": "actions",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the rule action list."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49541,
													"character": 15
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleActionOption",
													"id": 13884
												}
											}
										},
										{
											"id": 13892,
											"name": "condition",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets condition expression."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49529,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13893,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the current instance type in the condition expression.",
												"text": "The value should be following:\n+ 'DataPoint' - The current instance should be point.\n+ 'Group' - The current instance should be series.\n"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49537,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13897,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13898,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13895,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13896,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13894,
												13892,
												13893
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13897,
												13895
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 49525,
											"character": 32
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									]
								},
								{
									"id": 14195,
									"name": "ISelectionStyleOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the selection style option."
									},
									"children": [
										{
											"id": 14196,
											"name": "adorners",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the adorners are shown."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50148,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 14200,
											"name": "backgroundColor",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the background color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48287,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 13388
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.backgroundColor",
												"id": 13531
											}
										},
										{
											"id": 14212,
											"name": "borderRadius",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the border radius."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48335,
													"character": 20
												}
											],
											"type": {
												"type": "reference",
												"name": "IBorderRadiusOption",
												"id": 13483
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.borderRadius",
												"id": 13543
											}
										},
										{
											"id": 14199,
											"name": "fill",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the fill color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48283,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 13388
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.fill",
												"id": 13530
											}
										},
										{
											"id": 14197,
											"name": "opacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the opacity value of fill color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48275,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.opacity",
												"id": 13528
											}
										},
										{
											"id": 14201,
											"name": "stroke",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48291,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 13388
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.stroke",
												"id": 13532
											}
										},
										{
											"id": 14203,
											"name": "strokeDasharray",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke dash array."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48299,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.strokeDasharray",
												"id": 13534
											}
										},
										{
											"id": 14198,
											"name": "strokeOpacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the opacity value of stroke color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48279,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.strokeOpacity",
												"id": 13529
											}
										},
										{
											"id": 14202,
											"name": "strokeWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke width."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48295,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.strokeWidth",
												"id": 13533
											}
										},
										{
											"id": 14207,
											"name": "symbolFill",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the background color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48315,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 13388
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.symbolFill",
												"id": 13538
											}
										},
										{
											"id": 14205,
											"name": "symbolOpacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the opacity value of symbol fill color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48307,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.symbolOpacity",
												"id": 13536
											}
										},
										{
											"id": 14204,
											"name": "symbolShape",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the shape of symbol."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48303,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.symbolShape",
												"id": 13535
											}
										},
										{
											"id": 14211,
											"name": "symbolSize",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke size."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48331,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.symbolSize",
												"id": 13542
											}
										},
										{
											"id": 14208,
											"name": "symbolStroke",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48319,
													"character": 20
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 13388
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.symbolStroke",
												"id": 13539
											}
										},
										{
											"id": 14210,
											"name": "symbolStrokeDasharray",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke dash array."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48327,
													"character": 29
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.symbolStrokeDasharray",
												"id": 13541
											}
										},
										{
											"id": 14206,
											"name": "symbolStrokeOpacity",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the opacity value of symbol stroke color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48311,
													"character": 27
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.symbolStrokeOpacity",
												"id": 13537
											}
										},
										{
											"id": 14209,
											"name": "symbolStrokeWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke width."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48323,
													"character": 25
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.symbolStrokeWidth",
												"id": 13540
											}
										},
										{
											"id": 14213,
											"name": "clone",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 14214,
													"name": "clone",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a copy of this object."
													},
													"type": {
														"type": "intrinsic",
														"name": "object"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IDataPointStyleOption.clone",
														"id": 13544
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48340,
													"character": 13
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IDataPointStyleOption.clone",
												"id": 13544
											}
										},
										{
											"id": 14217,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 14218,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 14215,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 14216,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												14196,
												14200,
												14212,
												14199,
												14197,
												14201,
												14203,
												14198,
												14202,
												14207,
												14205,
												14204,
												14211,
												14208,
												14210,
												14206,
												14209
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												14213,
												14217,
												14215
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 50144,
											"character": 42
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IDataPointStyleOption",
											"id": 13527
										}
									]
								},
								{
									"id": 13059,
									"name": "IShapeEncodingOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the shape encoding option."
									},
									"children": [
										{
											"id": 13060,
											"name": "aggregate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the aggregate option."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 46009,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "Aggregate",
												"id": 1552
											}
										},
										{
											"id": 13062,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field name."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48415,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IEncodingOption.field",
												"id": 13560
											}
										},
										{
											"id": 13063,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field label."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48419,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IEncodingOption.label",
												"id": 13561
											}
										},
										{
											"id": 13061,
											"name": "sort",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the sort option."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 46013,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "OrderType",
												"id": 1733
											}
										},
										{
											"id": 13066,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13067,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13064,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13065,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13060,
												13062,
												13063,
												13061
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13066,
												13064
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 46005,
											"character": 41
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IEncodingOption",
											"id": 13559
										}
									]
								},
								{
									"id": 17658,
									"name": "ISimpleMovingAverageTrendlineOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents SMA trend line overlay option."
									},
									"children": [
										{
											"id": 17664,
											"name": "detailKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail key."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58421,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailKey",
												"id": 17553
											}
										},
										{
											"id": 17663,
											"name": "detailLevel",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail level."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58417,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "DetailLevel",
												"id": 37469
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailLevel",
												"id": 17552
											}
										},
										{
											"id": 17668,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48942,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1757
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 13755
											}
										},
										{
											"id": 17662,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58413,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.field",
												"id": 17551
											}
										},
										{
											"id": 17661,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the label."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58409,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.label",
												"id": 17550
											}
										},
										{
											"id": 17659,
											"name": "period",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the period."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58505,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17669,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48946,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 13891
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 13756
											}
										},
										{
											"id": 17660,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the style"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58405,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 13527
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.style",
												"id": 17549
											}
										},
										{
											"id": 17667,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48938,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 13754
											}
										},
										{
											"id": 17672,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17673,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 17670,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17671,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17664,
												17663,
												17668,
												17662,
												17661,
												17659,
												17669,
												17660,
												17667
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17672,
												17670
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 58501,
											"character": 63
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "ITrendLineOverlayOption",
											"id": 17548
										}
									]
								},
								{
									"id": 13068,
									"name": "ISizeEncodingOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the size encoding option."
									},
									"children": [
										{
											"id": 13069,
											"name": "aggregate",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the aggregate option."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 46029,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "Aggregate",
												"id": 1552
											}
										},
										{
											"id": 13071,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field name."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48415,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IEncodingOption.field",
												"id": 13560
											}
										},
										{
											"id": 13072,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field label."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48419,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IEncodingOption.label",
												"id": 13561
											}
										},
										{
											"id": 13070,
											"name": "sort",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the sort option."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 46033,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "OrderType",
												"id": 1733
											}
										},
										{
											"id": 13075,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13076,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13073,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13074,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13069,
												13071,
												13072,
												13070
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13075,
												13073
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 46025,
											"character": 40
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IEncodingOption",
											"id": 13559
										}
									]
								},
								{
									"id": 13077,
									"name": "ISortEncodingOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents sort encoding option."
									},
									"children": [
										{
											"id": 13079,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field name."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48415,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IEncodingOption.field",
												"id": 13560
											}
										},
										{
											"id": 13080,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field label."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48419,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IEncodingOption.label",
												"id": 13561
											}
										},
										{
											"id": 13078,
											"name": "order",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the order option."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 46048,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "OrderType",
												"id": 1733
											}
										},
										{
											"id": 13083,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13084,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13081,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13082,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13079,
												13080,
												13078
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13083,
												13081
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 46044,
											"character": 40
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IEncodingOption",
											"id": 13559
										}
									]
								},
								{
									"id": 13899,
									"name": "IStyleOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the style option."
									},
									"children": [
										{
											"id": 13900,
											"name": "backgroundColor",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the background color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49556,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 13388
											}
										},
										{
											"id": 13907,
											"name": "fill",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the fill."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49584,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 13388
											}
										},
										{
											"id": 13904,
											"name": "innerStroke",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the inner stroke color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49572,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 13388
											}
										},
										{
											"id": 13906,
											"name": "innerStrokeDasharray",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the inner stroke dash array."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49580,
													"character": 28
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13905,
											"name": "innerStrokeWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the inner stroke width."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49576,
													"character": 24
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13901,
											"name": "stroke",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49560,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "IColorOption",
												"id": 13388
											}
										},
										{
											"id": 13903,
											"name": "strokeDasharray",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke dash array."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49568,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13902,
											"name": "strokeWidth",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the stroke width."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49564,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13910,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13911,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13908,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13909,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13900,
												13907,
												13904,
												13906,
												13905,
												13901,
												13903,
												13902
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13910,
												13908
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 49552,
											"character": 33
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "ILegendStyleOption",
											"id": 13725
										}
									]
								},
								{
									"id": 13912,
									"name": "ITextDecorationOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the text-decoration option."
									},
									"children": [
										{
											"id": 13914,
											"name": "lineThrough",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the linethrough."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49603,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 13913,
											"name": "overline",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overline."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49599,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 13915,
											"name": "underline",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the underline."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49607,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 13918,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13919,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13916,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13917,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13914,
												13913,
												13915
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13918,
												13916
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 49595,
											"character": 42
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									]
								},
								{
									"id": 15317,
									"name": "ITextOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the text overlay option."
									},
									"children": [
										{
											"id": 15319,
											"name": "angle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the rotate angle."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 52411,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 15329,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48942,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1757
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 13755
											}
										},
										{
											"id": 15324,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the label."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50931,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.label",
												"id": 14501
											}
										},
										{
											"id": 15322,
											"name": "offset",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the offset."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50923,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.offset",
												"id": 14499
											}
										},
										{
											"id": 15325,
											"name": "placement",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the placement."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50935,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "Placement",
												"id": 1806
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.placement",
												"id": 14502
											}
										},
										{
											"id": 15327,
											"name": "pointPath",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the pointPath."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50943,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.pointPath",
												"id": 14504
											}
										},
										{
											"id": 15326,
											"name": "position",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the placement."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50939,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "AnnotationPosition"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.position",
												"id": 14503
											}
										},
										{
											"id": 15330,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48946,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 13891
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 13756
											}
										},
										{
											"id": 15323,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50927,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IOverlayStyleOption",
												"id": 14512
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IAnnotationOverlayOption.style",
												"id": 14500
											}
										},
										{
											"id": 15321,
											"name": "text",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the text."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 52419,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 15320,
											"name": "textStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the text style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 52415,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 13920
											}
										},
										{
											"id": 15328,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48938,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 13754
											}
										},
										{
											"id": 15318,
											"name": "width",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the width."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 52407,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 15333,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 15334,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 15331,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 15332,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												15319,
												15329,
												15324,
												15322,
												15325,
												15327,
												15326,
												15330,
												15323,
												15321,
												15320,
												15328,
												15318
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												15333,
												15331
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 52403,
											"character": 39
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IAnnotationOverlayOption",
											"id": 14498
										}
									]
								},
								{
									"id": 14043,
									"name": "ITextPlotConfigOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents config option for the text plot."
									},
									"children": [
										{
											"id": 14048,
											"name": "categorySpace",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or set the space between the series and category title."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50043,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 14045,
											"name": "categoryStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets title style of category."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50031,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 13920
											}
										},
										{
											"id": 14049,
											"name": "dimensionSpace",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or set the space between the dimensions."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50047,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 14044,
											"name": "format",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the title format of point."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50027,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 14047,
											"name": "seriesSpace",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or set the space between series."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50039,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 14046,
											"name": "symbolSpace",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or set the space between the symbol and title in the point."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 50035,
													"character": 19
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 14052,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 14053,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 14050,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 14051,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												14048,
												14045,
												14049,
												14044,
												14047,
												14046
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												14052,
												14050
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 50023,
											"character": 42
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									]
								},
								{
									"id": 13920,
									"name": "ITextStyleOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the text style option."
									},
									"children": [
										{
											"id": 13921,
											"name": "color",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text color."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49622,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13923,
											"name": "fontFamily",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the font family."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49630,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13922,
											"name": "fontSize",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the font size."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49626,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13925,
											"name": "fontStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the font style."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49638,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "FontStyle",
												"id": 1671
											}
										},
										{
											"id": 13924,
											"name": "fontWeight",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the font weight"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49634,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13927,
											"name": "overflow",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text overflow."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49646,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "TextOverflow",
												"id": 1861
											}
										},
										{
											"id": 13926,
											"name": "textDecoration",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text decoration."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49642,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextDecorationOption",
												"id": 13912
											}
										},
										{
											"id": 13930,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13931,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13928,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13929,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13921,
												13923,
												13922,
												13925,
												13924,
												13927,
												13926
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13930,
												13928
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 49618,
											"character": 37
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "ILabelStyleOption",
											"id": 14182
										}
									]
								},
								{
									"id": 17548,
									"name": "ITrendLineOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents trend line overlay option."
									},
									"children": [
										{
											"id": 17553,
											"name": "detailKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail key."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58421,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 17552,
											"name": "detailLevel",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail level."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58417,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "DetailLevel",
												"id": 37469
											}
										},
										{
											"id": 17557,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48942,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1757
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 13755
											}
										},
										{
											"id": 17551,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58413,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 17550,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the label."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58409,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 17558,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48946,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 13891
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 13756
											}
										},
										{
											"id": 17549,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the style"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58405,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 13527
											}
										},
										{
											"id": 17556,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48938,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 13754
											}
										},
										{
											"id": 17561,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17562,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 17559,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17560,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17553,
												17552,
												17557,
												17551,
												17550,
												17558,
												17549,
												17556
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17561,
												17559
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 58401,
											"character": 44
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOverlayOption",
											"id": 13753
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "IPolynomialTrendLineOverlayOption",
											"id": 17563
										},
										{
											"type": "reference",
											"name": "IExponentialTrendLineOverlayOption",
											"id": 17580
										},
										{
											"type": "reference",
											"name": "IPowerTrendLineOverlayOption",
											"id": 17596
										},
										{
											"type": "reference",
											"name": "ILinearTrendLineOverlayOption",
											"id": 17611
										},
										{
											"type": "reference",
											"name": "ILogarithmicTrendlineOverlayOption",
											"id": 17627
										},
										{
											"type": "reference",
											"name": "ISimpleMovingAverageTrendlineOverlayOption",
											"id": 17658
										},
										{
											"type": "reference",
											"name": "ICumulativeMovingAverageTrendlineOverlayOption",
											"id": 17674
										},
										{
											"type": "reference",
											"name": "IWeightedMovingAverageTrendlineOverlayOption",
											"id": 17690
										},
										{
											"type": "reference",
											"name": "IMovingAnnualTotalTrendlineOverlayOption",
											"id": 17706
										},
										{
											"type": "reference",
											"name": "IExponentialMovingAverageTrendlineOverlayOption",
											"id": 17722
										}
									]
								},
								{
									"id": 13193,
									"name": "IValueEncodingOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the value encoding option."
									},
									"children": [
										{
											"id": 13194,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets option type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 46369,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 13197,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13198,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13195,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13196,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13194
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13197,
												13195
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 46365,
											"character": 41
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									],
									"extendedBy": [
										{
											"type": "reference",
											"name": "IFieldsValueEncodingOption",
											"id": 13166
										},
										{
											"type": "reference",
											"name": "IRangeFieldValueEncodingOption",
											"id": 13183
										},
										{
											"type": "reference",
											"name": "IStockFieldValueEncodingOption",
											"id": 48595
										}
									]
								},
								{
									"id": 13932,
									"name": "IValueOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents value option."
									},
									"children": [
										{
											"id": 13933,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the css value type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49660,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ValueOptionType",
												"id": 1880
											}
										},
										{
											"id": 13934,
											"name": "value",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the value."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49664,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 13937,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13938,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13935,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13936,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13933,
												13934
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13937,
												13935
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 49656,
											"character": 33
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									]
								},
								{
									"id": 13939,
									"name": "IValueScaleOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents scale option."
									},
									"children": [
										{
											"id": 13940,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the type of scale."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 49679,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "ValueScaleType",
												"id": 1887
											}
										},
										{
											"id": 13943,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13944,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 13941,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 13942,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												13940
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												13943,
												13941
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 49675,
											"character": 38
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									]
								},
								{
									"id": 17690,
									"name": "IWeightedMovingAverageTrendlineOverlayOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents WMA trend line overlay option."
									},
									"children": [
										{
											"id": 17696,
											"name": "detailKey",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail key."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58421,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailKey",
												"id": 17553
											}
										},
										{
											"id": 17695,
											"name": "detailLevel",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the detail level."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58417,
													"character": 19
												}
											],
											"type": {
												"type": "reference",
												"name": "DetailLevel",
												"id": 37469
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.detailLevel",
												"id": 17552
											}
										},
										{
											"id": 17700,
											"name": "display",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the display."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48942,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "OverlayDisplay",
												"id": 1757
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.display",
												"id": 13755
											}
										},
										{
											"id": 17694,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58413,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.field",
												"id": 17551
											}
										},
										{
											"id": 17693,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the label."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58409,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.label",
												"id": 17550
											}
										},
										{
											"id": 17691,
											"name": "period",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the period."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58525,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 17701,
											"name": "rules",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the conditional formatting rules."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48946,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IRuleOption",
													"id": 13891
												}
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.rules",
												"id": 13756
											}
										},
										{
											"id": 17692,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the style"
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 58405,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "IDataPointStyleOption",
												"id": 13527
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ITrendLineOverlayOption.style",
												"id": 17549
											}
										},
										{
											"id": 17699,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the overlay type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48938,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IOverlayOption.type",
												"id": 13754
											}
										},
										{
											"id": 17704,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17705,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 17702,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 17703,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												17696,
												17695,
												17700,
												17694,
												17693,
												17691,
												17701,
												17692,
												17699
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												17704,
												17702
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 58521,
											"character": 65
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "ITrendLineOverlayOption",
											"id": 17548
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"kind": 256,
									"children": [
										13425,
										14498,
										13435,
										13995,
										14261,
										14267,
										13483,
										13490,
										13015,
										13024,
										13388,
										13394,
										13499,
										13033,
										13401,
										17674,
										13519,
										13527,
										13041,
										13550,
										14616,
										13559,
										16009,
										17722,
										17580,
										13166,
										13566,
										13581,
										13599,
										13624,
										13639,
										14707,
										14182,
										13051,
										13650,
										13688,
										13718,
										13725,
										14827,
										13739,
										13408,
										17611,
										17627,
										17706,
										13748,
										16679,
										13753,
										14512,
										13761,
										13770,
										13777,
										13792,
										13825,
										13843,
										13854,
										13868,
										17563,
										17596,
										13416,
										13176,
										13183,
										15041,
										16507,
										16684,
										16687,
										13884,
										13877,
										13891,
										14195,
										13059,
										17658,
										13068,
										13077,
										13899,
										13912,
										15317,
										14043,
										13920,
										17548,
										13193,
										13932,
										13939,
										17690
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 39903,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 39953,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 40115,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 40221,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 40989,
									"character": 17
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 41065,
									"character": 17
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 41214,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 41468,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 41548,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 41832,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 41901,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 42007,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 42058,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 42244,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 42440,
									"character": 17
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 42488,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 42673,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 42713,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 42815,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 43241,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 43290,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 43335,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 43419,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 43492,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 43657,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 43730,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 43907,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 44405,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 44620,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 44702,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 44877,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 44952,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 45011,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 45060,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 45134,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 45235,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 45354,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 45395,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 45430,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 45489,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 45542,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 45579,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 45655,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 45692,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 45745,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 45798,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 45834,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 45854,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 45873,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 45938,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 45983,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 45999,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 46019,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 46038,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 46053,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 46141,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 46234,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 46286,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 46313,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 46332,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 46359,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 46374,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 46403,
									"character": 17
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 46596,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 46917,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 46949,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 46976,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 47017,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 47129,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 47155,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 47216,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 47399,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 47495,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 47535,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 47608,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 47793,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 47808,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 47827,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 47842,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 47861,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 47884,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 47915,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 48102,
									"character": 17
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 48122,
									"character": 17
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 48149,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 48220,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 48265,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 48345,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 48372,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 48424,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 48475,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 48539,
									"character": 17
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 48558,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 48609,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 48624,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 48654,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 48728,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 48839,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 48858,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 48873,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 48909,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 48928,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 48951,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 48978,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 48997,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 49050,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 49174,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 49285,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 49366,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 49438,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 49465,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 49484,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 49505,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 49546,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 49589,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 49612,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 49650,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 49669,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 49683,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 49735,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 49854,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 49898,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 50017,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 50052,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 50088,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 50123,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 50138,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 50153,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 50202,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 50274,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 50289,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 50561,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 50650,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 50791,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 50913,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 50947,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 50986,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 51075,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 51122,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 51187,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 51244,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 51462,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 51499,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 51709,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 51768,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 51829,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 51876,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 52104,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 52168,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 52293,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 52369,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 52397,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 52424,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 54105,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 54254,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 55642,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 55720,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 55946,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 56019,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 56072,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 56225,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 56247,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 56274,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 56293,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 58116,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 58231,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 58270,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 58309,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 58336,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 58395,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 58546,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 58573,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 58592,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 58631,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 58690,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 58709,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 58748,
									"character": 20
								}
							]
						},
						{
							"id": 3222,
							"name": "plugins",
							"kind": 2,
							"kindString": "Module",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 18292,
									"name": "AdornerRenderPlugin",
									"kind": 128,
									"kindString": "Class",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the adorner render plugin."
									},
									"children": [
										{
											"id": 18300,
											"name": "hasRegisteredAdornerRender",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isStatic": true,
												"isExported": true,
												"isPublic": true
											},
											"signatures": [
												{
													"id": 18301,
													"name": "hasRegisteredAdornerRender",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Checks whether the adorner render is registered.",
														"returns": "True if it is registered, otherwise false.\n"
													},
													"parameters": [
														{
															"id": 18302,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The adorner render type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 59631,
													"character": 48
												}
											]
										},
										{
											"id": 18293,
											"name": "registerAdornerRender",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isStatic": true,
												"isExported": true,
												"isPublic": true
											},
											"signatures": [
												{
													"id": 18294,
													"name": "registerAdornerRender",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Registers the adorner render plugin."
													},
													"parameters": [
														{
															"id": 18295,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The adorner render type."
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 18296,
															"name": "plugin",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The adorner render plugin.\n"
															},
															"type": {
																"type": "reference",
																"name": "IAdornerRenderPlugin",
																"id": 18322
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 59595,
													"character": 43
												}
											]
										},
										{
											"id": 18297,
											"name": "unregisterAdorner",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isStatic": true,
												"isExported": true,
												"isPublic": true
											},
											"signatures": [
												{
													"id": 18298,
													"name": "unregisterAdorner",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Checks whether the adorner render is registered.",
														"returns": "True if it is registered, otherwise false.\n"
													},
													"parameters": [
														{
															"id": 18299,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The adorner render type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 59614,
													"character": 39
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												18300,
												18293,
												18297
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 59582,
											"character": 36
										}
									]
								},
								{
									"id": 20929,
									"name": "ClickInteractionPlugin",
									"kind": 128,
									"kindString": "Class",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the click interaction plugin."
									},
									"children": [
										{
											"id": 20937,
											"name": "hasRegisteredClickInteraction",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isStatic": true,
												"isExported": true,
												"isPublic": true
											},
											"signatures": [
												{
													"id": 20938,
													"name": "hasRegisteredClickInteraction",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Checks whether the click interaction is registered.",
														"returns": "True if it is registered, otherwise false.\n"
													},
													"parameters": [
														{
															"id": 20939,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The click interaction type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 66275,
													"character": 51
												}
											]
										},
										{
											"id": 20930,
											"name": "registerClickInteraction",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isStatic": true,
												"isExported": true,
												"isPublic": true
											},
											"signatures": [
												{
													"id": 20931,
													"name": "registerClickInteraction",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Registers the click interaction plugin."
													},
													"parameters": [
														{
															"id": 20932,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The click interaction type."
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 20933,
															"name": "plugin",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The click interaction plugin.\n"
															},
															"type": {
																"type": "reference",
																"name": "IClickInteractionPlugin",
																"id": 20945
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 66241,
													"character": 46
												}
											]
										},
										{
											"id": 20934,
											"name": "unregisterClickInteraction",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isStatic": true,
												"isExported": true,
												"isPublic": true
											},
											"signatures": [
												{
													"id": 20935,
													"name": "unregisterClickInteraction",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Checks whether the click interaction is registered.",
														"returns": "True if it is registered, otherwise false.\n"
													},
													"parameters": [
														{
															"id": 20936,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The click interaction type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 66259,
													"character": 48
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												20937,
												20930,
												20934
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 66228,
											"character": 39
										}
									]
								},
								{
									"id": 21177,
									"name": "ConditionalFormattingRulePlugin",
									"kind": 128,
									"kindString": "Class",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the conditional formatting rule plugin."
									},
									"children": [
										{
											"id": 21185,
											"name": "hasRegisteredConditionalFormattingRule",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isStatic": true,
												"isExported": true,
												"isPublic": true
											},
											"signatures": [
												{
													"id": 21186,
													"name": "hasRegisteredConditionalFormattingRule",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Checks whether the conditional formatting rule is registered.",
														"returns": "True if it is registered, otherwise false.\n"
													},
													"parameters": [
														{
															"id": 21187,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The conditional formatting rule type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 67703,
													"character": 60
												}
											]
										},
										{
											"id": 21178,
											"name": "registerConditionalFormattingRule",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isStatic": true,
												"isExported": true,
												"isPublic": true
											},
											"signatures": [
												{
													"id": 21179,
													"name": "registerConditionalFormattingRule",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Registers the conditional formatting rule plugin."
													},
													"parameters": [
														{
															"id": 21180,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The conditional formatting rule type."
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 21181,
															"name": "plugin",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The conditional formatting rule plugin.\n"
															},
															"type": {
																"type": "reference",
																"name": "IConditionalFormattingRulePlugin",
																"id": 21223
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 67671,
													"character": 55
												}
											]
										},
										{
											"id": 21182,
											"name": "unregisterConditionalFormattingRule",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isStatic": true,
												"isExported": true,
												"isPublic": true
											},
											"signatures": [
												{
													"id": 21183,
													"name": "unregisterConditionalFormattingRule",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Unregisters the conditional formatting rule plugin."
													},
													"parameters": [
														{
															"id": 21184,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The conditional formatting rule type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 67687,
													"character": 57
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												21185,
												21178,
												21182
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 67658,
											"character": 48
										}
									]
								},
								{
									"id": 21362,
									"name": "DataContentProviderPlugin",
									"kind": 128,
									"kindString": "Class",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the data content provider plugin."
									},
									"children": [
										{
											"id": 21370,
											"name": "hasRegisteredDataContentProvider",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isStatic": true,
												"isExported": true,
												"isPublic": true
											},
											"signatures": [
												{
													"id": 21371,
													"name": "hasRegisteredDataContentProvider",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Checks whether the data content provider is registered.",
														"returns": "True if it is registered, otherwise false.\n"
													},
													"parameters": [
														{
															"id": 21372,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The data content provider type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 68572,
													"character": 54
												}
											]
										},
										{
											"id": 21363,
											"name": "registerDataContentProvider",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isStatic": true,
												"isExported": true,
												"isPublic": true
											},
											"signatures": [
												{
													"id": 21364,
													"name": "registerDataContentProvider",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Registers the data content provider plugin."
													},
													"parameters": [
														{
															"id": 21365,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The data content provider type."
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 21366,
															"name": "plugin",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The data content provider plugin.\n"
															},
															"type": {
																"type": "reference",
																"name": "IDataContentProviderPlugin",
																"id": 21376
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 68538,
													"character": 49
												}
											]
										},
										{
											"id": 21367,
											"name": "unregisterDataContentProvider",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isStatic": true,
												"isExported": true,
												"isPublic": true
											},
											"signatures": [
												{
													"id": 21368,
													"name": "unregisterDataContentProvider",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Unregisters the data content provider plugin."
													},
													"parameters": [
														{
															"id": 21369,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The data content provider type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 68555,
													"character": 51
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												21370,
												21363,
												21367
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 68525,
											"character": 42
										}
									]
								},
								{
									"id": 21387,
									"name": "DateParserPlugin",
									"kind": 128,
									"kindString": "Class",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the date parser plugin."
									},
									"children": [
										{
											"id": 21395,
											"name": "hasRegisteredDateParser",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isStatic": true,
												"isExported": true,
												"isPublic": true
											},
											"signatures": [
												{
													"id": 21396,
													"name": "hasRegisteredDateParser",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Checks whether the date parser is registered.",
														"returns": "True if it is registered, otherwise false.\n"
													},
													"parameters": [
														{
															"id": 21397,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The date parser type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 68711,
													"character": 45
												}
											]
										},
										{
											"id": 21388,
											"name": "registerDateParser",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isStatic": true,
												"isExported": true,
												"isPublic": true
											},
											"signatures": [
												{
													"id": 21389,
													"name": "registerDateParser",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Registers the date parser plugin."
													},
													"parameters": [
														{
															"id": 21390,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The date parser type."
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 21391,
															"name": "plugin",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The date parser plugin.\n"
															},
															"type": {
																"type": "reference",
																"name": "IDateParserPlugin",
																"id": 21401
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 68677,
													"character": 40
												}
											]
										},
										{
											"id": 21392,
											"name": "unregisterDateParser",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isStatic": true,
												"isExported": true,
												"isPublic": true
											},
											"signatures": [
												{
													"id": 21393,
													"name": "unregisterDateParser",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Unregisters the date parser plugin."
													},
													"parameters": [
														{
															"id": 21394,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The date parser type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 68694,
													"character": 42
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												21395,
												21388,
												21392
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 68664,
											"character": 33
										}
									]
								},
								{
									"id": 21412,
									"name": "FilterPlugin",
									"kind": 128,
									"kindString": "Class",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the filter plugin."
									},
									"children": [
										{
											"id": 21420,
											"name": "hasRegisteredFilter",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isStatic": true,
												"isExported": true,
												"isPublic": true
											},
											"signatures": [
												{
													"id": 21421,
													"name": "hasRegisteredFilter",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Checks whether the filter is registered.",
														"returns": "True if it is registered, otherwise false.\n"
													},
													"parameters": [
														{
															"id": 21422,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The filter type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 68846,
													"character": 41
												}
											]
										},
										{
											"id": 21413,
											"name": "registerFilter",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isStatic": true,
												"isExported": true,
												"isPublic": true
											},
											"signatures": [
												{
													"id": 21414,
													"name": "registerFilter",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Registers the filter plugin."
													},
													"parameters": [
														{
															"id": 21415,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The filter type."
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 21416,
															"name": "plugin",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The filter plugin.\n"
															},
															"type": {
																"type": "reference",
																"name": "IFilterPlugin",
																"id": 21426
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 68814,
													"character": 36
												}
											]
										},
										{
											"id": 21417,
											"name": "unregisterFilter",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isStatic": true,
												"isExported": true,
												"isPublic": true
											},
											"signatures": [
												{
													"id": 21418,
													"name": "unregisterFilter",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Unregisters the filter plugin."
													},
													"parameters": [
														{
															"id": 21419,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The filter type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 68830,
													"character": 38
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												21420,
												21413,
												21417
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 68801,
											"character": 29
										}
									]
								},
								{
									"id": 21464,
									"name": "HoverInteractionPlugin",
									"kind": 128,
									"kindString": "Class",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the hover interaction plugin."
									},
									"children": [
										{
											"id": 21472,
											"name": "hasRegisteredHoverInteraction",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isStatic": true,
												"isExported": true,
												"isPublic": true
											},
											"signatures": [
												{
													"id": 21473,
													"name": "hasRegisteredHoverInteraction",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Checks whether the hover interaction is registered.",
														"returns": "True if it is registered, otherwise false.\n"
													},
													"parameters": [
														{
															"id": 21474,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The hover interaction type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 69094,
													"character": 51
												}
											]
										},
										{
											"id": 21465,
											"name": "registerHoverInteraction",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isStatic": true,
												"isExported": true,
												"isPublic": true
											},
											"signatures": [
												{
													"id": 21466,
													"name": "registerHoverInteraction",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Registers the hover interaction plugin."
													},
													"parameters": [
														{
															"id": 21467,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The hover interaction type."
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 21468,
															"name": "plugin",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The hover interaction plugin.\n"
															},
															"type": {
																"type": "reference",
																"name": "IHoverInteractionPlugin",
																"id": 21480
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 69060,
													"character": 46
												}
											]
										},
										{
											"id": 21469,
											"name": "unregisterHoverInteraction",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isStatic": true,
												"isExported": true,
												"isPublic": true
											},
											"signatures": [
												{
													"id": 21470,
													"name": "unregisterHoverInteraction",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Checks whether the hover interaction is registered.",
														"returns": "True if it is registered, otherwise false.\n"
													},
													"parameters": [
														{
															"id": 21471,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The hover interaction type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 69078,
													"character": 48
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												21472,
												21465,
												21469
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 69047,
											"character": 39
										}
									]
								},
								{
									"id": 20948,
									"name": "LegendFilterInteractionPlugin",
									"kind": 128,
									"kindString": "Class",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the legend filter interaction plugin."
									},
									"children": [
										{
											"id": 20949,
											"name": "create",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true,
												"isPublic": true
											},
											"signatures": [
												{
													"id": 20950,
													"name": "create",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a new click interaction plugin.",
														"returns": "The new click interaction.\n"
													},
													"type": {
														"type": "reference",
														"name": "IClickInteraction",
														"id": 10067
													},
													"implementationOf": {
														"type": "reference",
														"name": "IClickInteractionPlugin.create",
														"id": 20947
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 66341,
													"character": 21
												}
											],
											"implementationOf": {
												"type": "reference",
												"name": "IClickInteractionPlugin.create",
												"id": 20946
											}
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												20949
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 66335,
											"character": 46
										}
									],
									"implementedTypes": [
										{
											"type": "reference",
											"name": "IClickInteractionPlugin",
											"id": 20945
										}
									]
								},
								{
									"id": 21707,
									"name": "PureCanvasRenderEnginePlugin",
									"kind": 128,
									"kindString": "Class",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the canvas render engine plugin."
									},
									"children": [
										{
											"id": 21708,
											"name": "create",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true,
												"isPublic": true
											},
											"signatures": [
												{
													"id": 21709,
													"name": "create",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a new canvas render engine.",
														"returns": "The new canvas render engine.\n"
													},
													"parameters": [
														{
															"id": 21710,
															"name": "element",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The host element.\n"
															},
															"type": {
																"type": "reference",
																"name": "HTMLElement"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IRenderEngine",
														"id": 2095
													},
													"implementationOf": {
														"type": "reference",
														"name": "IRenderEnginePlugin.create",
														"id": 21936
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 70337,
													"character": 21
												}
											],
											"implementationOf": {
												"type": "reference",
												"name": "IRenderEnginePlugin.create",
												"id": 21935
											}
										},
										{
											"id": 21711,
											"name": "createMeasurer",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true,
												"isPublic": true
											},
											"signatures": [
												{
													"id": 21712,
													"name": "createMeasurer",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a canvas measurer."
													},
													"parameters": [
														{
															"id": 21713,
															"name": "element",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The host element.\n"
															},
															"type": {
																"type": "reference",
																"name": "HTMLElement"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IMeasurer",
														"id": 2277
													},
													"implementationOf": {
														"type": "reference",
														"name": "IRenderEnginePlugin.createMeasurer",
														"id": 21939
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 70346,
													"character": 29
												}
											],
											"implementationOf": {
												"type": "reference",
												"name": "IRenderEnginePlugin.createMeasurer",
												"id": 21938
											}
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												21708,
												21711
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 70329,
											"character": 45
										}
									],
									"implementedTypes": [
										{
											"type": "reference",
											"name": "IRenderEnginePlugin",
											"id": 21934
										}
									]
								},
								{
									"id": 21941,
									"name": "RenderEnginePlugin",
									"kind": 128,
									"kindString": "Class",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the render engine plugin."
									},
									"children": [
										{
											"id": 21952,
											"name": "_renderEnginePlugin",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isStatic": true,
												"isExported": true,
												"isPublic": true
											},
											"signatures": [
												{
													"id": 21953,
													"name": "_renderEnginePlugin",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the registered render engine.",
														"returns": "The registered render engine.\n"
													},
													"parameters": [
														{
															"id": 21954,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The render engine type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IRenderEnginePlugin",
														"id": 21934
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 71781,
													"character": 41
												}
											]
										},
										{
											"id": 21949,
											"name": "hasRegisteredRenderEngine",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isStatic": true,
												"isExported": true,
												"isPublic": true
											},
											"signatures": [
												{
													"id": 21950,
													"name": "hasRegisteredRenderEngine",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Checks whether the render engine is registered.",
														"returns": "True if it is registered, otherwise false.\n"
													},
													"parameters": [
														{
															"id": 21951,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The render engine type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 71767,
													"character": 47
												}
											]
										},
										{
											"id": 21942,
											"name": "registerRenderEngine",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isStatic": true,
												"isExported": true,
												"isPublic": true
											},
											"signatures": [
												{
													"id": 21943,
													"name": "registerRenderEngine",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Registers the render engine plugin."
													},
													"parameters": [
														{
															"id": 21944,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The render engine type."
															},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "stringLiteral",
																		"value": "SVG"
																	},
																	{
																		"type": "stringLiteral",
																		"value": "Canvas"
																	}
																]
															}
														},
														{
															"id": 21945,
															"name": "plugin",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The render engine plugin.\n"
															},
															"type": {
																"type": "reference",
																"name": "IRenderEnginePlugin",
																"id": 21934
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 71735,
													"character": 42
												}
											]
										},
										{
											"id": 21946,
											"name": "unregisterRenderEngine",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isStatic": true,
												"isExported": true,
												"isPublic": true
											},
											"signatures": [
												{
													"id": 21947,
													"name": "unregisterRenderEngine",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Unregisters the render engine plugin."
													},
													"parameters": [
														{
															"id": 21948,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The render engine type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 71751,
													"character": 44
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												21952,
												21949,
												21942,
												21946
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 71722,
											"character": 35
										}
									]
								},
								{
									"id": 21741,
									"name": "StringFormattingPlugin",
									"kind": 128,
									"kindString": "Class",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the string formatting plugin."
									},
									"children": [
										{
											"id": 21749,
											"name": "hasRegisteredStringFormatting",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isStatic": true,
												"isExported": true,
												"isPublic": true
											},
											"signatures": [
												{
													"id": 21750,
													"name": "hasRegisteredStringFormatting",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Checks whether the string formatting is registered.",
														"returns": "True if it is registered, otherwise false.\n"
													},
													"parameters": [
														{
															"id": 21751,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The string formatting type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 70702,
													"character": 51
												}
											]
										},
										{
											"id": 21742,
											"name": "registerStringFormatting",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isStatic": true,
												"isExported": true,
												"isPublic": true
											},
											"signatures": [
												{
													"id": 21743,
													"name": "registerStringFormatting",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Registers the string formatting plugin."
													},
													"parameters": [
														{
															"id": 21744,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The string formatting type."
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 21745,
															"name": "plugin",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The string formatting plugin.\n"
															},
															"type": {
																"type": "reference",
																"name": "IStringFormattingPlugin",
																"id": 21720
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 70668,
													"character": 46
												}
											]
										},
										{
											"id": 21746,
											"name": "unregisterStringFormatting",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isStatic": true,
												"isExported": true,
												"isPublic": true
											},
											"signatures": [
												{
													"id": 21747,
													"name": "unregisterStringFormatting",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Unregisters the string formatting plugin."
													},
													"parameters": [
														{
															"id": 21748,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The string formatting type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 70685,
													"character": 48
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												21749,
												21742,
												21746
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 70655,
											"character": 39
										}
									]
								},
								{
									"id": 21808,
									"name": "SymbolPlugin",
									"kind": 128,
									"kindString": "Class",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the symbol plugin."
									},
									"children": [
										{
											"id": 21816,
											"name": "hasRegisteredSymbol",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isStatic": true,
												"isExported": true,
												"isPublic": true
											},
											"signatures": [
												{
													"id": 21817,
													"name": "hasRegisteredSymbol",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Checks whether the symbol is registered.",
														"returns": "True if it is registered, otherwise false.\n"
													},
													"parameters": [
														{
															"id": 21818,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The symbol type."
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 71084,
													"character": 41
												}
											]
										},
										{
											"id": 21809,
											"name": "registerSymbol",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isStatic": true,
												"isExported": true,
												"isPublic": true
											},
											"signatures": [
												{
													"id": 21810,
													"name": "registerSymbol",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Registers the symbol plugin."
													},
													"parameters": [
														{
															"id": 21811,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The symbol type."
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 21812,
															"name": "plugin",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The symbol plugin.\n"
															},
															"type": {
																"type": "reference",
																"name": "ISymbolPlugin",
																"id": 21795
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 71044,
													"character": 36
												}
											]
										},
										{
											"id": 21813,
											"name": "unregisterSymbol",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isStatic": true,
												"isExported": true,
												"isPublic": true
											},
											"signatures": [
												{
													"id": 21814,
													"name": "unregisterSymbol",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Unregisters the symbol plugin."
													},
													"parameters": [
														{
															"id": 21815,
															"name": "type",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The symbol type.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 71062,
													"character": 38
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												21816,
												21809,
												21813
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 71026,
											"character": 29
										}
									]
								},
								{
									"id": 18322,
									"name": "IAdornerRenderPlugin",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the adorner render plugin."
									},
									"children": [
										{
											"id": 18323,
											"name": "create",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 18324,
													"name": "create",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a new adorner render plugin.",
														"returns": "The new adorner render.\n"
													},
													"type": {
														"type": "reference",
														"name": "IAdornerRender",
														"id": 10047
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 59766,
													"character": 14
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												18323
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 59760,
											"character": 41
										}
									]
								},
								{
									"id": 20945,
									"name": "IClickInteractionPlugin",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the click interaction plugin."
									},
									"children": [
										{
											"id": 20946,
											"name": "create",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 20947,
													"name": "create",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a new click interaction plugin.",
														"returns": "The new click interaction.\n"
													},
													"type": {
														"type": "reference",
														"name": "IClickInteraction",
														"id": 10067
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 66324,
													"character": 14
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												20946
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 66318,
											"character": 44
										}
									],
									"implementedBy": [
										{
											"type": "reference",
											"name": "LegendFilterInteractionPlugin",
											"id": 20948
										}
									]
								},
								{
									"id": 21223,
									"name": "IConditionalFormattingRulePlugin",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the conditional formatting rule plugin."
									},
									"children": [
										{
											"id": 21224,
											"name": "create",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 21225,
													"name": "create",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a new conditional formatting rule.",
														"returns": "The new conditional formatting rule.\n"
													},
													"parameters": [
														{
															"id": 21226,
															"name": "option",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The option setting for the conditional formatting rule.\n"
															},
															"type": {
																"type": "reference",
																"name": "IRuleOption",
																"id": 13891
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IConditionalFormattingRule",
														"id": 10072
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 67911,
													"character": 14
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												21224
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 67903,
											"character": 53
										}
									]
								},
								{
									"id": 21376,
									"name": "IDataContentProviderPlugin",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the data content provider plugin."
									},
									"children": [
										{
											"id": 21377,
											"name": "create",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 21378,
													"name": "create",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a new data content provider plugin.",
														"returns": "The new data content provider.\n"
													},
													"type": {
														"type": "reference",
														"name": "IDataContentProvider"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 68610,
													"character": 14
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												21377
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 68604,
											"character": 47
										}
									]
								},
								{
									"id": 21401,
									"name": "IDateParserPlugin",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the date parser plugin."
									},
									"children": [
										{
											"id": 21402,
											"name": "create",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 21403,
													"name": "create",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a new date parser plugin.",
														"returns": "The new date parser.\n"
													},
													"type": {
														"type": "reference",
														"name": "IDateParser",
														"id": 10083
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 68749,
													"character": 14
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												21402
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 68743,
											"character": 38
										}
									]
								},
								{
									"id": 21426,
									"name": "IFilterPlugin",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the filter plugin."
									},
									"children": [
										{
											"id": 21427,
											"name": "create",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 21428,
													"name": "create",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a new filter plugin.",
														"returns": "The new filter.\n"
													},
													"type": {
														"type": "reference",
														"name": "IFilter",
														"id": 10088
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 68886,
													"character": 14
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												21427
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 68880,
											"character": 34
										}
									]
								},
								{
									"id": 21480,
									"name": "IHoverInteractionPlugin",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the hover interaction plugin."
									},
									"children": [
										{
											"id": 21481,
											"name": "create",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 21482,
													"name": "create",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a new hover interaction plugin.",
														"returns": "The new hover interaction.\n"
													},
													"type": {
														"type": "reference",
														"name": "IHoverInteraction",
														"id": 10093
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 69144,
													"character": 14
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												21481
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 69138,
											"character": 44
										}
									]
								},
								{
									"id": 21934,
									"name": "IRenderEnginePlugin",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the render engine plugin."
									},
									"children": [
										{
											"id": 21935,
											"name": "create",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 21936,
													"name": "create",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a new render engine.",
														"returns": "The new render engine.\n"
													},
													"parameters": [
														{
															"id": 21937,
															"name": "element",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The host element.\n"
															},
															"type": {
																"type": "reference",
																"name": "HTMLElement"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IRenderEngine",
														"id": 2095
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 71709,
													"character": 14
												}
											]
										},
										{
											"id": 21938,
											"name": "createMeasurer",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 21939,
													"name": "createMeasurer",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a measurer."
													},
													"parameters": [
														{
															"id": 21940,
															"name": "element",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The host element.\n"
															},
															"type": {
																"type": "reference",
																"name": "HTMLElement"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IMeasurer",
														"id": 2277
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 71716,
													"character": 22
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												21935,
												21938
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 71701,
											"character": 40
										}
									],
									"implementedBy": [
										{
											"type": "reference",
											"name": "PureCanvasRenderEnginePlugin",
											"id": 21707
										}
									]
								},
								{
									"id": 21720,
									"name": "IStringFormattingPlugin",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the string formatting plugin."
									},
									"children": [
										{
											"id": 21721,
											"name": "create",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 21722,
													"name": "create",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a new string formatting plugin.",
														"returns": "The new string formatting.\n"
													},
													"type": {
														"type": "reference",
														"name": "IStringFormatting",
														"id": 10115
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 70463,
													"character": 14
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												21721
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 70457,
											"character": 44
										}
									]
								},
								{
									"id": 21795,
									"name": "ISymbolPlugin",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the symbol plugin."
									},
									"children": [
										{
											"id": 21796,
											"name": "create",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 21797,
													"name": "create",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Creates a new symbol plugin.",
														"returns": "The new symbol.\n"
													},
													"type": {
														"type": "reference",
														"name": "ISymbol",
														"id": 10124
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 70960,
													"character": 14
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												21796
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 70954,
											"character": 34
										}
									]
								}
							],
							"groups": [
								{
									"title": "Classes",
									"kind": 128,
									"children": [
										18292,
										20929,
										21177,
										21362,
										21387,
										21412,
										21464,
										20948,
										21707,
										21941,
										21741,
										21808
									]
								},
								{
									"title": "Interfaces",
									"kind": 256,
									"children": [
										18322,
										20945,
										21223,
										21376,
										21401,
										21426,
										21480,
										21934,
										21720,
										21795
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 16187,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 16266,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 51033,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 51145,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 51271,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 51518,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 51787,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 51899,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 52443,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 54304,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 55747,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 56340,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 58787,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 58831,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 58875,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 58919,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 58963,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 59007,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 59051,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 59095,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 59139,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 59183,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 59227,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 59271,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 59576,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 59657,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 59705,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 59754,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 59771,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 59916,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 59948,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 59975,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 60001,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 60028,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 60058,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 62888,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 64507,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 64538,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 64569,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 64726,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 64757,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 64788,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 64960,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 64991,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 65022,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 65179,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 65210,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 65241,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 65398,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 65429,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 65460,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 65613,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 65644,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 65675,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 65706,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 65839,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 65917,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 65936,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 66054,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 66131,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 66222,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 66312,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 66329,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 66388,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 66553,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 66755,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 67382,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 67652,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 67731,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 67897,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 67916,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 68080,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 68104,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 68128,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 68152,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 68176,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 68194,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 68212,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 68302,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 68519,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 68598,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 68615,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 68658,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 68737,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 68754,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 68795,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 68874,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 68891,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 68932,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 69041,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 69132,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 69149,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 69258,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 69411,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 69520,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 69766,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 69793,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 69833,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 69873,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 69913,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 69972,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 70031,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 70071,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 70133,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 70174,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 70214,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 70261,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 70292,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 70323,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 70353,
									"character": 17
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 70451,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 70468,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 70649,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 70730,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 70784,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 70838,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 70895,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 70948,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 70965,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 71020,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 71118,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 71194,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 71250,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 71351,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 71447,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 71571,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 71695,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 117494,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 117525,
									"character": 20
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 117599,
									"character": 20
								}
							]
						},
						{
							"id": 22583,
							"name": "shapes",
							"kind": 2,
							"kindString": "Module",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 22972,
									"name": "IShape",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the shape."
									},
									"children": [
										{
											"id": 22973,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 75846,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												22973
											]
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 75842,
											"character": 27
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"kind": 256,
									"children": [
										22972
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 73966,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 74093,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 74160,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 74288,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 74522,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 74606,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 74981,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 75097,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 75261,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 75602,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 75653,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 75685,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 75717,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 75737,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 75768,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 75796,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 75812,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 75836,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 75878,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 75988,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 76070,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 76125,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 76142,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 76159,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 76176,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 76193,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 76210,
									"character": 19
								},
								{
									"fileName": "core/modules/core.ts",
									"line": 76227,
									"character": 19
								}
							]
						},
						{
							"id": 1552,
							"name": "Aggregate",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the aggregate options."
							},
							"children": [
								{
									"id": 1556,
									"name": "Average",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Average value of the numeric values in the group."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9329,
											"character": 15
										}
									],
									"defaultValue": "3"
								},
								{
									"id": 1555,
									"name": "Count",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Count of non-null values in the group."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9325,
											"character": 13
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1564,
									"name": "CountOfAll",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Count of all values in the group.\n(including nulls)."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9366,
											"character": 18
										}
									],
									"defaultValue": "11"
								},
								{
									"id": 1553,
									"name": "List",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "No aggregate."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9317,
											"character": 12
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1557,
									"name": "Max",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Maximum value in the group."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9333,
											"character": 11
										}
									],
									"defaultValue": "4"
								},
								{
									"id": 1558,
									"name": "Min",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Minimum value in the group."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9337,
											"character": 11
										}
									],
									"defaultValue": "5"
								},
								{
									"id": 1562,
									"name": "PopulationStandardDeviation",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Population standard deviation of the values in the group\n(uses the formula based on n)."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9356,
											"character": 35
										}
									],
									"defaultValue": "9"
								},
								{
									"id": 1563,
									"name": "PopulationVariance",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Population variance of the values in the group\n(uses the formula based on n)."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9361,
											"character": 26
										}
									],
									"defaultValue": "10"
								},
								{
									"id": 1559,
									"name": "Range",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Difference between the maximum and minimum numeric values in the group."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9341,
											"character": 13
										}
									],
									"defaultValue": "6"
								},
								{
									"id": 1560,
									"name": "StandardDeviation",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Sample standard deviation of the numeric values in the group\n(uses the formula based on n-1)."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9346,
											"character": 25
										}
									],
									"defaultValue": "7"
								},
								{
									"id": 1554,
									"name": "Sum",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Sum of the numeric values in the group."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9321,
											"character": 11
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 1561,
									"name": "Variance",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Sample variance of the numeric values in the group\n(uses the formula based on n-1)."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9351,
											"character": 16
										}
									],
									"defaultValue": "8"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1556,
										1555,
										1564,
										1553,
										1557,
										1558,
										1562,
										1563,
										1559,
										1560,
										1554,
										1561
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 9313,
									"character": 25
								}
							]
						},
						{
							"id": 1565,
							"name": "AnimationEasing",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents animation easing."
							},
							"children": [
								{
									"id": 1589,
									"name": "EaseInBack",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a back easing in - accelerating from zero velocity."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9473,
											"character": 18
										}
									],
									"defaultValue": "23"
								},
								{
									"id": 1592,
									"name": "EaseInBounce",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a bounce easing in - accelerating from zero velocity."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9485,
											"character": 20
										}
									],
									"defaultValue": "26"
								},
								{
									"id": 1586,
									"name": "EaseInCirc",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a circular easing in - accelerating from zero velocity."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9461,
											"character": 18
										}
									],
									"defaultValue": "20"
								},
								{
									"id": 1571,
									"name": "EaseInCubic",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a cubic easing in - accelerating from zero velocity."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9401,
											"character": 19
										}
									],
									"defaultValue": "5"
								},
								{
									"id": 1595,
									"name": "EaseInElastic",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for an elastic easing in - accelerating from zero velocity."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9497,
											"character": 21
										}
									],
									"defaultValue": "29"
								},
								{
									"id": 1583,
									"name": "EaseInExpo",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for an exponential easing in - accelerating from zero velocity."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9449,
											"character": 18
										}
									],
									"defaultValue": "17"
								},
								{
									"id": 1591,
									"name": "EaseInOutBack",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a back easing in and out - acceleration until halfway, then deceleration."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9481,
											"character": 21
										}
									],
									"defaultValue": "25"
								},
								{
									"id": 1594,
									"name": "EaseInOutBounce",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a bounce easing in and out - acceleration until halfway, then deceleration."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9493,
											"character": 23
										}
									],
									"defaultValue": "28"
								},
								{
									"id": 1588,
									"name": "EaseInOutCirc",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a circular easing in and out - acceleration until halfway, then deceleration."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9469,
											"character": 21
										}
									],
									"defaultValue": "22"
								},
								{
									"id": 1573,
									"name": "EaseInOutCubic",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a cubic easing in and out - acceleration until halfway, then deceleration."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9409,
											"character": 22
										}
									],
									"defaultValue": "7"
								},
								{
									"id": 1597,
									"name": "EaseInOutElastic",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for an elastic easing in and out - acceleration until halfway, then deceleration."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9505,
											"character": 24
										}
									],
									"defaultValue": "31"
								},
								{
									"id": 1585,
									"name": "EaseInOutExpo",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for an exponential easing in and out - acceleration until halfway, then deceleration."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9457,
											"character": 21
										}
									],
									"defaultValue": "19"
								},
								{
									"id": 1570,
									"name": "EaseInOutQuad",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a quadratic easing in and out, acceleration until halfway, then deceleration."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9397,
											"character": 21
										}
									],
									"defaultValue": "4"
								},
								{
									"id": 1576,
									"name": "EaseInOutQuart",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a quartic easing in and out - acceleration until halfway, then deceleration."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9421,
											"character": 22
										}
									],
									"defaultValue": "10"
								},
								{
									"id": 1579,
									"name": "EaseInOutQuint",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a quintic easing in and out - acceleration until halfway, then deceleration."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9433,
											"character": 22
										}
									],
									"defaultValue": "13"
								},
								{
									"id": 1582,
									"name": "EaseInOutSine",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a sinusoidal easing in and out - acceleration until halfway, then deceleration."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9445,
											"character": 21
										}
									],
									"defaultValue": "16"
								},
								{
									"id": 1568,
									"name": "EaseInQuad",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a quadratic easing in, accelerating from zero velocity."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9389,
											"character": 18
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1574,
									"name": "EaseInQuart",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a quartic easing in - accelerating from zero velocity."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9413,
											"character": 19
										}
									],
									"defaultValue": "8"
								},
								{
									"id": 1577,
									"name": "EaseInQuint",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a quintic easing in - accelerating from zero velocity."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9425,
											"character": 19
										}
									],
									"defaultValue": "11"
								},
								{
									"id": 1580,
									"name": "EaseInSine",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a sinusoidal easing in - accelerating from zero velocity."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9437,
											"character": 18
										}
									],
									"defaultValue": "14"
								},
								{
									"id": 1590,
									"name": "EaseOutBack",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a back easing out - decelerating to zero velocity."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9477,
											"character": 19
										}
									],
									"defaultValue": "24"
								},
								{
									"id": 1593,
									"name": "EaseOutBounce",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a bounce easing out - decelerating to zero velocity."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9489,
											"character": 21
										}
									],
									"defaultValue": "27"
								},
								{
									"id": 1587,
									"name": "EaseOutCirc",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a circular easing out - decelerating to zero velocity."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9465,
											"character": 19
										}
									],
									"defaultValue": "21"
								},
								{
									"id": 1572,
									"name": "EaseOutCubic",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a cubic easing out - decelerating to zero velocity."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9405,
											"character": 20
										}
									],
									"defaultValue": "6"
								},
								{
									"id": 1596,
									"name": "EaseOutElastic",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for an elastic easing out - decelerating to zero velocity."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9501,
											"character": 22
										}
									],
									"defaultValue": "30"
								},
								{
									"id": 1584,
									"name": "EaseOutExpo",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for an exponential easing out - decelerating to zero velocity."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9453,
											"character": 19
										}
									],
									"defaultValue": "18"
								},
								{
									"id": 1569,
									"name": "EaseOutQuad",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a quadratic easing out, decelerating to zero velocity."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9393,
											"character": 19
										}
									],
									"defaultValue": "3"
								},
								{
									"id": 1575,
									"name": "EaseOutQuart",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a quartic easing out - decelerating to zero velocity."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9417,
											"character": 20
										}
									],
									"defaultValue": "9"
								},
								{
									"id": 1578,
									"name": "EaseOutQuint",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a quintic easing out - decelerating to zero velocity."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9429,
											"character": 20
										}
									],
									"defaultValue": "12"
								},
								{
									"id": 1581,
									"name": "EaseOutSine",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a sinusoidal easing out - decelerating to zero velocity."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9441,
											"character": 19
										}
									],
									"defaultValue": "15"
								},
								{
									"id": 1566,
									"name": "Linear",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Simple linear tweening, no easing and no acceleration."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9381,
											"character": 14
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1567,
									"name": "Swing",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Easing equation for a swing easing."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9385,
											"character": 13
										}
									],
									"defaultValue": "1"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1589,
										1592,
										1586,
										1571,
										1595,
										1583,
										1591,
										1594,
										1588,
										1573,
										1597,
										1585,
										1570,
										1576,
										1579,
										1582,
										1568,
										1574,
										1577,
										1580,
										1590,
										1593,
										1587,
										1572,
										1596,
										1584,
										1569,
										1575,
										1578,
										1581,
										1566,
										1567
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 9377,
									"character": 31
								}
							]
						},
						{
							"id": 1598,
							"name": "AnimationMode",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents animation mode."
							},
							"children": [
								{
									"id": 1599,
									"name": "All",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "All"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9520,
											"character": 11
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1601,
									"name": "Group",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Group"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9528,
											"character": 13
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1600,
									"name": "Point",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Point."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9524,
											"character": 13
										}
									],
									"defaultValue": "1"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1599,
										1601,
										1600
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 9516,
									"character": 29
								}
							]
						},
						{
							"id": 1602,
							"name": "AxisMode",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the axis mode."
							},
							"children": [
								{
									"id": 1603,
									"name": "Cartesian",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Cartesian axis"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9544,
											"character": 17
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1605,
									"name": "Polygonal",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Polygonal axis"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9552,
											"character": 17
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1604,
									"name": "Radial",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Radial axis"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9548,
											"character": 14
										}
									],
									"defaultValue": "1"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1603,
										1605,
										1604
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 9539,
									"character": 24
								}
							]
						},
						{
							"id": 1606,
							"name": "AxisPosition",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the position of axis."
							},
							"children": [
								{
									"id": 1609,
									"name": "Far",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Far position.\nRight or top for the cartesian charts."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9577,
											"character": 11
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1608,
									"name": "Near",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Near position.\nLeft or bottom for the cartesian charts."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9572,
											"character": 12
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 1607,
									"name": "None",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Hidden axis."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9567,
											"character": 12
										}
									],
									"defaultValue": "0"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1609,
										1608,
										1607
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 9563,
									"character": 28
								}
							]
						},
						{
							"id": 1610,
							"name": "AxisType",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the axis type."
							},
							"children": [
								{
									"id": 1611,
									"name": "X",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Category axis.\nIt represents the horizontal axis normally."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9593,
											"character": 9
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1612,
									"name": "Y",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Value axis.\nIt represents the vertical axis normally."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9598,
											"character": 9
										}
									],
									"defaultValue": "1"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1611,
										1612
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 9588,
									"character": 24
								}
							]
						},
						{
							"id": 1613,
							"name": "ClippingMode",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the clipping mode."
							},
							"children": [
								{
									"id": 1616,
									"name": "Clip",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Clips the plot elements along the bounds of the plot area."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9622,
											"character": 12
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1615,
									"name": "Fit",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Fits the plot elements into the plot area."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9618,
											"character": 11
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 1614,
									"name": "None",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "No clipping.\nThe plot elements may overlap the plot area bounds."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9614,
											"character": 12
										}
									],
									"defaultValue": "0"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1616,
										1615,
										1614
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 9609,
									"character": 28
								}
							]
						},
						{
							"id": 1617,
							"name": "ColorOptionType",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the color option type."
							},
							"children": [
								{
									"id": 1620,
									"name": "CssColor",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Css color."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9645,
											"character": 16
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1618,
									"name": "Linear",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Linear"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9637,
											"character": 14
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1619,
									"name": "Radial",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Radial"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9641,
											"character": 14
										}
									],
									"defaultValue": "1"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1620,
										1618,
										1619
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 9633,
									"character": 31
								}
							]
						},
						{
							"id": 1629,
							"name": "DateMode",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents Date mode."
							},
							"children": [
								{
									"id": 1634,
									"name": "Day",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Date mode is day."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9716,
											"character": 11
										}
									]
								},
								{
									"id": 1635,
									"name": "DayOfWeek",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Date mode is day of week."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9720,
											"character": 17
										}
									]
								},
								{
									"id": 1633,
									"name": "Hour",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Date mode is hour."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9712,
											"character": 12
										}
									]
								},
								{
									"id": 1630,
									"name": "MilliSecond",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Date mode is millisecond."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9700,
											"character": 19
										}
									]
								},
								{
									"id": 1632,
									"name": "Minute",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Date mode is minute."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9708,
											"character": 14
										}
									]
								},
								{
									"id": 1636,
									"name": "Month",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Date mode is month."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9724,
											"character": 13
										}
									]
								},
								{
									"id": 1631,
									"name": "Second",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Date mode is second."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9704,
											"character": 14
										}
									]
								},
								{
									"id": 1637,
									"name": "Year",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Date mode is year."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9728,
											"character": 12
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1634,
										1635,
										1633,
										1630,
										1632,
										1636,
										1631,
										1637
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 9696,
									"character": 24
								}
							]
						},
						{
							"id": 37469,
							"name": "DetailLevel",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the detail level in the reference line overlay."
							},
							"children": [
								{
									"id": 37470,
									"name": "Group",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "A reference line is generated for each group."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 99104,
											"character": 13
										}
									]
								},
								{
									"id": 37471,
									"name": "Total",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "A single reference line is generated for all groups calculated as one."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 99108,
											"character": 13
										}
									]
								},
								{
									"id": 37472,
									"name": "Trellis",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "A single reference line is generated for each trellis cell."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 99112,
											"character": 15
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										37470,
										37471,
										37472
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 99100,
									"character": 27
								}
							]
						},
						{
							"id": 1638,
							"name": "ElementType",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the plot element type."
							},
							"children": [
								{
									"id": 1651,
									"name": "Axis",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Axis."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9796,
											"character": 12
										}
									],
									"defaultValue": "9"
								},
								{
									"id": 1652,
									"name": "AxisLabel",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Axis label."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9800,
											"character": 17
										}
									],
									"defaultValue": "265"
								},
								{
									"id": 1653,
									"name": "AxisTitle",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Axis title."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9804,
											"character": 17
										}
									],
									"defaultValue": "521"
								},
								{
									"id": 1639,
									"name": "Control",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Control"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9743,
											"character": 15
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1648,
									"name": "DataPoint",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Data Point"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9782,
											"character": 17
										}
									],
									"defaultValue": "7"
								},
								{
									"id": 1649,
									"name": "DataPointLabel",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Data Point Label"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9786,
											"character": 22
										}
									],
									"defaultValue": "263"
								},
								{
									"id": 1665,
									"name": "EllipseOverlayItem",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Ellipse Overlay Item"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9855,
											"character": 26
										}
									],
									"defaultValue": "785"
								},
								{
									"id": 1641,
									"name": "Footter",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Footer"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9751,
											"character": 15
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1654,
									"name": "GridLine",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Grid Line"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9809,
											"character": 16
										}
									],
									"defaultValue": "10"
								},
								{
									"id": 1640,
									"name": "Header",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Header"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9747,
											"character": 14
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 1666,
									"name": "ImageOverlayItem",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Image Overlay Item"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9859,
											"character": 24
										}
									],
									"defaultValue": "1041"
								},
								{
									"id": 1643,
									"name": "Legend",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Legend"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9760,
											"character": 14
										}
									],
									"defaultValue": "4"
								},
								{
									"id": 1644,
									"name": "LegendItem",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Legend item"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9764,
											"character": 18
										}
									],
									"defaultValue": "260"
								},
								{
									"id": 1645,
									"name": "LegendTitle",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Legend title."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9768,
											"character": 19
										}
									],
									"defaultValue": "516"
								},
								{
									"id": 1667,
									"name": "LineOverlayItem",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Line Overlay Item"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9863,
											"character": 23
										}
									],
									"defaultValue": "1297"
								},
								{
									"id": 1668,
									"name": "NeedleOverlayItem",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Needle Overlay Item"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9867,
											"character": 25
										}
									],
									"defaultValue": "1553"
								},
								{
									"id": 1662,
									"name": "OverlayItem",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Overlay Item"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9843,
											"character": 19
										}
									],
									"defaultValue": "17"
								},
								{
									"id": 1647,
									"name": "Plot",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Plot"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9777,
											"character": 12
										}
									],
									"defaultValue": "6"
								},
								{
									"id": 1642,
									"name": "PlotArea",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "PlotArea"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9755,
											"character": 16
										}
									],
									"defaultValue": "3"
								},
								{
									"id": 1646,
									"name": "PlotsPane",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Plot"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9773,
											"character": 17
										}
									],
									"defaultValue": "5"
								},
								{
									"id": 1664,
									"name": "RectangleOverlayItem",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Rectangle Overlay Item"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9851,
											"character": 28
										}
									],
									"defaultValue": "529"
								},
								{
									"id": 1670,
									"name": "ReferenceLineOverlayItem",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Reference line Item"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9875,
											"character": 32
										}
									],
									"defaultValue": "2065"
								},
								{
									"id": 1650,
									"name": "Series",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Series"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9791,
											"character": 14
										}
									],
									"defaultValue": "8"
								},
								{
									"id": 1663,
									"name": "TextOverlayItem",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Text Overlay Item"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9847,
											"character": 23
										}
									],
									"defaultValue": "273"
								},
								{
									"id": 1655,
									"name": "Trellis",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Trellis"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9814,
											"character": 15
										}
									],
									"defaultValue": "16"
								},
								{
									"id": 1660,
									"name": "TrellisCell",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Trellis Cell"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9834,
											"character": 19
										}
									],
									"defaultValue": "1296"
								},
								{
									"id": 1659,
									"name": "TrellisColumn",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Trellis Cell"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9830,
											"character": 21
										}
									],
									"defaultValue": "1040"
								},
								{
									"id": 1657,
									"name": "TrellisColumnHeader",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Trellis Column Header"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9822,
											"character": 27
										}
									],
									"defaultValue": "528"
								},
								{
									"id": 1661,
									"name": "TrellisCorner",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Trellis Corner"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9838,
											"character": 21
										}
									],
									"defaultValue": "1552"
								},
								{
									"id": 1658,
									"name": "TrellisRow",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Trellis Cell"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9826,
											"character": 18
										}
									],
									"defaultValue": "784"
								},
								{
									"id": 1656,
									"name": "TrellisRowHeader",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Trellis Row Header"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9818,
											"character": 24
										}
									],
									"defaultValue": "272"
								},
								{
									"id": 1669,
									"name": "TrendLineOverlayItem",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Trend line Item"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9871,
											"character": 28
										}
									],
									"defaultValue": "1809"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1651,
										1652,
										1653,
										1639,
										1648,
										1649,
										1665,
										1641,
										1654,
										1640,
										1666,
										1643,
										1644,
										1645,
										1667,
										1668,
										1662,
										1647,
										1642,
										1646,
										1664,
										1670,
										1650,
										1663,
										1655,
										1660,
										1659,
										1657,
										1661,
										1658,
										1656,
										1669
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 9739,
									"character": 27
								}
							]
						},
						{
							"id": 15811,
							"name": "ErrorBarDirection",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the direction of error bar."
							},
							"children": [
								{
									"id": 15812,
									"name": "Both",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Both"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 53578,
											"character": 12
										}
									]
								},
								{
									"id": 15814,
									"name": "Minus",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Minus"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 53586,
											"character": 13
										}
									]
								},
								{
									"id": 15813,
									"name": "Plus",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Plus"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 53582,
											"character": 12
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										15812,
										15814,
										15813
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 53574,
									"character": 33
								}
							]
						},
						{
							"id": 15815,
							"name": "ErrorBarErrorType",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the type of error bar."
							},
							"children": [
								{
									"id": 15819,
									"name": "Fixed",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Fixed"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 53613,
											"character": 13
										}
									]
								},
								{
									"id": 15818,
									"name": "Percentage",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Percentage"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 53609,
											"character": 18
										}
									]
								},
								{
									"id": 15816,
									"name": "StandardDeviation",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "StandardDeviation"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 53601,
											"character": 25
										}
									]
								},
								{
									"id": 15817,
									"name": "StandardError",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "StandardError"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 53605,
											"character": 21
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										15819,
										15818,
										15816,
										15817
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 53597,
									"character": 33
								}
							]
						},
						{
							"id": 15820,
							"name": "ErrorBarOrientation",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents orientation of error bar."
							},
							"children": [
								{
									"id": 15821,
									"name": "Auto",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 53625,
											"character": 12
										}
									]
								},
								{
									"id": 15822,
									"name": "Horizontal",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Horizontal orientation"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 53629,
											"character": 18
										}
									]
								},
								{
									"id": 15823,
									"name": "Vertical",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Vertical orientation"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 53633,
											"character": 16
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										15821,
										15822,
										15823
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 53624,
									"character": 35
								}
							]
						},
						{
							"id": 1671,
							"name": "FontStyle",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the font style type."
							},
							"children": [
								{
									"id": 1673,
									"name": "Italic",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Italic"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9894,
											"character": 14
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 1672,
									"name": "Normal",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Normal"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9890,
											"character": 14
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1674,
									"name": "Oblique",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Oblique"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9898,
											"character": 15
										}
									],
									"defaultValue": "2"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1673,
										1672,
										1674
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 9886,
									"character": 25
								}
							]
						},
						{
							"id": 1675,
							"name": "FontWeight",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the font weight type."
							},
							"children": [
								{
									"id": 1677,
									"name": "Bold",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Bold"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9917,
											"character": 12
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 1676,
									"name": "Normal",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Normal"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9913,
											"character": 14
										}
									],
									"defaultValue": "0"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1677,
										1676
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 9909,
									"character": 26
								}
							]
						},
						{
							"id": 1687,
							"name": "GradientExtentKeyword",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the extend keyword in the radial gradient."
							},
							"children": [
								{
									"id": 1689,
									"name": "ClosestCorner",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The gradient's ending shape is sized so that it exactly meets the closest corner of the box from its center."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9978,
											"character": 21
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 1688,
									"name": "ClosestSide",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The gradient's ending shape meets the side of the box closest to its center."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9974,
											"character": 19
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1691,
									"name": "FarthestCorner",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The gradient's ending shape is sized so that it exactly meets the farthest corner of the box from its center."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9986,
											"character": 22
										}
									],
									"defaultValue": "3"
								},
								{
									"id": 1690,
									"name": "FarthestSide",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The gradient's ending shape meets the side of the box farthest to its center."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9982,
											"character": 20
										}
									],
									"defaultValue": "2"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1689,
										1688,
										1691,
										1690
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 9970,
									"character": 37
								}
							]
						},
						{
							"id": 1692,
							"name": "GradientPosition",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the position in the radial gradient."
							},
							"children": [
								{
									"id": 1697,
									"name": "Bottom",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Bottom."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10017,
											"character": 14
										}
									],
									"defaultValue": "4"
								},
								{
									"id": 1693,
									"name": "Center",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Center."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10001,
											"character": 14
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1694,
									"name": "Left",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Left."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10005,
											"character": 12
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 1700,
									"name": "LeftBottom",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Left bottom."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10029,
											"character": 18
										}
									],
									"defaultValue": "7"
								},
								{
									"id": 1698,
									"name": "LeftTop",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Left top."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10021,
											"character": 15
										}
									],
									"defaultValue": "5"
								},
								{
									"id": 1695,
									"name": "Right",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Right."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10009,
											"character": 13
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1701,
									"name": "RightBottom",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Right bottom."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10033,
											"character": 19
										}
									],
									"defaultValue": "8"
								},
								{
									"id": 1699,
									"name": "RightTop",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Right Top."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10025,
											"character": 16
										}
									],
									"defaultValue": "6"
								},
								{
									"id": 1696,
									"name": "Top",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Top."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10013,
											"character": 11
										}
									],
									"defaultValue": "3"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1697,
										1693,
										1694,
										1700,
										1698,
										1695,
										1701,
										1699,
										1696
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 9997,
									"character": 32
								}
							]
						},
						{
							"id": 1678,
							"name": "GradientSideOrCorner",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the side or corner in the linear gradient."
							},
							"children": [
								{
									"id": 1682,
									"name": "ToBottom",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Bottom side."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9944,
											"character": 16
										}
									],
									"defaultValue": "268435456"
								},
								{
									"id": 1679,
									"name": "ToLeft",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Left side."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9932,
											"character": 14
										}
									],
									"defaultValue": "4026531840"
								},
								{
									"id": 1685,
									"name": "ToLeftBottom",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Left bottom corner."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9956,
											"character": 20
										}
									],
									"defaultValue": "4043309056"
								},
								{
									"id": 1683,
									"name": "ToLeftTop",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Left top corner."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9948,
											"character": 17
										}
									],
									"defaultValue": "4076863488"
								},
								{
									"id": 1680,
									"name": "ToRight",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Right side."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9936,
											"character": 15
										}
									],
									"defaultValue": "1879048192"
								},
								{
									"id": 1686,
									"name": "ToRightBottom",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Right bottom corner."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9960,
											"character": 21
										}
									],
									"defaultValue": "1895825408"
								},
								{
									"id": 1684,
									"name": "ToRightTop",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Right Top corner."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9952,
											"character": 18
										}
									],
									"defaultValue": "1929379840"
								},
								{
									"id": 1681,
									"name": "ToTop",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Top side."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 9940,
											"character": 13
										}
									],
									"defaultValue": "805306368"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1682,
										1679,
										1685,
										1683,
										1680,
										1686,
										1684,
										1681
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 9928,
									"character": 36
								}
							]
						},
						{
							"id": 1702,
							"name": "Group",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the Grouping options."
							},
							"children": [
								{
									"id": 1703,
									"name": "Cluster",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Cluster grouping.\nIt is default value."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10049,
											"character": 15
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1704,
									"name": "Stack",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Stacked grouping."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10053,
											"character": 13
										}
									],
									"defaultValue": "1"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1703,
										1704
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 10044,
									"character": 21
								}
							]
						},
						{
							"id": 1705,
							"name": "HAlign",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents horizontal alignment."
							},
							"children": [
								{
									"id": 1707,
									"name": "Center",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Center alignemnt"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10072,
											"character": 14
										}
									]
								},
								{
									"id": 1706,
									"name": "Left",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Left alignment"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10068,
											"character": 12
										}
									]
								},
								{
									"id": 1708,
									"name": "Right",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Right alignment"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10076,
											"character": 13
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1707,
										1706,
										1708
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 10064,
									"character": 22
								}
							]
						},
						{
							"id": 1709,
							"name": "HeaderFooterWidthOptionType",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the width Type of header or footer."
							},
							"children": [
								{
									"id": 1710,
									"name": "Auto",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Auto"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10091,
											"character": 12
										}
									],
									"defaultValue": "0"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1710
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 10087,
									"character": 43
								}
							]
						},
						{
							"id": 1711,
							"name": "LegendType",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents legend type."
							},
							"children": [
								{
									"id": 1712,
									"name": "Color",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Color legend."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10106,
											"character": 13
										}
									]
								},
								{
									"id": 1715,
									"name": "Overlay",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Overlay legend."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10118,
											"character": 15
										}
									]
								},
								{
									"id": 1714,
									"name": "Shape",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Shape legend."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10114,
											"character": 13
										}
									]
								},
								{
									"id": 1713,
									"name": "Size",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Size legend."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10110,
											"character": 12
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1712,
										1715,
										1714,
										1713
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 10102,
									"character": 26
								}
							]
						},
						{
							"id": 1716,
							"name": "LineAspect",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Specifies type of the line."
							},
							"children": [
								{
									"id": 1717,
									"name": "Default",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The default line type indicating the straight lines from the point to point."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10133,
											"character": 15
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1718,
									"name": "Spline",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The spline line type indicating the smoothed lines from the point to point."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10137,
											"character": 14
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 1721,
									"name": "StepCenter",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The step line type indicating half horizontal lines, the vertical line and half horizontal line. The data point is centered on the step."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10149,
											"character": 18
										}
									],
									"defaultValue": "4"
								},
								{
									"id": 1719,
									"name": "StepLeft",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The step line type indicating the vertical lines before the horizontal line."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10141,
											"character": 16
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1720,
									"name": "StepRight",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The step line type indicating the horizontal lines before the vertical line."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10145,
											"character": 17
										}
									],
									"defaultValue": "3"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1717,
										1718,
										1721,
										1719,
										1720
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 10129,
									"character": 26
								}
							]
						},
						{
							"id": 1730,
							"name": "LinePosition",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Line position"
							},
							"children": [
								{
									"id": 1731,
									"name": "Auto",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Automatical"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10212,
											"character": 12
										}
									]
								},
								{
									"id": 1732,
									"name": "Center",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Center."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10216,
											"character": 14
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1731,
										1732
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 10208,
									"character": 28
								}
							]
						},
						{
							"id": 1733,
							"name": "OrderType",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents order type."
							},
							"children": [
								{
									"id": 1734,
									"name": "Ascending",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Ascending order."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10231,
											"character": 17
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1735,
									"name": "Descending",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Descending order."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10235,
											"character": 18
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 1736,
									"name": "None",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "None"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10239,
											"character": 12
										}
									],
									"defaultValue": "2"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1734,
										1735,
										1736
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 10227,
									"character": 25
								}
							]
						},
						{
							"id": 1737,
							"name": "Orientation",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents orientation of plot element."
							},
							"children": [
								{
									"id": 1738,
									"name": "Horizontal",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Horizontal orientation"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10254,
											"character": 18
										}
									]
								},
								{
									"id": 1739,
									"name": "Vertical",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Vertical orientation"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10258,
											"character": 16
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1738,
										1739
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 10250,
									"character": 27
								}
							]
						},
						{
							"id": 1740,
							"name": "OverlappingLabels",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents how to handle overlapping labels."
							},
							"children": [
								{
									"id": 1741,
									"name": "Auto",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Hide overlapping labels.\nIt is default value."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10274,
											"character": 12
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1743,
									"name": "Hide",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Hides all data labels that overlap each other data labels."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10282,
											"character": 12
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1744,
									"name": "HideAll",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Hides all data labels that overlap all text labels."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10286,
											"character": 15
										}
									],
									"defaultValue": "3"
								},
								{
									"id": 1742,
									"name": "Show",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Show all labels, including overlapping ones."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10278,
											"character": 12
										}
									],
									"defaultValue": "1"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1741,
										1743,
										1744,
										1742
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 10269,
									"character": 33
								}
							]
						},
						{
							"id": 1757,
							"name": "OverlayDisplay",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the overlay display."
							},
							"children": [
								{
									"id": 1759,
									"name": "Back",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Back."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10367,
											"character": 12
										}
									]
								},
								{
									"id": 1758,
									"name": "Front",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Front."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10363,
											"character": 13
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1759,
										1758
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 10359,
									"character": 30
								}
							]
						},
						{
							"id": 1745,
							"name": "OverlayLabelDisplay",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the aggregate options."
							},
							"children": [
								{
									"id": 1748,
									"name": "Both",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Both."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10309,
											"character": 12
										}
									]
								},
								{
									"id": 1746,
									"name": "Legend",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Legend."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10301,
											"character": 14
										}
									]
								},
								{
									"id": 1749,
									"name": "None",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "None."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10313,
											"character": 12
										}
									]
								},
								{
									"id": 1747,
									"name": "Plot",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Plot."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10305,
											"character": 12
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1748,
										1746,
										1749,
										1747
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 10297,
									"character": 35
								}
							]
						},
						{
							"id": 1750,
							"name": "OverlayLabelPosition",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the aggregate options."
							},
							"children": [
								{
									"id": 1755,
									"name": "BottomCenter",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Bottom center."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10344,
											"character": 20
										}
									]
								},
								{
									"id": 1754,
									"name": "BottomLeft",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Bottom left."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10340,
											"character": 18
										}
									]
								},
								{
									"id": 1756,
									"name": "BottomRight",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Bottom right."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10348,
											"character": 19
										}
									]
								},
								{
									"id": 1752,
									"name": "TopCenter",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Top center."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10332,
											"character": 17
										}
									]
								},
								{
									"id": 1751,
									"name": "TopLeft",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Top left."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10328,
											"character": 15
										}
									]
								},
								{
									"id": 1753,
									"name": "TopRight",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Top right."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10336,
											"character": 16
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1755,
										1754,
										1756,
										1752,
										1751,
										1753
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 10324,
									"character": 36
								}
							]
						},
						{
							"id": 1760,
							"name": "Palette",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents predefined palette."
							},
							"children": [
								{
									"id": 1799,
									"name": "Aspect",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Aspect."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10534,
											"character": 14
										}
									],
									"defaultValue": "38"
								},
								{
									"id": 1781,
									"name": "Blue",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Blue."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10462,
											"character": 12
										}
									],
									"defaultValue": "20"
								},
								{
									"id": 1782,
									"name": "Blue2",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Blue2."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10466,
											"character": 13
										}
									],
									"defaultValue": "21"
								},
								{
									"id": 1783,
									"name": "BlueGreen",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "BlueGreen."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10470,
											"character": 17
										}
									],
									"defaultValue": "22"
								},
								{
									"id": 1780,
									"name": "BlueWarm",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "BlueWarm."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10458,
											"character": 16
										}
									],
									"defaultValue": "19"
								},
								{
									"id": 1776,
									"name": "Cerulan",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Cerulan."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10441,
											"character": 15
										}
									],
									"defaultValue": "15"
								},
								{
									"id": 1762,
									"name": "Cocoa",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Cocoa."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10385,
											"character": 13
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 1763,
									"name": "Coral",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Coral."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10389,
											"character": 13
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1772,
									"name": "Cyborg",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Cyborg."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10425,
											"character": 14
										}
									],
									"defaultValue": "11"
								},
								{
									"id": 1764,
									"name": "Dark",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Dark."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10393,
											"character": 12
										}
									],
									"defaultValue": "3"
								},
								{
									"id": 1775,
									"name": "Darkly",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Darkly."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10437,
											"character": 14
										}
									],
									"defaultValue": "14"
								},
								{
									"id": 1774,
									"name": "Flatly",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Flatly."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10433,
											"character": 14
										}
									],
									"defaultValue": "13"
								},
								{
									"id": 1779,
									"name": "Grayscale",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Grayscale."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10454,
											"character": 17
										}
									],
									"defaultValue": "18"
								},
								{
									"id": 1784,
									"name": "Green",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Green."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10474,
											"character": 13
										}
									],
									"defaultValue": "23"
								},
								{
									"id": 1785,
									"name": "GreenYellow",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "GreenYellow."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10478,
											"character": 19
										}
									],
									"defaultValue": "24"
								},
								{
									"id": 1765,
									"name": "HighContrast",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "HighContrast."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10397,
											"character": 20
										}
									],
									"defaultValue": "4"
								},
								{
									"id": 1766,
									"name": "Light",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Light."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10401,
											"character": 13
										}
									],
									"defaultValue": "5"
								},
								{
									"id": 1797,
									"name": "Marquee",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Marquee."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10526,
											"character": 15
										}
									],
									"defaultValue": "36"
								},
								{
									"id": 1795,
									"name": "Median",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Median."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10518,
											"character": 14
										}
									],
									"defaultValue": "34"
								},
								{
									"id": 1767,
									"name": "Midnight",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Midnight."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10405,
											"character": 16
										}
									],
									"defaultValue": "6"
								},
								{
									"id": 1768,
									"name": "Modern",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Modern."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10409,
											"character": 14
										}
									],
									"defaultValue": "7"
								},
								{
									"id": 1777,
									"name": "Office",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Office.\nIt is the default value."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10446,
											"character": 14
										}
									],
									"defaultValue": "16"
								},
								{
									"id": 1778,
									"name": "Office2010",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Office2010."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10450,
											"character": 18
										}
									],
									"defaultValue": "17"
								},
								{
									"id": 1788,
									"name": "Orange",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Orange."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10490,
											"character": 14
										}
									],
									"defaultValue": "27"
								},
								{
									"id": 1789,
									"name": "OrangeRed",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "OrangeRed."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10494,
											"character": 17
										}
									],
									"defaultValue": "28"
								},
								{
									"id": 1769,
									"name": "Organic",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Organic."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10413,
											"character": 15
										}
									],
									"defaultValue": "8"
								},
								{
									"id": 1796,
									"name": "Paper",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Paper."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10522,
											"character": 13
										}
									],
									"defaultValue": "35"
								},
								{
									"id": 1791,
									"name": "Red",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Red."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10502,
											"character": 11
										}
									],
									"defaultValue": "30"
								},
								{
									"id": 1790,
									"name": "RedOrange",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "RedOrange."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10498,
											"character": 17
										}
									],
									"defaultValue": "29"
								},
								{
									"id": 1792,
									"name": "RedViolet",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "RedViolet."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10506,
											"character": 17
										}
									],
									"defaultValue": "31"
								},
								{
									"id": 1770,
									"name": "Slate",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Slate."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10417,
											"character": 13
										}
									],
									"defaultValue": "9"
								},
								{
									"id": 1798,
									"name": "Slipstream",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Slipstream."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10530,
											"character": 18
										}
									],
									"defaultValue": "37"
								},
								{
									"id": 1761,
									"name": "Standard",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Standard."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10381,
											"character": 16
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1773,
									"name": "Superhero",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Superhero."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10429,
											"character": 17
										}
									],
									"defaultValue": "12"
								},
								{
									"id": 1793,
									"name": "Violet",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Violet."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10510,
											"character": 14
										}
									],
									"defaultValue": "32"
								},
								{
									"id": 1794,
									"name": "Violet2",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Violet2."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10514,
											"character": 15
										}
									],
									"defaultValue": "33"
								},
								{
									"id": 1786,
									"name": "Yellow",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Yellow."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10482,
											"character": 14
										}
									],
									"defaultValue": "25"
								},
								{
									"id": 1787,
									"name": "YellowOrange",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "YellowOrange."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10486,
											"character": 20
										}
									],
									"defaultValue": "26"
								},
								{
									"id": 1771,
									"name": "Zen",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Zen."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10421,
											"character": 11
										}
									],
									"defaultValue": "10"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1799,
										1781,
										1782,
										1783,
										1780,
										1776,
										1762,
										1763,
										1772,
										1764,
										1775,
										1774,
										1779,
										1784,
										1785,
										1765,
										1766,
										1797,
										1795,
										1767,
										1768,
										1777,
										1778,
										1788,
										1789,
										1769,
										1796,
										1791,
										1790,
										1792,
										1770,
										1798,
										1761,
										1773,
										1793,
										1794,
										1786,
										1787,
										1771
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 10377,
									"character": 23
								}
							]
						},
						{
							"id": 1803,
							"name": "PercentileType",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the Precentile type."
							},
							"children": [
								{
									"id": 1804,
									"name": "Exclusive",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "exclusive"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10565,
											"character": 17
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1805,
									"name": "Inclusive",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Inclusive"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10569,
											"character": 17
										}
									],
									"defaultValue": "1"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1804,
										1805
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 10561,
									"character": 30
								}
							]
						},
						{
							"id": 1806,
							"name": "Placement",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents placement of Annotation."
							},
							"children": [
								{
									"id": 1807,
									"name": "Auto",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Auto"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10584,
											"character": 12
										}
									]
								},
								{
									"id": 1811,
									"name": "Bottom",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Bottom"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10600,
											"character": 14
										}
									]
								},
								{
									"id": 1808,
									"name": "Left",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Left"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10588,
											"character": 12
										}
									]
								},
								{
									"id": 1810,
									"name": "Right",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Right"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10596,
											"character": 13
										}
									]
								},
								{
									"id": 1809,
									"name": "Top",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Top"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10592,
											"character": 11
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1807,
										1811,
										1808,
										1810,
										1809
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 10580,
									"character": 25
								}
							]
						},
						{
							"id": 1812,
							"name": "PlotType",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the plot types."
							},
							"children": [
								{
									"id": 1816,
									"name": "Area",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Area plot."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10627,
											"character": 12
										}
									]
								},
								{
									"id": 1813,
									"name": "Bar",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Bar plot."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10615,
											"character": 11
										}
									]
								},
								{
									"id": 1814,
									"name": "Line",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Line plot."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10619,
											"character": 12
										}
									]
								},
								{
									"id": 1815,
									"name": "Scatter",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Scatter plot."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10623,
											"character": 15
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1816,
										1813,
										1814,
										1815
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 10611,
									"character": 24
								}
							]
						},
						{
							"id": 1817,
							"name": "Position",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents position of plot elements."
							},
							"children": [
								{
									"id": 1821,
									"name": "Bottom",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Bottom"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10654,
											"character": 14
										}
									]
								},
								{
									"id": 1818,
									"name": "Left",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Left"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10642,
											"character": 12
										}
									]
								},
								{
									"id": 1822,
									"name": "None",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Hidden"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10658,
											"character": 12
										}
									]
								},
								{
									"id": 1820,
									"name": "Right",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Right"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10650,
											"character": 13
										}
									]
								},
								{
									"id": 1819,
									"name": "Top",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Top"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10646,
											"character": 11
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1821,
										1818,
										1822,
										1820,
										1819
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 10638,
									"character": 24
								}
							]
						},
						{
							"id": 1823,
							"name": "ReferenceLineAggregate",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the aggregate options."
							},
							"children": [
								{
									"id": 1826,
									"name": "Average",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Average value of the numeric values in the group."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10681,
											"character": 15
										}
									],
									"defaultValue": "3"
								},
								{
									"id": 1825,
									"name": "Count",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Count of non-null values in the group."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10677,
											"character": 13
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1827,
									"name": "Max",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Maximum value in the group."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10685,
											"character": 11
										}
									],
									"defaultValue": "4"
								},
								{
									"id": 1829,
									"name": "Median",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Median of all values in the group"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10693,
											"character": 14
										}
									],
									"defaultValue": "6"
								},
								{
									"id": 1828,
									"name": "Min",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Minimum value in the group."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10689,
											"character": 11
										}
									],
									"defaultValue": "5"
								},
								{
									"id": 1830,
									"name": "Percentile",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Percentile of all values in the group"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10697,
											"character": 18
										}
									],
									"defaultValue": "7"
								},
								{
									"id": 1824,
									"name": "Sum",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Sum of the numeric values in the group."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10673,
											"character": 11
										}
									],
									"defaultValue": "1"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1826,
										1825,
										1827,
										1829,
										1828,
										1830,
										1824
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 10669,
									"character": 38
								}
							]
						},
						{
							"id": 1831,
							"name": "RenderMethod",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the render method."
							},
							"children": [
								{
									"id": 1833,
									"name": "Canvas",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Render to canvas"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10717,
											"character": 14
										}
									]
								},
								{
									"id": 1832,
									"name": "SVG",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Render to SVG.\nIt is default value."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10713,
											"character": 11
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1833,
										1832
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 10708,
									"character": 28
								}
							]
						},
						{
							"id": 1834,
							"name": "SelectionMode",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the selection mode."
							},
							"children": [
								{
									"id": 1844,
									"name": "Category",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Select all corresponding data points related the category."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10768,
											"character": 16
										}
									]
								},
								{
									"id": 1839,
									"name": "Color",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Select all the data points with the same color"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10748,
											"character": 13
										}
									]
								},
								{
									"id": 1845,
									"name": "Custom",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Custom the Selection behavior"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10772,
											"character": 14
										}
									]
								},
								{
									"id": 1838,
									"name": "Group",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Select a group of data points"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10744,
											"character": 13
										}
									]
								},
								{
									"id": 1843,
									"name": "LegendMultiple",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Select all corresponding data points related the multiple legend."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10764,
											"character": 22
										}
									]
								},
								{
									"id": 1842,
									"name": "LegendSingle",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Select all corresponding data points related the single legend."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10760,
											"character": 20
										}
									]
								},
								{
									"id": 1835,
									"name": "None",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Disable the selection behavior"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10732,
											"character": 12
										}
									]
								},
								{
									"id": 1836,
									"name": "Point",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Select one point"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10736,
											"character": 13
										}
									]
								},
								{
									"id": 1837,
									"name": "Points",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Select multi-points with ctrl or command"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10740,
											"character": 14
										}
									]
								},
								{
									"id": 1840,
									"name": "Shape",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Select all the data points with the same shape"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10752,
											"character": 13
										}
									]
								},
								{
									"id": 1841,
									"name": "Size",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Select all the data points with the same size"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10756,
											"character": 12
										}
									]
								},
								{
									"id": 1846,
									"name": "Trellis",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Select all corresponding data points related the trellis header."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10776,
											"character": 15
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1844,
										1839,
										1845,
										1838,
										1843,
										1842,
										1835,
										1836,
										1837,
										1840,
										1841,
										1846
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 10728,
									"character": 29
								}
							]
						},
						{
							"id": 1847,
							"name": "ShowNulls",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents how to show null or empty values."
							},
							"children": [
								{
									"id": 1850,
									"name": "Connected",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Connects missing data points.\nIt is default value."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10800,
											"character": 17
										}
									]
								},
								{
									"id": 1848,
									"name": "Gaps",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Show the null or empty values as a gap."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10791,
											"character": 12
										}
									]
								},
								{
									"id": 1849,
									"name": "Zeros",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Show null or empty as if they were 0."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10795,
											"character": 13
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1850,
										1848,
										1849
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 10787,
									"character": 25
								}
							]
						},
						{
							"id": 1851,
							"name": "SortOrder",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the sort order of the items in the legend."
							},
							"children": [
								{
									"id": 1854,
									"name": "Ascending",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents sorting the items in the legend alphabetically in ascending order."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10823,
											"character": 17
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1855,
									"name": "Descending",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents sorting the items in the legend alphabetically in descending order."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10827,
											"character": 18
										}
									],
									"defaultValue": "3"
								},
								{
									"id": 1852,
									"name": "None",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the default sort order of the items in the legend."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10815,
											"character": 12
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1853,
									"name": "Reversed",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the reversed sort order of the items in the legend."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10819,
											"character": 16
										}
									],
									"defaultValue": "1"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1854,
										1855,
										1852,
										1853
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 10811,
									"character": 25
								}
							]
						},
						{
							"id": 1856,
							"name": "TextDecoration",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the font text decoration."
							},
							"children": [
								{
									"id": 1859,
									"name": "LineThrough",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "line-through"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10850,
											"character": 19
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1857,
									"name": "Normal",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Normal"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10842,
											"character": 14
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1858,
									"name": "Overline",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "overline"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10846,
											"character": 16
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 1860,
									"name": "Underline",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Underline"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10854,
											"character": 17
										}
									],
									"defaultValue": "4"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1859,
										1857,
										1858,
										1860
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 10838,
									"character": 30
								}
							]
						},
						{
							"id": 1861,
							"name": "TextOverflow",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the text overflow."
							},
							"children": [
								{
									"id": 1862,
									"name": "Clip",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "The overflow text is clipped.\nIt is default value."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10870,
											"character": 12
										}
									]
								},
								{
									"id": 1863,
									"name": "Ellipsis",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Clipped overflow text and replace it with ellipsis."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10874,
											"character": 16
										}
									]
								},
								{
									"id": 1864,
									"name": "Wrap",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Overflow text wrapped to a new line."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10878,
											"character": 12
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1862,
										1863,
										1864
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 10865,
									"character": 28
								}
							]
						},
						{
							"id": 1865,
							"name": "TextPosition",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the text position."
							},
							"children": [
								{
									"id": 1866,
									"name": "Auto",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Automatic principle: If outside position is out of plot border, use inside."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10893,
											"character": 12
										}
									]
								},
								{
									"id": 1868,
									"name": "Center",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Center of the element."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10901,
											"character": 14
										}
									]
								},
								{
									"id": 1869,
									"name": "Inside",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Insize of the element."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10905,
											"character": 14
										}
									]
								},
								{
									"id": 1867,
									"name": "Outside",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Outside of the element."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10897,
											"character": 15
										}
									]
								},
								{
									"id": 1870,
									"name": "Smart",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Smart for radial chart"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10909,
											"character": 13
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1866,
										1868,
										1869,
										1867,
										1870
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 10889,
									"character": 28
								}
							]
						},
						{
							"id": 1871,
							"name": "TickMark",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents whether and where the axis tick marks appear."
							},
							"children": [
								{
									"id": 1875,
									"name": "Cross",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Tick marks cross the axis."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10936,
											"character": 13
										}
									]
								},
								{
									"id": 1874,
									"name": "Inside",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Tick marks appear inside the plot area."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10932,
											"character": 14
										}
									]
								},
								{
									"id": 1872,
									"name": "None",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "No tick marks appear."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10924,
											"character": 12
										}
									]
								},
								{
									"id": 1873,
									"name": "Outside",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Tick marks appear outside the plot area."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10928,
											"character": 15
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1875,
										1874,
										1872,
										1873
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 10920,
									"character": 24
								}
							]
						},
						{
							"id": 1876,
							"name": "VAlign",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents vertical alignment."
							},
							"children": [
								{
									"id": 1879,
									"name": "Bottom",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Bottom alignment"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10959,
											"character": 14
										}
									]
								},
								{
									"id": 1878,
									"name": "Middle",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Middle alignemnt"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10955,
											"character": 14
										}
									]
								},
								{
									"id": 1877,
									"name": "Top",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Top alignment"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10951,
											"character": 11
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1879,
										1878,
										1877
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 10947,
									"character": 22
								}
							]
						},
						{
							"id": 1880,
							"name": "ValueOptionType",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the value option type."
							},
							"children": [
								{
									"id": 1886,
									"name": "Available",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Available"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10994,
											"character": 17
										}
									],
									"defaultValue": "5"
								},
								{
									"id": 1882,
									"name": "Date",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Date"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10978,
											"character": 12
										}
									],
									"defaultValue": "1"
								},
								{
									"id": 1885,
									"name": "Enum",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Enum"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10990,
											"character": 12
										}
									],
									"defaultValue": "4"
								},
								{
									"id": 1881,
									"name": "Number",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Number"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10974,
											"character": 14
										}
									],
									"defaultValue": "0"
								},
								{
									"id": 1883,
									"name": "Percentage",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Percentage"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10982,
											"character": 18
										}
									],
									"defaultValue": "2"
								},
								{
									"id": 1884,
									"name": "Pixel",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Pixel"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 10986,
											"character": 13
										}
									],
									"defaultValue": "3"
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1886,
										1882,
										1885,
										1881,
										1883,
										1884
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 10970,
									"character": 31
								}
							]
						},
						{
							"id": 1887,
							"name": "ValueScaleType",
							"kind": 4,
							"kindString": "Enumeration",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the scale type."
							},
							"children": [
								{
									"id": 1889,
									"name": "Linear",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Linear scale."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 11013,
											"character": 14
										}
									]
								},
								{
									"id": 1890,
									"name": "Logarithmic",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Logarithmic scale."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 11017,
											"character": 19
										}
									]
								},
								{
									"id": 1888,
									"name": "Ordinal",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Ordinal scale."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 11009,
											"character": 15
										}
									]
								},
								{
									"id": 1891,
									"name": "Percentage",
									"kind": 16,
									"kindString": "Enumeration member",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Percentage scale."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 11021,
											"character": 18
										}
									]
								}
							],
							"groups": [
								{
									"title": "Enumeration members",
									"kind": 16,
									"children": [
										1889,
										1890,
										1888,
										1891
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 11005,
									"character": 30
								}
							]
						},
						{
							"id": 1070,
							"name": "Control",
							"kind": 128,
							"kindString": "Class",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the base control class.",
								"text": "The class handles the association between DOM elements and the actual control.\nAlso, it provides a common pattern for invalidating and refreshing controls,\nfor updating the control layout when its size changes, and for handling\nthe HTML templates that define the control structure.\n"
							},
							"children": [
								{
									"id": 1145,
									"name": "gotFocus",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Occurs when the control gets the focus."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6369,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"name": "Event"
									},
									"defaultValue": " new core.Event()"
								},
								{
									"id": 1149,
									"name": "lostFocus",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Occurs when the control loses the focus."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6379,
											"character": 17
										}
									],
									"type": {
										"type": "reference",
										"name": "Event"
									},
									"defaultValue": " new core.Event()"
								},
								{
									"id": 1126,
									"name": "disabled",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isExported": true,
										"isPublic": true
									},
									"getSignature": {
										"id": 1127,
										"name": "__get",
										"kind": 524288,
										"kindString": "Get signature",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									},
									"setSignature": {
										"id": 1128,
										"name": "__set",
										"kind": 1048576,
										"kindString": "Set signature",
										"flags": {},
										"parameters": [
											{
												"id": 1129,
												"name": "value",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "boolean"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "void"
										}
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6270,
											"character": 27
										},
										{
											"fileName": "core/modules/core.ts",
											"line": 6274,
											"character": 27
										}
									]
								},
								{
									"id": 1090,
									"name": "hostElement",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the DOM element that is hosting the control."
									},
									"getSignature": {
										"id": 1091,
										"name": "__get",
										"kind": 524288,
										"kindString": "Get signature",
										"flags": {},
										"comment": {
											"shortText": "Gets the DOM element that is hosting the control."
										},
										"type": {
											"type": "reference",
											"name": "HTMLElement"
										}
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6070,
											"character": 23
										}
									]
								},
								{
									"id": 1122,
									"name": "isDisabled",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets or sets a value that determines whether the control is disabled.",
										"text": "Disabled controls cannot get mouse or keyboard events.\n"
									},
									"getSignature": {
										"id": 1123,
										"name": "__get",
										"kind": 524288,
										"kindString": "Get signature",
										"flags": {},
										"comment": {
											"shortText": "Gets or sets a value that determines whether the control is disabled.",
											"text": "Disabled controls cannot get mouse or keyboard events.\n"
										},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									},
									"setSignature": {
										"id": 1124,
										"name": "__set",
										"kind": 1048576,
										"kindString": "Set signature",
										"flags": {},
										"comment": {
											"shortText": "Gets or sets a value that determines whether the control is disabled.",
											"text": "Disabled controls cannot get mouse or keyboard events.\n"
										},
										"parameters": [
											{
												"id": 1125,
												"name": "value",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "boolean"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "void"
										}
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6258,
											"character": 22
										},
										{
											"fileName": "core/modules/core.ts",
											"line": 6261,
											"character": 22
										}
									]
								},
								{
									"id": 1120,
									"name": "isTouching",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets a value that indicates whether the control is currently handling a touch event."
									},
									"getSignature": {
										"id": 1121,
										"name": "__get",
										"kind": 524288,
										"kindString": "Get signature",
										"flags": {},
										"comment": {
											"shortText": "Gets a value that indicates whether the control is currently handling a touch event."
										},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6250,
											"character": 22
										}
									]
								},
								{
									"id": 1115,
									"name": "isUpdating",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets a value that indicates whether the control is currently being updated."
									},
									"getSignature": {
										"id": 1116,
										"name": "__get",
										"kind": 524288,
										"kindString": "Get signature",
										"flags": {},
										"comment": {
											"shortText": "Gets a value that indicates whether the control is currently being updated."
										},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6227,
											"character": 22
										}
									]
								},
								{
									"id": 1133,
									"name": "addEventListener",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1134,
											"name": "addEventListener",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Adds an event listener to an element owned by this @see:Control.",
												"text": "The control keeps a list of attached listeners and their handlers,\nmaking it easier to remove them when the control is disposed (see the",
												"tags": [
													{
														"tag": "see:dispose",
														"text": "and @see:removeEventListener method).\n\nFailing to remove event listeners may cause memory leaks.\n"
													}
												]
											},
											"parameters": [
												{
													"id": 1135,
													"name": "target",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Target element for the event."
													},
													"type": {
														"type": "reference",
														"name": "EventTarget"
													}
												},
												{
													"id": 1136,
													"name": "type",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "String that specifies the event."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1137,
													"name": "fn",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Function to execute when the event occurs."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 1138,
													"name": "capture",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Whether the listener is capturing.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "false"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6327,
											"character": 24
										}
									]
								},
								{
									"id": 1079,
									"name": "applyTemplate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1080,
											"name": "applyTemplate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Applies the template to a new instance of a control, and returns the root element.",
												"text": "This method should be called by constructors of templated controls.\nIt is responsible for binding the template parts to the\ncorresponding control members.\n\nFor example, the code below applies a template to an instance\nof an @see:InputNumber control. The template must contain elements\nwith the 'wj-part' attribute set to 'input', 'btn-inc', and 'btn-dec'.\nThe control members '_tbx', '_btnUp', and '_btnDn' will be assigned\nreferences to these elements.\n\n<pre>this.applyTemplate('wj-control wj-inputnumber', template, {\n  _tbx: 'input',\n  _btnUp: 'btn-inc',\n  _btnDn: 'btn-dec'\n}, 'input');</pre>\n"
											},
											"parameters": [
												{
													"id": 1081,
													"name": "classNames",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Names of classes to add to the control's host element."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1082,
													"name": "template",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "An HTML string that defines the control template."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1083,
													"name": "parts",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "A dictionary of part variables and their names."
													},
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												},
												{
													"id": 1084,
													"name": "namePart",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Name of the part to be named after the host element. This\ndetermines how the control submits data when used in forms.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "HTMLElement"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 5868,
											"character": 21
										}
									]
								},
								{
									"id": 1111,
									"name": "beginUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1112,
											"name": "beginUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Suspends notifications until the next call to @see:endUpdate."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6212,
											"character": 19
										}
									]
								},
								{
									"id": 1094,
									"name": "containsFocus",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1095,
											"name": "containsFocus",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Checks whether this control contains the focused element."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6084,
											"character": 21
										}
									]
								},
								{
									"id": 1117,
									"name": "deferUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1118,
											"name": "deferUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Executes a function within a @see:beginUpdate/@see:endUpdate block.",
												"text": "The control will not be updated until the function has been executed.\nThis method ensures @see:endUpdate is called even if the function throws\nan exception.\n"
											},
											"parameters": [
												{
													"id": 1119,
													"name": "fn",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Function to be executed.\n"
													},
													"type": {
														"type": "reference",
														"name": "ControlUpateCallback"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6239,
											"character": 19
										}
									]
								},
								{
									"id": 1085,
									"name": "dispose",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true,
										"isPublic": true
									},
									"signatures": [
										{
											"id": 1086,
											"name": "dispose",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Disposes of the control by removing its association with the host element.",
												"text": "Calling the method is important in applications that create\nand remove controls dynamically. Failing to dispose of the controls may\ncause memory leaks.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 5995,
											"character": 22
										}
									]
								},
								{
									"id": 1113,
									"name": "endUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1114,
											"name": "endUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Resumes notifications suspended by calls to @see:beginUpdate."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6218,
											"character": 17
										}
									]
								},
								{
									"id": 1092,
									"name": "focus",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1093,
											"name": "focus",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Sets the focus to this control."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6076,
											"character": 13
										}
									]
								},
								{
									"id": 1077,
									"name": "getTemplate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1078,
											"name": "getTemplate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Gets the HTML template used to create instances of the control.",
												"text": "This method traverses up the class hierarchy to find the nearest ancestor that\nspecifies a control template. For example, if you specify a prototype for the",
												"tags": [
													{
														"tag": "see:combobox",
														"text": "control, it will override the template defined by the @see:DropDown\nbase class.\n"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 5834,
											"character": 19
										}
									]
								},
								{
									"id": 1130,
									"name": "initialize",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1131,
											"name": "initialize",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Initializes the control by copying the properties from a given object.",
												"text": "This method allows you to initialize controls using plain data objects\ninstead of setting the value of each property in code.\n\nFor example:\n<pre>\ngrid.initialize({\n  itemsSource: myList,\n  autoGenerateColumns: false,\n  columns: [\n    { binding: 'id', header: 'Code', width: 130 },\n    { binding: 'name', header: 'Name', width: 60 }\n  ]\n});\n// is equivalent to\ngrid.itemsSource = myList;\ngrid.autoGenerateColumns = false;\n// etc.\n</pre>\n\nThe initialization data is type-checked as it is applied. If the\ninitialization object contains unknown property names or invalid\ndata types, this method will throw.\n"
											},
											"parameters": [
												{
													"id": 1132,
													"name": "options",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Object that contains the initialization data.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6306,
											"character": 18
										}
									]
								},
								{
									"id": 1146,
									"name": "onGotFocus",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1147,
											"name": "onGotFocus",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Raises the @see:gotFocus event."
											},
											"parameters": [
												{
													"id": 1148,
													"name": "e",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"name": "EventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6373,
											"character": 18
										}
									]
								},
								{
									"id": 1150,
									"name": "onLostFocus",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1151,
											"name": "onLostFocus",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Raises the @see:lostFocus event."
											},
											"parameters": [
												{
													"id": 1152,
													"name": "e",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"name": "EventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6383,
											"character": 19
										}
									]
								},
								{
									"id": 1099,
									"name": "refresh",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1100,
											"name": "refresh",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Refreshes the control."
											},
											"parameters": [
												{
													"id": 1101,
													"name": "fullUpdate",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Whether to update the control layout as well as the content.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "true"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6133,
											"character": 15
										}
									]
								},
								{
									"id": 1096,
									"name": "refreshDelay",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1097,
											"name": "refreshDelay",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Invalidates the control causing an asynchronous refresh."
											},
											"parameters": [
												{
													"id": 1098,
													"name": "fullUpdate",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Whether to update the control layout as well as the content.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "true"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6116,
											"character": 20
										}
									]
								},
								{
									"id": 1139,
									"name": "removeEventListener",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1140,
											"name": "removeEventListener",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Removes one or more event listeners attached to elements owned by this @see:Control.",
												"returns": "The number of listeners removed.\n"
											},
											"parameters": [
												{
													"id": 1141,
													"name": "target",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Target element for the event. If null, removes listeners attached to all targets."
													},
													"type": {
														"type": "reference",
														"name": "EventTarget"
													}
												},
												{
													"id": 1142,
													"name": "type",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "String that specifies the event. If null, removes listeners attached to all events."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1143,
													"name": "fn",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Handler to remove. If null, removes all handlers."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 1144,
													"name": "capture",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Whether the listener is capturing. If null, removes capturing and non-capturing listeners."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6345,
											"character": 27
										}
									]
								},
								{
									"id": 1108,
									"name": "disposeAll",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isStatic": true,
										"isExported": true
									},
									"signatures": [
										{
											"id": 1109,
											"name": "disposeAll",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Disposes of all gc controls contained in an HTML element."
											},
											"parameters": [
												{
													"id": 1110,
													"name": "e",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Container element.\n"
													},
													"type": {
														"type": "reference",
														"name": "HTMLElement"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6199,
											"character": 25
										}
									]
								},
								{
									"id": 1087,
									"name": "getControl",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isStatic": true,
										"isExported": true
									},
									"signatures": [
										{
											"id": 1088,
											"name": "getControl",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Gets the control that is hosted in a given DOM element."
											},
											"parameters": [
												{
													"id": 1089,
													"name": "element",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The DOM element that is hosting the control, or a selector for the host element (e.g. '#theCtrl').\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Control",
												"id": 1070
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6063,
											"character": 25
										}
									]
								},
								{
									"id": 1102,
									"name": "invalidateAll",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isStatic": true,
										"isExported": true
									},
									"signatures": [
										{
											"id": 1103,
											"name": "invalidateAll",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Invalidates all gc controls contained in an HTML element.",
												"text": "Use this method when your application has dynamic panels that change\nthe control's visibility or dimensions. For example, splitters, accordions,\nand tab controls usually change the visibility of its content elements.\nIn this case, failing to notify the controls contained in the element\nmay cause them to stop working properly.\n\nIf this happens, you must handle the appropriate event in the dynamic\ncontainer and call the @see:Control.invalidateAll method so the contained\ngc controls will update their layout information properly.\n"
											},
											"parameters": [
												{
													"id": 1104,
													"name": "e",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Container element. If set to null, all gc controls\non the page will be invalidated.\n"
													},
													"type": {
														"type": "reference",
														"name": "HTMLElement"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6157,
											"character": 28
										}
									]
								},
								{
									"id": 1105,
									"name": "refreshAll",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isStatic": true,
										"isExported": true
									},
									"signatures": [
										{
											"id": 1106,
											"name": "refreshAll",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Refreshes all gc controls contained in an HTML element.",
												"text": "This method is similar to @see:invalidateAll, except the controls\nare updated immediately rather than after an interval.\n"
											},
											"parameters": [
												{
													"id": 1107,
													"name": "e",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Container element. If set to null, all gc controls\non the page will be invalidated.\n"
													},
													"type": {
														"type": "reference",
														"name": "HTMLElement"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6180,
											"character": 25
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1145,
										1149
									]
								},
								{
									"title": "Accessors",
									"kind": 262144,
									"children": [
										1126,
										1090,
										1122,
										1120,
										1115
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										1133,
										1079,
										1111,
										1094,
										1117,
										1085,
										1113,
										1092,
										1077,
										1130,
										1146,
										1150,
										1099,
										1096,
										1139,
										1108,
										1087,
										1102,
										1105
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 5676,
									"character": 24
								}
							],
							"extendedBy": [
								{
									"type": "reference",
									"name": "FlexDV",
									"id": 1952
								}
							]
						},
						{
							"id": 1952,
							"name": "FlexDV",
							"kind": 128,
							"kindString": "Class",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the data visualization control."
							},
							"children": [
								{
									"id": 1979,
									"name": "constructor",
									"kind": 512,
									"kindString": "Constructor",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Initializes a new instance of the [FlexDV]{@link dv.FlexDV} class."
									},
									"signatures": [
										{
											"id": 1980,
											"name": "new FlexDV",
											"kind": 16384,
											"kindString": "Constructor signature",
											"flags": {},
											"comment": {
												"shortText": "Initializes a new instance of the [FlexDV]{@link dv.FlexDV} class."
											},
											"parameters": [
												{
													"id": 1981,
													"name": "element",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"shortText": "The DOM element hosting the control."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 1982,
													"name": "option",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "The option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 1983,
													"name": "size",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "The initial size.\n"
													},
													"type": {
														"type": "reference",
														"name": "Size"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "FlexDV",
												"id": 1952
											},
											"overwrites": {
												"type": "reference",
												"name": "Control.__constructor"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 11254,
											"character": 9
										}
									],
									"overwrites": {
										"type": "reference",
										"name": "Control.__constructor"
									}
								},
								{
									"id": 1969,
									"name": "hitTested",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {
										"isExported": true,
										"isPublic": true
									},
									"comment": {},
									"getSignature": {
										"id": 1970,
										"name": "__get",
										"kind": 8388608,
										"kindString": "Event",
										"flags": {},
										"comment": {},
										"type": {
											"type": "reference",
											"name": "HitTestEvent",
											"id": 1892
										}
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 11220,
											"character": 28
										}
									]
								},
								{
									"id": 1971,
									"name": "rendered",
									"kind": 8388608,
									"kindString": "Event",
									"flags": {
										"isExported": true,
										"isPublic": true
									},
									"comment": {},
									"getSignature": {
										"id": 1972,
										"name": "__get",
										"kind": 8388608,
										"kindString": "Event",
										"flags": {},
										"comment": {},
										"type": {
											"type": "reference",
											"name": "RenderedEvent",
											"id": 1931
										}
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 11227,
											"character": 27
										}
									]
								},
								{
									"id": 2072,
									"name": "gotFocus",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Occurs when the control gets the focus."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6369,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"name": "Event"
									},
									"defaultValue": " new core.Event()",
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.gotFocus",
										"id": 1145
									}
								},
								{
									"id": 2076,
									"name": "lostFocus",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Occurs when the control loses the focus."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6379,
											"character": 17
										}
									],
									"type": {
										"type": "reference",
										"name": "Event"
									},
									"defaultValue": " new core.Event()",
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.lostFocus",
										"id": 1149
									}
								},
								{
									"id": 1955,
									"name": "devicePixelRatio",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isExported": true,
										"isPublic": true
									},
									"comment": {
										"shortText": "Gets or sets the device pixel ratio."
									},
									"getSignature": {
										"id": 1956,
										"name": "__get",
										"kind": 524288,
										"kindString": "Get signature",
										"flags": {},
										"comment": {
											"shortText": "Gets or sets the device pixel ratio."
										},
										"type": {
											"type": "intrinsic",
											"name": "number"
										}
									},
									"setSignature": {
										"id": 1957,
										"name": "__set",
										"kind": 1048576,
										"kindString": "Set signature",
										"flags": {},
										"comment": {
											"shortText": "Gets or sets the device pixel ratio."
										},
										"parameters": [
											{
												"id": 1958,
												"name": "value",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "void"
										}
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 11177,
											"character": 35
										},
										{
											"fileName": "core/modules/core.ts",
											"line": 11180,
											"character": 35
										}
									]
								},
								{
									"id": 2056,
									"name": "disabled",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isExported": true,
										"isPublic": true
									},
									"getSignature": {
										"id": 2057,
										"name": "__get",
										"kind": 524288,
										"kindString": "Get signature",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										},
										"inheritedFrom": {
											"type": "reference",
											"name": "Control.disabled",
											"id": 1126
										}
									},
									"setSignature": {
										"id": 2058,
										"name": "__set",
										"kind": 1048576,
										"kindString": "Set signature",
										"flags": {},
										"parameters": [
											{
												"id": 2059,
												"name": "value",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "boolean"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "void"
										},
										"inheritedFrom": {
											"type": "reference",
											"name": "Control.disabled",
											"id": 1126
										}
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6270,
											"character": 27
										},
										{
											"fileName": "core/modules/core.ts",
											"line": 6274,
											"character": 27
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.disabled",
										"id": 1126
									}
								},
								{
									"id": 1959,
									"name": "enabled",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isExported": true,
										"isPublic": true
									},
									"comment": {
										"shortText": "Gets or sete whether the control is enabled."
									},
									"getSignature": {
										"id": 1960,
										"name": "__get",
										"kind": 524288,
										"kindString": "Get signature",
										"flags": {},
										"comment": {
											"shortText": "Gets or sete whether the control is enabled."
										},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									},
									"setSignature": {
										"id": 1961,
										"name": "__set",
										"kind": 1048576,
										"kindString": "Set signature",
										"flags": {},
										"comment": {
											"shortText": "Gets or sete whether the control is enabled."
										},
										"parameters": [
											{
												"id": 1962,
												"name": "value",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "boolean"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "void"
										}
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 11187,
											"character": 26
										},
										{
											"fileName": "core/modules/core.ts",
											"line": 11190,
											"character": 26
										}
									]
								},
								{
									"id": 2023,
									"name": "hostElement",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the DOM element that is hosting the control."
									},
									"getSignature": {
										"id": 2024,
										"name": "__get",
										"kind": 524288,
										"kindString": "Get signature",
										"flags": {},
										"comment": {
											"shortText": "Gets the DOM element that is hosting the control."
										},
										"type": {
											"type": "reference",
											"name": "HTMLElement"
										},
										"inheritedFrom": {
											"type": "reference",
											"name": "Control.hostElement",
											"id": 1090
										}
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6070,
											"character": 23
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.hostElement",
										"id": 1090
									}
								},
								{
									"id": 2052,
									"name": "isDisabled",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets or sets a value that determines whether the control is disabled.",
										"text": "Disabled controls cannot get mouse or keyboard events.\n"
									},
									"getSignature": {
										"id": 2053,
										"name": "__get",
										"kind": 524288,
										"kindString": "Get signature",
										"flags": {},
										"comment": {
											"shortText": "Gets or sets a value that determines whether the control is disabled.",
											"text": "Disabled controls cannot get mouse or keyboard events.\n"
										},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										},
										"inheritedFrom": {
											"type": "reference",
											"name": "Control.isDisabled",
											"id": 1122
										}
									},
									"setSignature": {
										"id": 2054,
										"name": "__set",
										"kind": 1048576,
										"kindString": "Set signature",
										"flags": {},
										"comment": {
											"shortText": "Gets or sets a value that determines whether the control is disabled.",
											"text": "Disabled controls cannot get mouse or keyboard events.\n"
										},
										"parameters": [
											{
												"id": 2055,
												"name": "value",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "boolean"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "void"
										},
										"inheritedFrom": {
											"type": "reference",
											"name": "Control.isDisabled",
											"id": 1122
										}
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6258,
											"character": 22
										},
										{
											"fileName": "core/modules/core.ts",
											"line": 6261,
											"character": 22
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.isDisabled",
										"id": 1122
									}
								},
								{
									"id": 2050,
									"name": "isTouching",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets a value that indicates whether the control is currently handling a touch event."
									},
									"getSignature": {
										"id": 2051,
										"name": "__get",
										"kind": 524288,
										"kindString": "Get signature",
										"flags": {},
										"comment": {
											"shortText": "Gets a value that indicates whether the control is currently handling a touch event."
										},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										},
										"inheritedFrom": {
											"type": "reference",
											"name": "Control.isTouching",
											"id": 1120
										}
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6250,
											"character": 22
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.isTouching",
										"id": 1120
									}
								},
								{
									"id": 2045,
									"name": "isUpdating",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets a value that indicates whether the control is currently being updated."
									},
									"getSignature": {
										"id": 2046,
										"name": "__get",
										"kind": 524288,
										"kindString": "Get signature",
										"flags": {},
										"comment": {
											"shortText": "Gets a value that indicates whether the control is currently being updated."
										},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										},
										"inheritedFrom": {
											"type": "reference",
											"name": "Control.isUpdating",
											"id": 1115
										}
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6227,
											"character": 22
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.isUpdating",
										"id": 1115
									}
								},
								{
									"id": 1967,
									"name": "model",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isExported": true,
										"isPublic": true
									},
									"comment": {
										"shortText": "Gets the dv model.",
										"returns": "The dv model.\n"
									},
									"getSignature": {
										"id": 1968,
										"name": "__get",
										"kind": 524288,
										"kindString": "Get signature",
										"flags": {},
										"comment": {
											"shortText": "Gets the dv model.",
											"returns": "The dv model.\n"
										},
										"type": {
											"type": "reference",
											"name": "IDvModel",
											"id": 11009
										}
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 11212,
											"character": 24
										}
									]
								},
								{
									"id": 1953,
									"name": "option",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isExported": true,
										"isPublic": true
									},
									"comment": {
										"shortText": "Gets the option."
									},
									"getSignature": {
										"id": 1954,
										"name": "__get",
										"kind": 524288,
										"kindString": "Get signature",
										"flags": {},
										"comment": {
											"shortText": "Gets the option."
										},
										"type": {
											"type": "intrinsic",
											"name": "any"
										}
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 11171,
											"character": 25
										}
									]
								},
								{
									"id": 1963,
									"name": "renderMethod",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isExported": true,
										"isPublic": true
									},
									"comment": {
										"shortText": "Gets or sets the render method"
									},
									"getSignature": {
										"id": 1964,
										"name": "__get",
										"kind": 524288,
										"kindString": "Get signature",
										"flags": {},
										"comment": {
											"shortText": "Gets or sets the render method"
										},
										"type": {
											"type": "reference",
											"name": "RenderMethod",
											"id": 1831
										}
									},
									"setSignature": {
										"id": 1965,
										"name": "__set",
										"kind": 1048576,
										"kindString": "Set signature",
										"flags": {},
										"comment": {
											"shortText": "Gets or sets the render method"
										},
										"parameters": [
											{
												"id": 1966,
												"name": "value",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "reference",
													"name": "RenderMethod",
													"id": 1831
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "void"
										}
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 11198,
											"character": 31
										},
										{
											"fileName": "core/modules/core.ts",
											"line": 11201,
											"character": 31
										}
									]
								},
								{
									"id": 2060,
									"name": "addEventListener",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2061,
											"name": "addEventListener",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Adds an event listener to an element owned by this @see:Control.",
												"text": "The control keeps a list of attached listeners and their handlers,\nmaking it easier to remove them when the control is disposed (see the",
												"tags": [
													{
														"tag": "see:dispose",
														"text": "and @see:removeEventListener method).\n\nFailing to remove event listeners may cause memory leaks.\n"
													}
												]
											},
											"parameters": [
												{
													"id": 2062,
													"name": "target",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Target element for the event."
													},
													"type": {
														"type": "reference",
														"name": "EventTarget"
													}
												},
												{
													"id": 2063,
													"name": "type",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "String that specifies the event."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2064,
													"name": "fn",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Function to execute when the event occurs."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 2065,
													"name": "capture",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Whether the listener is capturing.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "false"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.addEventListener",
												"id": 1133
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6327,
											"character": 24
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.addEventListener",
										"id": 1133
									}
								},
								{
									"id": 2014,
									"name": "applyTemplate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2015,
											"name": "applyTemplate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Applies the template to a new instance of a control, and returns the root element.",
												"text": "This method should be called by constructors of templated controls.\nIt is responsible for binding the template parts to the\ncorresponding control members.\n\nFor example, the code below applies a template to an instance\nof an @see:InputNumber control. The template must contain elements\nwith the 'wj-part' attribute set to 'input', 'btn-inc', and 'btn-dec'.\nThe control members '_tbx', '_btnUp', and '_btnDn' will be assigned\nreferences to these elements.\n\n<pre>this.applyTemplate('wj-control wj-inputnumber', template, {\n  _tbx: 'input',\n  _btnUp: 'btn-inc',\n  _btnDn: 'btn-dec'\n}, 'input');</pre>\n"
											},
											"parameters": [
												{
													"id": 2016,
													"name": "classNames",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Names of classes to add to the control's host element."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2017,
													"name": "template",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "An HTML string that defines the control template."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2018,
													"name": "parts",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "A dictionary of part variables and their names."
													},
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												},
												{
													"id": 2019,
													"name": "namePart",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Name of the part to be named after the host element. This\ndetermines how the control submits data when used in forms.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "HTMLElement"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.applyTemplate",
												"id": 1079
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 5868,
											"character": 21
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.applyTemplate",
										"id": 1079
									}
								},
								{
									"id": 2041,
									"name": "beginUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2042,
											"name": "beginUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Suspends notifications until the next call to @see:endUpdate."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.beginUpdate",
												"id": 1111
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6212,
											"character": 19
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.beginUpdate",
										"id": 1111
									}
								},
								{
									"id": 2027,
									"name": "containsFocus",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2028,
											"name": "containsFocus",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Checks whether this control contains the focused element."
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.containsFocus",
												"id": 1094
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6084,
											"character": 21
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.containsFocus",
										"id": 1094
									}
								},
								{
									"id": 2047,
									"name": "deferUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2048,
											"name": "deferUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Executes a function within a @see:beginUpdate/@see:endUpdate block.",
												"text": "The control will not be updated until the function has been executed.\nThis method ensures @see:endUpdate is called even if the function throws\nan exception.\n"
											},
											"parameters": [
												{
													"id": 2049,
													"name": "fn",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Function to be executed.\n"
													},
													"type": {
														"type": "reference",
														"name": "ControlUpateCallback"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.deferUpdate",
												"id": 1117
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6239,
											"character": 19
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.deferUpdate",
										"id": 1117
									}
								},
								{
									"id": 1984,
									"name": "dispose",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true,
										"isPublic": true
									},
									"signatures": [
										{
											"id": 1985,
											"name": "dispose",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Disposes the control by removing its association with the host element."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"overwrites": {
												"type": "reference",
												"name": "Control.dispose",
												"id": 1085
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 11277,
											"character": 22
										}
									],
									"overwrites": {
										"type": "reference",
										"name": "Control.dispose",
										"id": 1085
									}
								},
								{
									"id": 2043,
									"name": "endUpdate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2044,
											"name": "endUpdate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Resumes notifications suspended by calls to @see:beginUpdate."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.endUpdate",
												"id": 1113
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6218,
											"character": 17
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.endUpdate",
										"id": 1113
									}
								},
								{
									"id": 2025,
									"name": "focus",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2026,
											"name": "focus",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Sets the focus to this control."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.focus",
												"id": 1092
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6076,
											"character": 13
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.focus",
										"id": 1092
									}
								},
								{
									"id": 2012,
									"name": "getTemplate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2013,
											"name": "getTemplate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Gets the HTML template used to create instances of the control.",
												"text": "This method traverses up the class hierarchy to find the nearest ancestor that\nspecifies a control template. For example, if you specify a prototype for the",
												"tags": [
													{
														"tag": "see:combobox",
														"text": "control, it will override the template defined by the @see:DropDown\nbase class.\n"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.getTemplate",
												"id": 1077
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 5834,
											"character": 19
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.getTemplate",
										"id": 1077
									}
								},
								{
									"id": 1997,
									"name": "hitTest",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true,
										"isPublic": true
									},
									"signatures": [
										{
											"id": 1998,
											"name": "hitTest",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Hit test the control.",
												"returns": "@HitInfo the result of hittest\n"
											},
											"parameters": [
												{
													"id": 1999,
													"name": "point",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "-The location in the control.\n"
													},
													"type": {
														"type": "reference",
														"name": "Point"
													}
												},
												{
													"id": 2000,
													"name": "prediction",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IPrediction",
														"id": 6359,
														"typeArguments": [
															{
																"type": "reference",
																"name": "HitTestResult",
																"id": 1920
															}
														]
													},
													"defaultValue": " null"
												}
											],
											"type": {
												"type": "reference",
												"name": "HitTestResult",
												"id": 1920
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 11352,
											"character": 22
										}
									]
								},
								{
									"id": 1986,
									"name": "initialize",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true,
										"isPublic": true
									},
									"signatures": [
										{
											"id": 1987,
											"name": "initialize",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Initializes the control with the option setting."
											},
											"parameters": [
												{
													"id": 1988,
													"name": "option",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The option of the control.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"overwrites": {
												"type": "reference",
												"name": "Control.initialize",
												"id": 1130
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 11305,
											"character": 25
										}
									],
									"overwrites": {
										"type": "reference",
										"name": "Control.initialize",
										"id": 1130
									}
								},
								{
									"id": 1995,
									"name": "invalidate",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true,
										"isPublic": true
									},
									"signatures": [
										{
											"id": 1996,
											"name": "invalidate",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Redraw the control."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 11342,
											"character": 25
										}
									]
								},
								{
									"id": 1973,
									"name": "layers",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true,
										"isPublic": true
									},
									"signatures": [
										{
											"id": 1974,
											"name": "layers",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Gets the layers."
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "ILayer",
													"id": 11026
												}
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 11234,
											"character": 21
										}
									]
								},
								{
									"id": 1989,
									"name": "load",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true,
										"isPublic": true
									},
									"signatures": [
										{
											"id": 1990,
											"name": "load",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Loads the new option into the control."
											},
											"parameters": [
												{
													"id": 1991,
													"name": "option",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The option of the control.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 11319,
											"character": 19
										}
									]
								},
								{
									"id": 2073,
									"name": "onGotFocus",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2074,
											"name": "onGotFocus",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Raises the @see:gotFocus event."
											},
											"parameters": [
												{
													"id": 2075,
													"name": "e",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"name": "EventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.onGotFocus",
												"id": 1146
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6373,
											"character": 18
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.onGotFocus",
										"id": 1146
									}
								},
								{
									"id": 2077,
									"name": "onLostFocus",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2078,
											"name": "onLostFocus",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Raises the @see:lostFocus event."
											},
											"parameters": [
												{
													"id": 2079,
													"name": "e",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"name": "EventArgs"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.onLostFocus",
												"id": 1150
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6383,
											"character": 19
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.onLostFocus",
										"id": 1150
									}
								},
								{
									"id": 1992,
									"name": "refresh",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true,
										"isPublic": true
									},
									"signatures": [
										{
											"id": 1993,
											"name": "refresh",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Refreshes the control."
											},
											"parameters": [
												{
													"id": 1994,
													"name": "fullUpdate",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "true"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"overwrites": {
												"type": "reference",
												"name": "Control.refresh",
												"id": 1099
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 11328,
											"character": 22
										}
									],
									"overwrites": {
										"type": "reference",
										"name": "Control.refresh",
										"id": 1099
									}
								},
								{
									"id": 2029,
									"name": "refreshDelay",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2030,
											"name": "refreshDelay",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Invalidates the control causing an asynchronous refresh."
											},
											"parameters": [
												{
													"id": 2031,
													"name": "fullUpdate",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Whether to update the control layout as well as the content.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "true"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.refreshDelay",
												"id": 1096
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6116,
											"character": 20
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.refreshDelay",
										"id": 1096
									}
								},
								{
									"id": 2066,
									"name": "removeEventListener",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 2067,
											"name": "removeEventListener",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Removes one or more event listeners attached to elements owned by this @see:Control.",
												"returns": "The number of listeners removed.\n"
											},
											"parameters": [
												{
													"id": 2068,
													"name": "target",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Target element for the event. If null, removes listeners attached to all targets."
													},
													"type": {
														"type": "reference",
														"name": "EventTarget"
													}
												},
												{
													"id": 2069,
													"name": "type",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "String that specifies the event. If null, removes listeners attached to all events."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2070,
													"name": "fn",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Handler to remove. If null, removes all handlers."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 2071,
													"name": "capture",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Whether the listener is capturing. If null, removes capturing and non-capturing listeners."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.removeEventListener",
												"id": 1139
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6345,
											"character": 27
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.removeEventListener",
										"id": 1139
									}
								},
								{
									"id": 2004,
									"name": "select",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true,
										"isPublic": true
									},
									"signatures": [
										{
											"id": 2005,
											"name": "select",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Selects the data points with the selected style."
											},
											"parameters": [
												{
													"id": 2006,
													"name": "points",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The data points."
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "IPointModel",
															"id": 9285
														}
													}
												},
												{
													"id": 2007,
													"name": "selectedStyle",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The selected style."
													},
													"type": {
														"type": "reference",
														"name": "ISelectionStyleOption",
														"id": 14195
													},
													"defaultValue": " null"
												},
												{
													"id": 2008,
													"name": "additionalKind",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The additional type.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": " null"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 11381,
											"character": 21
										}
									]
								},
								{
									"id": 2038,
									"name": "disposeAll",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isStatic": true,
										"isExported": true
									},
									"signatures": [
										{
											"id": 2039,
											"name": "disposeAll",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Disposes of all gc controls contained in an HTML element."
											},
											"parameters": [
												{
													"id": 2040,
													"name": "e",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Container element.\n"
													},
													"type": {
														"type": "reference",
														"name": "HTMLElement"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.disposeAll",
												"id": 1108
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6199,
											"character": 25
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.disposeAll",
										"id": 1108
									}
								},
								{
									"id": 2020,
									"name": "getControl",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isStatic": true,
										"isExported": true
									},
									"signatures": [
										{
											"id": 2021,
											"name": "getControl",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Gets the control that is hosted in a given DOM element."
											},
											"parameters": [
												{
													"id": 2022,
													"name": "element",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The DOM element that is hosting the control, or a selector for the host element (e.g. '#theCtrl').\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Control",
												"id": 1070
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.getControl",
												"id": 1087
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6063,
											"character": 25
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.getControl",
										"id": 1087
									}
								},
								{
									"id": 2032,
									"name": "invalidateAll",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isStatic": true,
										"isExported": true
									},
									"signatures": [
										{
											"id": 2033,
											"name": "invalidateAll",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Invalidates all gc controls contained in an HTML element.",
												"text": "Use this method when your application has dynamic panels that change\nthe control's visibility or dimensions. For example, splitters, accordions,\nand tab controls usually change the visibility of its content elements.\nIn this case, failing to notify the controls contained in the element\nmay cause them to stop working properly.\n\nIf this happens, you must handle the appropriate event in the dynamic\ncontainer and call the @see:Control.invalidateAll method so the contained\ngc controls will update their layout information properly.\n"
											},
											"parameters": [
												{
													"id": 2034,
													"name": "e",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Container element. If set to null, all gc controls\non the page will be invalidated.\n"
													},
													"type": {
														"type": "reference",
														"name": "HTMLElement"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.invalidateAll",
												"id": 1102
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6157,
											"character": 28
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.invalidateAll",
										"id": 1102
									}
								},
								{
									"id": 2035,
									"name": "refreshAll",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isStatic": true,
										"isExported": true
									},
									"signatures": [
										{
											"id": 2036,
											"name": "refreshAll",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Refreshes all gc controls contained in an HTML element.",
												"text": "This method is similar to @see:invalidateAll, except the controls\nare updated immediately rather than after an interval.\n"
											},
											"parameters": [
												{
													"id": 2037,
													"name": "e",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Container element. If set to null, all gc controls\non the page will be invalidated.\n"
													},
													"type": {
														"type": "reference",
														"name": "HTMLElement"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Control.refreshAll",
												"id": 1105
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 6180,
											"character": 25
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Control.refreshAll",
										"id": 1105
									}
								}
							],
							"groups": [
								{
									"title": "Constructors",
									"kind": 512,
									"children": [
										1979
									]
								},
								{
									"title": "Events",
									"kind": 8388608,
									"children": [
										1969,
										1971
									]
								},
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										2072,
										2076
									]
								},
								{
									"title": "Accessors",
									"kind": 262144,
									"children": [
										1955,
										2056,
										1959,
										2023,
										2052,
										2050,
										2045,
										1967,
										1953,
										1963
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										2060,
										2014,
										2041,
										2027,
										2047,
										1984,
										2043,
										2025,
										2012,
										1997,
										1986,
										1995,
										1973,
										1989,
										2073,
										2077,
										1992,
										2029,
										2066,
										2004,
										2038,
										2020,
										2032,
										2035
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 11151,
									"character": 23
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"name": "Control",
									"id": 1070
								}
							]
						},
						{
							"id": 1892,
							"name": "HitTestEvent",
							"kind": 128,
							"kindString": "Class",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the hit test event."
							},
							"children": [
								{
									"id": 1907,
									"name": "hasHandlers",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets a value that indicates whether this event has any handlers."
									},
									"getSignature": {
										"id": 1908,
										"name": "__get",
										"kind": 524288,
										"kindString": "Get signature",
										"flags": {},
										"comment": {
											"shortText": "Gets a value that indicates whether this event has any handlers."
										},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										},
										"inheritedFrom": {
											"type": "reference",
											"name": "Event.hasHandlers"
										}
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 2480,
											"character": 23
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Event.hasHandlers"
									}
								},
								{
									"id": 1897,
									"name": "addHandler",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1898,
											"name": "addHandler",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Adds a handler to this event."
											},
											"parameters": [
												{
													"id": 1899,
													"name": "handler",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Function invoked when the event is raised."
													},
													"type": {
														"type": "reference",
														"name": "IEventHandler"
													}
												},
												{
													"id": 1900,
													"name": "self",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Object that defines the event handler\n(accessible as 'this' from the handler code).\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Event.addHandler"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 2435,
											"character": 18
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Event.addHandler"
									}
								},
								{
									"id": 1905,
									"name": "removeAllHandlers",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1906,
											"name": "removeAllHandlers",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Removes all handlers associated with this event."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Event.removeAllHandlers"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 2462,
											"character": 25
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Event.removeAllHandlers"
									}
								},
								{
									"id": 1901,
									"name": "removeHandler",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1902,
											"name": "removeHandler",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Removes a handler from this event."
											},
											"parameters": [
												{
													"id": 1903,
													"name": "handler",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Function invoked when the event is raised."
													},
													"type": {
														"type": "reference",
														"name": "IEventHandler"
													}
												},
												{
													"id": 1904,
													"name": "self",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Object that defines the event handler (accessible as 'this' from the handler code).\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Event.removeHandler"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 2445,
											"character": 21
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Event.removeHandler"
									}
								}
							],
							"groups": [
								{
									"title": "Accessors",
									"kind": 262144,
									"children": [
										1907
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										1897,
										1905,
										1901
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 11032,
									"character": 29
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"name": "Event"
								}
							]
						},
						{
							"id": 1909,
							"name": "HitTestEventArgs",
							"kind": 128,
							"kindString": "Class",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the arguments of the hit test event."
							},
							"children": [
								{
									"id": 1913,
									"name": "addition",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true,
										"isPublic": true
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 11058,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1910,
									"name": "event",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true,
										"isPublic": true
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 11054,
											"character": 20
										}
									],
									"type": {
										"type": "reference",
										"name": "MotionEvent",
										"id": 942
									}
								},
								{
									"id": 1912,
									"name": "model",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true,
										"isPublic": true
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 11057,
											"character": 20
										}
									],
									"type": {
										"type": "reference",
										"name": "IModel",
										"id": 11033
									}
								},
								{
									"id": 1911,
									"name": "point",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true,
										"isPublic": true
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 11056,
											"character": 20
										}
									],
									"type": {
										"type": "reference",
										"name": "Point"
									}
								},
								{
									"id": 1919,
									"name": "empty",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isStatic": true,
										"isExported": true
									},
									"comment": {
										"shortText": "Provides a value to use with events that do not have event data."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 2493,
											"character": 20
										}
									],
									"type": {
										"type": "reference",
										"name": "EventArgs"
									},
									"defaultValue": " new EventArgs()",
									"inheritedFrom": {
										"type": "reference",
										"name": "EventArgs.empty"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1913,
										1910,
										1912,
										1911,
										1919
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 11053,
									"character": 33
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"name": "EventArgs"
								}
							]
						},
						{
							"id": 1920,
							"name": "HitTestResult",
							"kind": 128,
							"kindString": "Class",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the result of the hit test method."
							},
							"children": [
								{
									"id": 1924,
									"name": "constructor",
									"kind": 512,
									"kindString": "Constructor",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Initializes a new instance of the [HitTestResult]{@link dv.HitTestResult} class."
									},
									"signatures": [
										{
											"id": 1925,
											"name": "new HitTestResult",
											"kind": 16384,
											"kindString": "Constructor signature",
											"flags": {},
											"comment": {
												"shortText": "Initializes a new instance of the [HitTestResult]{@link dv.HitTestResult} class."
											},
											"parameters": [
												{
													"id": 1926,
													"name": "point",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Point"
													}
												},
												{
													"id": 1927,
													"name": "model",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "IModel",
														"id": 11033
													}
												},
												{
													"id": 1928,
													"name": "element",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "object"
													}
												},
												{
													"id": 1929,
													"name": "type",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "ElementType",
														"id": 1638
													}
												},
												{
													"id": 1930,
													"name": "addition",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"defaultValue": " null"
												}
											],
											"type": {
												"type": "reference",
												"name": "HitTestResult",
												"id": 1920
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 11090,
											"character": 45
										}
									]
								},
								{
									"id": 1923,
									"name": "addition",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true,
										"isPublic": true
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 11088,
											"character": 32
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1922,
									"name": "model",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true,
										"isPublic": true
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 11087,
											"character": 29
										}
									],
									"type": {
										"type": "reference",
										"name": "IModel",
										"id": 11033
									}
								},
								{
									"id": 1921,
									"name": "point",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true,
										"isPublic": true
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 11086,
											"character": 29
										}
									],
									"type": {
										"type": "reference",
										"name": "Point"
									}
								}
							],
							"groups": [
								{
									"title": "Constructors",
									"kind": 512,
									"children": [
										1924
									]
								},
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1923,
										1922,
										1921
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 11085,
									"character": 30
								}
							]
						},
						{
							"id": 942,
							"name": "MotionEvent",
							"kind": 128,
							"kindString": "Class",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the motion event."
							},
							"children": [
								{
									"id": 972,
									"name": "constructor",
									"kind": 512,
									"kindString": "Constructor",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Initializes a new instance of the [MotionEvent]{@link dv.MotionEvent} class."
									},
									"signatures": [
										{
											"id": 973,
											"name": "new MotionEvent",
											"kind": 16384,
											"kindString": "Constructor signature",
											"flags": {},
											"comment": {
												"shortText": "Initializes a new instance of the [MotionEvent]{@link dv.MotionEvent} class."
											},
											"parameters": [
												{
													"id": 974,
													"name": "action",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"shortText": "The action."
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 975,
													"name": "x",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "The x value of the location."
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 976,
													"name": "y",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"shortText": "The y value of the location.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "MotionEvent",
												"id": 942
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 5132,
											"character": 9
										}
									]
								},
								{
									"id": 961,
									"name": "originalEvent",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true,
										"isPublic": true
									},
									"comment": {
										"shortText": "Gets the original dom event."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 5107,
											"character": 28
										}
									],
									"type": {
										"type": "reference",
										"name": "Event"
									}
								},
								{
									"id": 950,
									"name": "ACTION_CANCEL",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isStatic": true,
										"isExported": true,
										"isPublic": true
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 5088,
											"character": 35
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "3"
								},
								{
									"id": 957,
									"name": "ACTION_CLICK",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isStatic": true,
										"isExported": true,
										"isPublic": true
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 5095,
											"character": 34
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "10"
								},
								{
									"id": 947,
									"name": "ACTION_DOWN",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isStatic": true,
										"isExported": true,
										"isPublic": true
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 5085,
											"character": 33
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								},
								{
									"id": 952,
									"name": "ACTION_MOUSE_DOWN",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isStatic": true,
										"isExported": true,
										"isPublic": true
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 5090,
											"character": 39
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "5"
								},
								{
									"id": 958,
									"name": "ACTION_MOUSE_ENTER",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isStatic": true,
										"isExported": true,
										"isPublic": true
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 5096,
											"character": 40
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "11"
								},
								{
									"id": 959,
									"name": "ACTION_MOUSE_LEAVE",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isStatic": true,
										"isExported": true,
										"isPublic": true
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 5097,
											"character": 40
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "12"
								},
								{
									"id": 953,
									"name": "ACTION_MOUSE_MOVE",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isStatic": true,
										"isExported": true,
										"isPublic": true
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 5091,
											"character": 39
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "6"
								},
								{
									"id": 956,
									"name": "ACTION_MOUSE_OUT",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isStatic": true,
										"isExported": true,
										"isPublic": true
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 5094,
											"character": 38
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "9"
								},
								{
									"id": 955,
									"name": "ACTION_MOUSE_OVER",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isStatic": true,
										"isExported": true,
										"isPublic": true
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 5093,
											"character": 39
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "8"
								},
								{
									"id": 954,
									"name": "ACTION_MOUSE_UP",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isStatic": true,
										"isExported": true,
										"isPublic": true
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 5092,
											"character": 37
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "7"
								},
								{
									"id": 949,
									"name": "ACTION_MOVE",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isStatic": true,
										"isExported": true,
										"isPublic": true
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 5087,
											"character": 33
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "2"
								},
								{
									"id": 951,
									"name": "ACTION_OUTSIDE",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isStatic": true,
										"isExported": true,
										"isPublic": true
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 5089,
											"character": 36
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "4"
								},
								{
									"id": 948,
									"name": "ACTION_UP",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isStatic": true,
										"isExported": true,
										"isPublic": true
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 5086,
											"character": 31
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "1"
								},
								{
									"id": 960,
									"name": "ACTION_WHEEL",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isStatic": true,
										"isExported": true,
										"isPublic": true
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 5098,
											"character": 34
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "13"
								},
								{
									"id": 962,
									"name": "action",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isExported": true,
										"isPublic": true
									},
									"comment": {
										"shortText": "Gets the action."
									},
									"getSignature": {
										"id": 963,
										"name": "__get",
										"kind": 524288,
										"kindString": "Get signature",
										"flags": {},
										"comment": {
											"shortText": "Gets the action."
										},
										"type": {
											"type": "intrinsic",
											"name": "number"
										}
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 5112,
											"character": 25
										}
									]
								},
								{
									"id": 964,
									"name": "x",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isExported": true,
										"isPublic": true
									},
									"comment": {
										"shortText": "Gets or sets the x value of the location."
									},
									"getSignature": {
										"id": 965,
										"name": "__get",
										"kind": 524288,
										"kindString": "Get signature",
										"flags": {},
										"comment": {
											"shortText": "Gets or sets the x value of the location."
										},
										"type": {
											"type": "intrinsic",
											"name": "number"
										}
									},
									"setSignature": {
										"id": 966,
										"name": "__set",
										"kind": 1048576,
										"kindString": "Set signature",
										"flags": {},
										"comment": {
											"shortText": "Gets or sets the x value of the location."
										},
										"parameters": [
											{
												"id": 967,
												"name": "value",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "void"
										}
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 5118,
											"character": 20
										},
										{
											"fileName": "core/modules/core.ts",
											"line": 5121,
											"character": 20
										}
									]
								},
								{
									"id": 968,
									"name": "y",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isExported": true,
										"isPublic": true
									},
									"comment": {
										"shortText": "Gets or sets the y value of the location."
									},
									"getSignature": {
										"id": 969,
										"name": "__get",
										"kind": 524288,
										"kindString": "Get signature",
										"flags": {},
										"comment": {
											"shortText": "Gets or sets the y value of the location."
										},
										"type": {
											"type": "intrinsic",
											"name": "number"
										}
									},
									"setSignature": {
										"id": 970,
										"name": "__set",
										"kind": 1048576,
										"kindString": "Set signature",
										"flags": {},
										"comment": {
											"shortText": "Gets or sets the y value of the location."
										},
										"parameters": [
											{
												"id": 971,
												"name": "value",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "void"
										}
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 5127,
											"character": 20
										},
										{
											"fileName": "core/modules/core.ts",
											"line": 5130,
											"character": 20
										}
									]
								},
								{
									"id": 977,
									"name": "contains",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true,
										"isPublic": true
									},
									"signatures": [
										{
											"id": 978,
											"name": "contains",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Determines whether the rectangle contains a event point."
											},
											"parameters": [
												{
													"id": 979,
													"name": "rectangle",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The rectangle to ckeck.\n"
													},
													"type": {
														"type": "reference",
														"name": "Rect"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 5152,
											"character": 23
										}
									]
								},
								{
									"id": 943,
									"name": "_fromEvent",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isStatic": true,
										"isExported": true,
										"isPublic": true
									},
									"signatures": [
										{
											"id": 944,
											"name": "_fromEvent",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Create the motion event.",
												"returns": "The motion event.\n"
											},
											"parameters": [
												{
													"id": 945,
													"name": "hostElement",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The host dom element."
													},
													"type": {
														"type": "reference",
														"name": "HTMLElement"
													}
												},
												{
													"id": 946,
													"name": "evt",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The dom event.\n"
													},
													"type": {
														"type": "reference",
														"name": "Event"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "MotionEvent",
												"id": 942
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 5034,
											"character": 32
										}
									]
								}
							],
							"groups": [
								{
									"title": "Constructors",
									"kind": 512,
									"children": [
										972
									]
								},
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										961,
										950,
										957,
										947,
										952,
										958,
										959,
										953,
										956,
										955,
										954,
										949,
										951,
										948,
										960
									]
								},
								{
									"title": "Accessors",
									"kind": 262144,
									"children": [
										962,
										964,
										968
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										977,
										943
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 5025,
									"character": 28
								}
							]
						},
						{
							"id": 1931,
							"name": "RenderedEvent",
							"kind": 128,
							"kindString": "Class",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the rendered event."
							},
							"children": [
								{
									"id": 1946,
									"name": "hasHandlers",
									"kind": 262144,
									"kindString": "Accessor",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets a value that indicates whether this event has any handlers."
									},
									"getSignature": {
										"id": 1947,
										"name": "__get",
										"kind": 524288,
										"kindString": "Get signature",
										"flags": {},
										"comment": {
											"shortText": "Gets a value that indicates whether this event has any handlers."
										},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										},
										"inheritedFrom": {
											"type": "reference",
											"name": "Event.hasHandlers"
										}
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 2480,
											"character": 23
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Event.hasHandlers"
									}
								},
								{
									"id": 1936,
									"name": "addHandler",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1937,
											"name": "addHandler",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Adds a handler to this event."
											},
											"parameters": [
												{
													"id": 1938,
													"name": "handler",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Function invoked when the event is raised."
													},
													"type": {
														"type": "reference",
														"name": "IEventHandler"
													}
												},
												{
													"id": 1939,
													"name": "self",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Object that defines the event handler\n(accessible as 'this' from the handler code).\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Event.addHandler"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 2435,
											"character": 18
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Event.addHandler"
									}
								},
								{
									"id": 1944,
									"name": "removeAllHandlers",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1945,
											"name": "removeAllHandlers",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Removes all handlers associated with this event."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Event.removeAllHandlers"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 2462,
											"character": 25
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Event.removeAllHandlers"
									}
								},
								{
									"id": 1940,
									"name": "removeHandler",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1941,
											"name": "removeHandler",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Removes a handler from this event."
											},
											"parameters": [
												{
													"id": 1942,
													"name": "handler",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "Function invoked when the event is raised."
													},
													"type": {
														"type": "reference",
														"name": "IEventHandler"
													}
												},
												{
													"id": 1943,
													"name": "self",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "Object that defines the event handler (accessible as 'this' from the handler code).\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "Event.removeHandler"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 2445,
											"character": 21
										}
									],
									"inheritedFrom": {
										"type": "reference",
										"name": "Event.removeHandler"
									}
								}
							],
							"groups": [
								{
									"title": "Accessors",
									"kind": 262144,
									"children": [
										1946
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										1936,
										1944,
										1940
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 11112,
									"character": 30
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"name": "Event"
								}
							]
						},
						{
							"id": 1948,
							"name": "RenderedEventArgs",
							"kind": 128,
							"kindString": "Class",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the arguments of the rendered event."
							},
							"children": [
								{
									"id": 1951,
									"name": "empty",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isStatic": true,
										"isExported": true
									},
									"comment": {
										"shortText": "Provides a value to use with events that do not have event data."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 2493,
											"character": 20
										}
									],
									"type": {
										"type": "reference",
										"name": "EventArgs"
									},
									"defaultValue": " new EventArgs()",
									"inheritedFrom": {
										"type": "reference",
										"name": "EventArgs.empty"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1951
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 11133,
									"character": 34
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"name": "EventArgs"
								}
							]
						},
						{
							"id": 22404,
							"name": "IRender",
							"kind": 256,
							"kindString": "Interface",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents a render."
							},
							"children": [
								{
									"id": 22418,
									"name": "devicePixelRatio",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets or sets the devicePixelRatio for canvas renderengine"
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 73849,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 22408,
									"name": "fill",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets or sets the color used to fill the element."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 73808,
											"character": 12
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "ILinearGradientColor",
												"id": 3445
											},
											{
												"type": "reference",
												"name": "IRadialGradientColor",
												"id": 3450
											}
										]
									}
								},
								{
									"id": 22406,
									"name": "fillOpacity",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets or sets the opacity used for fill color."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 73800,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 22414,
									"name": "fontFamily",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets or sets the font family for the text output."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 73832,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 22413,
									"name": "fontSize",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets or sets the font size for the text output."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 73828,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 22416,
									"name": "fontStyle",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets or sets the font style for the text output."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 73840,
											"character": 17
										}
									],
									"type": {
										"type": "reference",
										"name": "FontStyle",
										"id": 1671
									}
								},
								{
									"id": 22415,
									"name": "fontWeight",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets or sets the font weight for the text output."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 73836,
											"character": 18
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 22405,
									"name": "renderEngine",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets the render engine.",
										"tags": [
											{
												"tag": "returns",
												"text": "The render engine.\n"
											}
										]
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 73796,
											"character": 29
										}
									],
									"type": {
										"type": "reference",
										"name": "IRenderEngine",
										"id": 2095
									}
								},
								{
									"id": 22409,
									"name": "stroke",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets or sets the color used to outline the element."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 73812,
											"character": 14
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "ILinearGradientColor",
												"id": 3445
											},
											{
												"type": "reference",
												"name": "IRadialGradientColor",
												"id": 3450
											}
										]
									}
								},
								{
									"id": 22411,
									"name": "strokeDasharray",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets or sets the pattern of dashes and gaps of the outline."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 73820,
											"character": 23
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 22407,
									"name": "strokeOpacity",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets or sets the opacity used for stroke."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 73804,
											"character": 21
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 22410,
									"name": "strokeWidth",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets or sets the thickness of the outline."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 73816,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 22417,
									"name": "textDecoration",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets or sets the text decoration for the text output."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 73844,
											"character": 22
										}
									],
									"type": {
										"type": "reference",
										"name": "ITextDecorationOption",
										"id": 13912
									}
								},
								{
									"id": 22412,
									"name": "textFill",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Gets or sets the text color."
									},
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 73824,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 22551,
									"name": "addClipRect",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 22552,
											"name": "addClipRect",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 22553,
													"name": "clipRect",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Rect"
													}
												},
												{
													"id": 22554,
													"name": "id",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 73920,
											"character": 19
										}
									]
								},
								{
									"id": 22419,
									"name": "beginRender",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 22420,
											"name": "beginRender",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Clear the viewport and start the rendering cycle."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 73855,
											"character": 19
										}
									]
								},
								{
									"id": 22427,
									"name": "beginTransform",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 22428,
											"name": "beginTransform",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Begin the transform."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 73870,
											"character": 22
										}
									]
								},
								{
									"id": 22512,
									"name": "drawDonutSegment",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 22513,
											"name": "drawDonutSegment",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 22514,
													"name": "cx",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 22515,
													"name": "cy",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 22516,
													"name": "radius",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 22517,
													"name": "innerRadius",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 22518,
													"name": "startAngle",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 22519,
													"name": "sweepAngle",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 22520,
													"name": "className",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 22521,
													"name": "style",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 22522,
													"name": "clipPath",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 73915,
											"character": 24
										}
									]
								},
								{
									"id": 22457,
									"name": "drawEllipse",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 22458,
											"name": "drawEllipse",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 22459,
													"name": "cx",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 22460,
													"name": "cy",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 22461,
													"name": "rx",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 22462,
													"name": "ry",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 22463,
													"name": "className",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 22464,
													"name": "style",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 73908,
											"character": 19
										}
									]
								},
								{
									"id": 22537,
									"name": "drawImage",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 22538,
											"name": "drawImage",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 22539,
													"name": "imageHref",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 22540,
													"name": "x",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 22541,
													"name": "y",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 22542,
													"name": "w",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 22543,
													"name": "h",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 22544,
													"name": "martix",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 73918,
											"character": 17
										}
									]
								},
								{
									"id": 22474,
									"name": "drawLine",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 22475,
											"name": "drawLine",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 22476,
													"name": "x1",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 22477,
													"name": "y1",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 22478,
													"name": "x2",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 22479,
													"name": "y2",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 22480,
													"name": "className",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 73910,
											"character": 16
										}
									]
								},
								{
									"id": 22481,
									"name": "drawLines",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 22482,
											"name": "drawLines",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 22483,
													"name": "xs",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												},
												{
													"id": 22484,
													"name": "ys",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												},
												{
													"id": 22485,
													"name": "className",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 22486,
													"name": "style",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 22487,
													"name": "clipPath",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 73911,
											"character": 17
										}
									]
								},
								{
									"id": 22431,
									"name": "drawMultipleStrings",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 22432,
											"name": "drawMultipleStrings",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Draw string in the rectangle."
											},
											"parameters": [
												{
													"id": 22433,
													"name": "s",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The string"
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 22434,
													"name": "rectangle",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The rectangle"
													},
													"type": {
														"type": "reference",
														"name": "Rect"
													}
												},
												{
													"id": 22435,
													"name": "horizontalAlignment",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The horizontal alignment."
													},
													"type": {
														"type": "reference",
														"name": "HAlign",
														"id": 1705
													}
												},
												{
													"id": 22436,
													"name": "overflow",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The overflow setting."
													},
													"type": {
														"type": "reference",
														"name": "TextOverflow",
														"id": 1861
													}
												},
												{
													"id": 22437,
													"name": "className",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "The class name."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 22438,
													"name": "groupName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "The group name."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 22439,
													"name": "style",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "The style setting.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 22440,
													"name": "angle",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 22441,
													"name": "center",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"name": "Point"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 73887,
											"character": 27
										}
									]
								},
								{
									"id": 22502,
									"name": "drawPieSegment",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 22503,
											"name": "drawPieSegment",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 22504,
													"name": "cx",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 22505,
													"name": "cy",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 22506,
													"name": "radius",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 22507,
													"name": "startAngle",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 22508,
													"name": "sweepAngle",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 22509,
													"name": "className",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 22510,
													"name": "style",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 22511,
													"name": "clipPath",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 73914,
											"character": 22
										}
									]
								},
								{
									"id": 22495,
									"name": "drawPolygon",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 22496,
											"name": "drawPolygon",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 22497,
													"name": "xs",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												},
												{
													"id": 22498,
													"name": "ys",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												},
												{
													"id": 22499,
													"name": "className",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 22500,
													"name": "style",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 22501,
													"name": "clipPath",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 73913,
											"character": 19
										}
									]
								},
								{
									"id": 22465,
									"name": "drawRect",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 22466,
											"name": "drawRect",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 22467,
													"name": "x",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 22468,
													"name": "y",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 22469,
													"name": "w",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 22470,
													"name": "h",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 22471,
													"name": "className",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 22472,
													"name": "style",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 22473,
													"name": "clipPath",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 73909,
											"character": 16
										}
									]
								},
								{
									"id": 22488,
									"name": "drawSplines",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 22489,
											"name": "drawSplines",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 22490,
													"name": "xs",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												},
												{
													"id": 22491,
													"name": "ys",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												},
												{
													"id": 22492,
													"name": "className",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 22493,
													"name": "style",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 22494,
													"name": "clipPath",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 73912,
											"character": 19
										}
									]
								},
								{
									"id": 22523,
									"name": "drawString",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 22524,
											"name": "drawString",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 22525,
													"name": "s",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 22526,
													"name": "pt",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Point"
													}
												},
												{
													"id": 22527,
													"name": "className",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 22528,
													"name": "style",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 73916,
											"character": 18
										}
									]
								},
								{
									"id": 22529,
									"name": "drawStringRotated",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 22530,
											"name": "drawStringRotated",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 22531,
													"name": "label",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 22532,
													"name": "pt",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Point"
													}
												},
												{
													"id": 22533,
													"name": "center",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Point"
													}
												},
												{
													"id": 22534,
													"name": "angle",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 22535,
													"name": "className",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 22536,
													"name": "style",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 73917,
											"character": 25
										}
									]
								},
								{
									"id": 22455,
									"name": "endGroup",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 22456,
											"name": "endGroup",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 73906,
											"character": 16
										}
									]
								},
								{
									"id": 22421,
									"name": "endRender",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 22422,
											"name": "endRender",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Ends the rendering cycle."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 73859,
											"character": 17
										}
									]
								},
								{
									"id": 22442,
									"name": "measureMultipleStrings",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 22443,
											"name": "measureMultipleStrings",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Draw string in the rectangle.",
												"returns": "The size.\n"
											},
											"parameters": [
												{
													"id": 22444,
													"name": "s",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The string"
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 22445,
													"name": "width",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The suggested width."
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 22446,
													"name": "overflow",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The overflow setting."
													},
													"type": {
														"type": "reference",
														"name": "TextOverflow",
														"id": 1861
													}
												},
												{
													"id": 22447,
													"name": "className",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "The class name."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 22448,
													"name": "groupName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "The group name."
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 22449,
													"name": "style",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"comment": {
														"text": "The style setting.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Size"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 73900,
											"character": 30
										}
									]
								},
								{
									"id": 22545,
									"name": "measureString",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 22546,
											"name": "measureString",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 22547,
													"name": "s",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 22548,
													"name": "className",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 22549,
													"name": "groupName",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 22550,
													"name": "style",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "reference",
												"name": "Size"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 73919,
											"character": 21
										}
									]
								},
								{
									"id": 22429,
									"name": "restoreTransform",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 22430,
											"name": "restoreTransform",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Restore the transform."
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 73874,
											"character": 24
										}
									]
								},
								{
									"id": 22423,
									"name": "setViewportSize",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 22424,
											"name": "setViewportSize",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"comment": {
												"shortText": "Sets the size of the viewport."
											},
											"parameters": [
												{
													"id": 22425,
													"name": "width",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The viewport width."
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 22426,
													"name": "height",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"comment": {
														"text": "The viewport height.\n"
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 73866,
											"character": 23
										}
									]
								},
								{
									"id": 22450,
									"name": "startGroup",
									"kind": 2048,
									"kindString": "Method",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 22451,
											"name": "startGroup",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 22452,
													"name": "className",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 22453,
													"name": "clipPath",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 22454,
													"name": "createTransform",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "core/modules/core.ts",
											"line": 73905,
											"character": 18
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										22418,
										22408,
										22406,
										22414,
										22413,
										22416,
										22415,
										22405,
										22409,
										22411,
										22407,
										22410,
										22417,
										22412
									]
								},
								{
									"title": "Methods",
									"kind": 2048,
									"children": [
										22551,
										22419,
										22427,
										22512,
										22457,
										22537,
										22474,
										22481,
										22431,
										22502,
										22495,
										22465,
										22488,
										22523,
										22529,
										22455,
										22421,
										22442,
										22545,
										22429,
										22423,
										22450
									]
								}
							],
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 73790,
									"character": 28
								}
							]
						},
						{
							"id": 23211,
							"name": "DataValueType",
							"kind": 4194304,
							"kindString": "Type alias",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Represents the data value type."
							},
							"sources": [
								{
									"fileName": "core/modules/core.ts",
									"line": 76250,
									"character": 29
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"name": "Date"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Modules",
							"kind": 2,
							"children": [
								39,
								2094,
								11095,
								3222,
								22583
							]
						},
						{
							"title": "Enumerations",
							"kind": 4,
							"children": [
								1552,
								1565,
								1598,
								1602,
								1606,
								1610,
								1613,
								1617,
								1629,
								37469,
								1638,
								15811,
								15815,
								15820,
								1671,
								1675,
								1687,
								1692,
								1678,
								1702,
								1705,
								1709,
								1711,
								1716,
								1730,
								1733,
								1737,
								1740,
								1757,
								1745,
								1750,
								1760,
								1803,
								1806,
								1812,
								1817,
								1823,
								1831,
								1834,
								1847,
								1851,
								1856,
								1861,
								1865,
								1871,
								1876,
								1880,
								1887
							]
						},
						{
							"title": "Classes",
							"kind": 128,
							"children": [
								1070,
								1952,
								1892,
								1909,
								1920,
								942,
								1931,
								1948
							]
						},
						{
							"title": "Interfaces",
							"kind": 256,
							"children": [
								22404
							]
						},
						{
							"title": "Type aliases",
							"kind": 4194304,
							"children": [
								23211
							]
						}
					],
					"sources": [
						{
							"fileName": "core/modules/core.ts",
							"line": 8,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 165,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 188,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 1839,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 2162,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 2342,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 2575,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 2824,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 2864,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 2912,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 2934,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 2984,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 3827,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 4159,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 4560,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 4565,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 4895,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 5019,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 5201,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 5444,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 5489,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 5527,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 5543,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 5563,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 5596,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 5627,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 5637,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 5656,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 6573,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 6668,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 6796,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 6822,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 6892,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 7167,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 7312,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 7362,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 8433,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 8449,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 8519,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 8694,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 8889,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 9007,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 9080,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 9234,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 9307,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 9371,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 9510,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 9533,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 9557,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 9582,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 9603,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 9627,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 9650,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 9690,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 9733,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 9880,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 9903,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 9922,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 9964,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 9991,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 10038,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 10058,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 10081,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 10096,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 10123,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 10154,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 10178,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 10202,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 10221,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 10244,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 10263,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 10291,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 10318,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 10353,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 10371,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 10540,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 10555,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 10574,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 10605,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 10632,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 10663,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 10702,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 10722,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 10781,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 10805,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 10832,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 10859,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 10883,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 10914,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 10941,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 10964,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 10999,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 11026,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 11047,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 11079,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 11106,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 11127,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 11145,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 11510,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 11616,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 11659,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 11779,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 11800,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 11820,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 11846,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 12011,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 13107,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 14090,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 15004,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 15021,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 15177,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 15284,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 15467,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 15487,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 15502,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 15576,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 15595,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 15611,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 15627,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 15642,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 15654,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 15783,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 15926,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 15970,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 15986,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 16035,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 16086,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 16104,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 16133,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 16176,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 16187,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 16205,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 16266,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 16323,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 16419,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 16505,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 16554,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 16646,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 16741,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 16793,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 16811,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 16841,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 16883,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 16940,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 17033,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 17056,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 17075,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 17094,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 17109,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 17128,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 17160,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 17283,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 17363,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 17418,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 17461,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 17493,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 17536,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 17568,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 17611,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 17643,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 17682,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 17714,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 17756,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 17772,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 17800,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 17818,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 17912,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 18043,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 18187,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 18220,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 18540,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 18616,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 18781,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 18868,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 18955,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 19030,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 19105,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 19180,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 19255,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 19330,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 19387,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 19436,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 19472,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 19503,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 19526,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 19543,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 19605,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 19721,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 19844,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 19882,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 19978,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 20103,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 20215,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 20394,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 20522,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 20564,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 20616,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 20667,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 20683,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 20704,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 20724,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 20990,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 21078,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 21129,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 21319,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 21358,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 21390,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 21430,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 21462,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 21603,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 21642,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 21674,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 21713,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 21745,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 21784,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 21816,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 21941,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 22079,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 22126,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 22168,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 22208,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 22240,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 22272,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 22292,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 22405,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 22444,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 22485,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 22571,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 22610,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 22651,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 22831,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 22890,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 22922,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 22967,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 23052,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 23089,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 23137,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 23238,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 23366,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 23521,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 23681,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 23830,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 23899,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 24037,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 24209,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 24459,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 24614,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 24809,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 24896,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 25057,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 25215,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 25240,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 25307,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 25332,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 25357,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 25382,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 25405,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 25441,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 25453,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 25484,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 25515,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 25530,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 25545,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 25562,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 25664,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 25727,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 25755,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 25772,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 25846,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 25981,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 26146,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 26213,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 26427,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 26527,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 26632,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 26665,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 26713,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 26787,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 26824,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 26936,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 27220,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 27366,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 27404,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 27436,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 27680,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 27757,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 27778,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 27838,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 27984,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 28119,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 28168,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 28221,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 28297,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 28349,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 28468,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 28612,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 28677,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 28783,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 28992,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 29256,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 29478,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 29701,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 29882,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 30179,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 30242,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 30315,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 30405,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 30580,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 30649,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 30853,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 30875,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 30897,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 30912,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 30927,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 30986,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 31059,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 31082,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 31098,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 31139,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 31190,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 31247,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 31309,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 31399,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 31445,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 31481,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 31504,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 31519,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 31534,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 31565,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 31592,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 31748,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 31912,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 32067,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 32135,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 32169,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 32198,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 32224,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 32427,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 32476,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 32525,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 32657,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 32751,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 32944,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 33070,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 33179,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 33292,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 33417,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 33549,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 33691,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 33766,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 33841,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 33858,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 33889,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 33930,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 33945,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 33964,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 34019,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 34054,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 34122,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 34210,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 34265,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 34441,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 34611,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 34680,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 34766,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 34838,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 34853,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 34868,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 34887,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 34985,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 35023,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 35061,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 35205,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 35245,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 35281,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 35387,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 35429,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 35533,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 35687,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 35790,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 35807,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 35826,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 35858,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 35876,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 35893,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 35921,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 35940,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 35958,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 36014,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 36041,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 36065,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 36096,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 36113,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 36259,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 36351,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 36459,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 36636,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 36845,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 37180,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 37228,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 37467,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 37587,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 37910,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 38143,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 38194,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 38548,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 38575,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 38733,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 38892,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 38909,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 38948,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 39000,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 39069,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 39108,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 39176,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 39215,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 39254,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 39270,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 39286,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 39314,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 39330,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 39358,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 39374,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 39390,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 39409,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 39538,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 39554,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 39573,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 39607,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 39622,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 39633,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 39652,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 39672,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 39683,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 39710,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 39725,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 39749,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 39768,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 39795,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 39810,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 39825,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 39869,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 39888,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 39903,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 39953,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 40115,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 40221,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 40989,
							"character": 9
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 41065,
							"character": 9
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 41214,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 41468,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 41548,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 41832,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 41901,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 42007,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 42058,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 42244,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 42440,
							"character": 9
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 42488,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 42673,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 42713,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 42815,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 43241,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 43290,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 43335,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 43419,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 43492,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 43657,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 43730,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 43907,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 44405,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 44620,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 44702,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 44877,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 44952,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 45011,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 45060,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 45134,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 45235,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 45354,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 45395,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 45430,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 45489,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 45542,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 45579,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 45655,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 45692,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 45745,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 45798,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 45834,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 45854,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 45873,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 45938,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 45983,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 45999,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 46019,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 46038,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 46053,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 46141,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 46234,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 46286,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 46313,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 46332,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 46359,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 46374,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 46403,
							"character": 9
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 46596,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 46917,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 46949,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 46976,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 47017,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 47129,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 47155,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 47216,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 47399,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 47495,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 47535,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 47608,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 47793,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 47808,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 47827,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 47842,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 47861,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 47884,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 47915,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 48102,
							"character": 9
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 48122,
							"character": 9
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 48149,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 48220,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 48265,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 48345,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 48372,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 48424,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 48475,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 48539,
							"character": 9
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 48558,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 48609,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 48624,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 48654,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 48728,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 48839,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 48858,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 48873,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 48909,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 48928,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 48951,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 48978,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 48997,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 49050,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 49174,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 49285,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 49366,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 49438,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 49465,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 49484,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 49505,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 49546,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 49589,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 49612,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 49650,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 49669,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 49683,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 49735,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 49854,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 49898,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 50017,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 50052,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 50088,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 50123,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 50138,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 50153,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 50202,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 50274,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 50289,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 50312,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 50336,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 50360,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 50400,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 50446,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 50490,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 50561,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 50650,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 50791,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 50913,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 50947,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 50986,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 51033,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 51075,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 51122,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 51145,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 51187,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 51244,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 51271,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 51313,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 51359,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 51403,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 51462,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 51499,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 51518,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 51560,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 51606,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 51650,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 51709,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 51768,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 51787,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 51829,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 51876,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 51899,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 51941,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 51987,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 52030,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 52104,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 52168,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 52293,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 52369,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 52397,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 52424,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 52443,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 52485,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 52531,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 52559,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 52609,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 52658,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 52673,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 52684,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 52716,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 52827,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 52879,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 52906,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 53042,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 53137,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 53249,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 53279,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 53336,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 53374,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 53404,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 53510,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 53531,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 53568,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 53591,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 53618,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 53660,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 53699,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 53716,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 53730,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 53770,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 53813,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 53846,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 53895,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 53941,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 53984,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 54044,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 54105,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 54254,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 54304,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 54346,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 54393,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 54440,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 54524,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 54574,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 54619,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 54666,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 54709,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 54728,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 54813,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 54947,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 54972,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 55006,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 55022,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 55035,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 55122,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 55134,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 55191,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 55286,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 55300,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 55314,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 55330,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 55344,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 55358,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 55374,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 55386,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 55455,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 55476,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 55491,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 55512,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 55526,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 55542,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 55586,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 55642,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 55720,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 55747,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 55794,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 55840,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 55890,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 55946,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 56019,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 56072,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 56225,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 56247,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 56274,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 56293,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 56340,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 56387,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 56540,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 56593,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 56609,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 56650,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 56712,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 56729,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 56770,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 56821,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 56862,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 56877,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 57042,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 57136,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 57154,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 57179,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 57211,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 57264,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 57309,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 57362,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 57415,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 57469,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 57520,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 57552,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 57616,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 57679,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 57723,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 57751,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 57805,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 57844,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 57859,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 57965,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 58011,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 58060,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 58116,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 58231,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 58270,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 58309,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 58336,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 58395,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 58546,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 58573,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 58592,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 58631,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 58690,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 58709,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 58748,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 58787,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 58831,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 58875,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 58919,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 58963,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 59007,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 59051,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 59095,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 59139,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 59183,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 59227,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 59271,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 59576,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 59657,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 59677,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 59705,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 59725,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 59754,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 59771,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 59916,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 59948,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 59975,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 60001,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 60028,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 60058,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 60088,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 60113,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 60247,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 60404,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 60473,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 60532,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 60598,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 60629,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 60882,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 60924,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 60958,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 61032,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 61097,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 61170,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 61327,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 61397,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 61537,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 61706,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 61784,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 61851,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 61910,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 61977,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 62132,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 62172,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 62204,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 62291,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 62359,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 62408,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 62445,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 62476,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 62539,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 62580,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 62729,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 62774,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 62888,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 62908,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 63060,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 63083,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 63163,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 63195,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 63264,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 63362,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 63405,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 63426,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 63449,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 63535,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 63568,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 63599,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 63686,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 63721,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 63757,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 63804,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 63842,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 63856,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 63873,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 63920,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 64038,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 64052,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 64069,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 64195,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 64238,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 64323,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 64355,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 64392,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 64427,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 64470,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 64507,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 64538,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 64569,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 64600,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 64635,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 64689,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 64726,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 64757,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 64788,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 64819,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 64844,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 64879,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 64923,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 64960,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 64991,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 65022,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 65053,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 65088,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 65142,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 65179,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 65210,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 65241,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 65272,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 65307,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 65361,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 65398,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 65429,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 65460,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 65491,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 65535,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 65576,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 65613,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 65644,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 65675,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 65706,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 65761,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 65839,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 65917,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 65936,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 65956,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 66054,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 66074,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 66131,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 66151,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 66222,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 66312,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 66329,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 66348,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 66388,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 66408,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 66553,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 66573,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 66755,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 66775,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 66988,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 67144,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 67191,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 67260,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 67297,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 67345,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 67382,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 67410,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 67533,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 67652,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 67731,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 67757,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 67897,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 67916,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 67935,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 67968,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 68009,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 68080,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 68104,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 68128,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 68152,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 68176,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 68194,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 68212,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 68302,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 68322,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 68373,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 68519,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 68598,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 68615,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 68635,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 68658,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 68737,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 68754,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 68774,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 68795,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 68874,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 68891,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 68911,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 68932,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 68952,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 69041,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 69132,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 69149,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 69169,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 69258,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 69278,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 69411,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 69431,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 69520,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 69540,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 69766,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 69793,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 69833,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 69873,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 69913,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 69972,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 70031,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 70071,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 70133,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 70174,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 70214,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 70261,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 70292,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 70323,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 70353,
							"character": 9
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 70451,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 70468,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 70488,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 70649,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 70730,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 70750,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 70784,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 70804,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 70838,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 70858,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 70895,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 70915,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 70948,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 70965,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 70985,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 71020,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 71118,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 71138,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 71194,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 71214,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 71250,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 71351,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 71447,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 71571,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 71695,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 71794,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 72246,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 72615,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 72690,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 72810,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 73036,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 73559,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 73692,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 73784,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 73941,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 73966,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 74093,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 74160,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 74288,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 74522,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 74606,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 74832,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 74981,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 75097,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 75261,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 75602,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 75653,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 75685,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 75717,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 75737,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 75768,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 75796,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 75812,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 75836,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 75878,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 75988,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 76070,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 76125,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 76142,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 76159,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 76176,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 76193,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 76210,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 76227,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 76244,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 76254,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 76270,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 76350,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 76966,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 77039,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 77187,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 77423,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 77612,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 77757,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 77768,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 78075,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 78648,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 78690,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 78751,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 79130,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 79212,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 79250,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 79404,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 79810,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 80898,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 81136,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 81157,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 81476,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 81674,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 81711,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 81917,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 82953,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 83199,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 83530,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 83738,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 83942,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 83999,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 84056,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 84158,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 84228,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 84329,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 84509,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 84613,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 84722,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 84758,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 85106,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 85985,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 86007,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 86287,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 86396,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 86555,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 86603,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 86716,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 86828,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 86906,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 86931,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 87028,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 87383,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 87406,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 87506,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 87523,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 87545,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 87724,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 87743,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 87953,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 88013,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 88121,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 88353,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 88585,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 88617,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 88875,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 89159,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 89271,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 89711,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 89907,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 90722,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 90848,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 91128,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 92071,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 92628,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 92799,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 92812,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 92930,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 93020,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 93110,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 93176,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 93192,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 93272,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 93358,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 93386,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 93426,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 93573,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 93629,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 93677,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 93828,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 94091,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 94285,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 94717,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 94773,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 94811,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 94907,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 95021,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 95065,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 95090,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 95128,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 95137,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 95178,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 95263,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 95394,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 95440,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 95544,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 95607,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 95670,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 95852,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 95976,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 96135,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 96209,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 96239,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 96303,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 96326,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 96467,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 96696,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 96730,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 96859,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 96892,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 96948,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 96991,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 97036,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 97081,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 97163,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 97239,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 97312,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 97354,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 97427,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 97474,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 97559,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 97604,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 97763,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 97806,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 97853,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 98008,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 98103,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 98278,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 98316,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 98350,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 98394,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 98414,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 98783,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 98859,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 98898,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 98956,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 99094,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 99117,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 99240,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 99372,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 99475,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 99494,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 99594,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 99693,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 99795,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 99863,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 99951,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 99995,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 100071,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 100179,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 100211,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 100279,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 100558,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 100636,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 100807,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 100902,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 101045,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 101379,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 101423,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 101518,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 101723,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 101761,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 101894,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 101951,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 102055,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 102101,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 102112,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 102228,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 102263,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 102298,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 102466,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 102486,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 102614,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 102683,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 102842,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 102885,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 102999,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 103607,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 104057,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 104416,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 104616,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 104685,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 104789,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 105022,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 105060,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 105118,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 105145,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 106746,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 106844,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 107099,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 107154,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 107347,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 107392,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 107736,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 107950,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 108049,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 108257,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 108312,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 108556,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 108926,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 109056,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 109240,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 109270,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 109375,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 110463,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 110640,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 110674,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 110922,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 111123,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 111165,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 111356,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 111540,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 111601,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 111881,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 111935,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 112115,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 112409,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 112549,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 112591,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 112655,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 113141,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 113424,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 113483,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 113682,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 113761,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 113833,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 113947,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 114019,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 114062,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 114182,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 114225,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 114268,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 114400,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 114443,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 114648,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 114985,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 115043,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 115275,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 115367,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 115525,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 115736,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 116162,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 116227,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 116260,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 116293,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 116326,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 116359,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 116392,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 116425,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 116458,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 116491,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 116524,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 116559,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 117044,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 117494,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 117525,
							"character": 12
						},
						{
							"fileName": "core/modules/core.ts",
							"line": 117599,
							"character": 12
						}
					]
				}
			],
			"groups": [
				{
					"title": "Modules",
					"kind": 2,
					"children": [
						6
					]
				}
			],
			"sources": [
				{
					"fileName": "core/modules/core.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 47713,
			"name": "financial",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/kennethliu/Projects/dv-chart/source/financial/modules/financial.ts",
			"comment": {},
			"children": [
				{
					"id": 47714,
					"name": "dv",
					"kind": 2,
					"kindString": "Module",
					"flags": {},
					"children": [
						{
							"id": 47715,
							"name": "financial",
							"kind": 2,
							"kindString": "Module",
							"flags": {
								"isExported": true
							},
							"comment": {},
							"children": [
								{
									"id": 47719,
									"name": "models",
									"kind": 2,
									"kindString": "Module",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 48456,
											"name": "IStockPointModel",
											"kind": 256,
											"kindString": "Interface",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Represents the stock data point model."
											},
											"children": [
												{
													"id": 48476,
													"name": "additionalKind",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets the additional kind."
													},
													"sources": [
														{
															"fileName": "core/modules/core.ts",
															"line": 34002,
															"character": 22
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IPointModel.additionalKind",
														"id": 9296
													}
												},
												{
													"id": 48460,
													"name": "close",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets the close"
													},
													"sources": [
														{
															"fileName": "financial/modules/financial.ts",
															"line": 1525,
															"character": 22
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 48473,
													"name": "color",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets the color."
													},
													"sources": [
														{
															"fileName": "core/modules/core.ts",
															"line": 33990,
															"character": 13
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"name": "ILinearGradientColor",
																"id": 3445
															},
															{
																"type": "reference",
																"name": "IRadialGradientColor",
																"id": 3450
															}
														]
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IPointModel.color",
														"id": 9293
													}
												},
												{
													"id": 48462,
													"name": "detail",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets the detail."
													},
													"sources": [
														{
															"fileName": "core/modules/core.ts",
															"line": 31548,
															"character": 23
														}
													],
													"type": {
														"type": "reference",
														"name": "DataValueType",
														"id": 23211
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "ICartesianPointModel.detail",
														"id": 8359
													}
												},
												{
													"id": 48463,
													"name": "dimension",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets the dimension value."
													},
													"sources": [
														{
															"fileName": "core/modules/core.ts",
															"line": 31552,
															"character": 26
														}
													],
													"type": {
														"type": "reference",
														"name": "DataValueType",
														"id": 23211
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "ICartesianPointModel.dimension",
														"id": 8360
													}
												},
												{
													"id": 48478,
													"name": "filtered",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets whether it is filtered out."
													},
													"sources": [
														{
															"fileName": "core/modules/core.ts",
															"line": 34010,
															"character": 16
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IPointModel.filtered",
														"id": 9298
													}
												},
												{
													"id": 48457,
													"name": "high",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets the high"
													},
													"sources": [
														{
															"fileName": "financial/modules/financial.ts",
															"line": 1513,
															"character": 21
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 48479,
													"name": "hover",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets whether the mouse pointer is on it."
													},
													"sources": [
														{
															"fileName": "core/modules/core.ts",
															"line": 34014,
															"character": 13
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IPointModel.hover",
														"id": 9299
													}
												},
												{
													"id": 48466,
													"name": "item",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets the item."
													},
													"sources": [
														{
															"fileName": "core/modules/core.ts",
															"line": 33974,
															"character": 21
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 48467,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"indexSignature": {
																"id": 48468,
																"name": "__index",
																"kind": 8192,
																"kindString": "Index signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 48469,
																		"name": "key",
																		"kind": 32768,
																		"kindString": "Parameter",
																		"flags": {},
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"name": "DataValueType",
																	"id": 23211
																}
															},
															"sources": [
																{
																	"fileName": "core/modules/core.ts",
																	"line": 33974,
																	"character": 22
																}
															]
														}
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IPointModel.item",
														"id": 9286
													}
												},
												{
													"id": 48480,
													"name": "items",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets the data items."
													},
													"sources": [
														{
															"fileName": "core/modules/core.ts",
															"line": 33940,
															"character": 22
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "any"
														}
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IDataModel.items",
														"id": 9270
													}
												},
												{
													"id": 48458,
													"name": "low",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets the low"
													},
													"sources": [
														{
															"fileName": "financial/modules/financial.ts",
															"line": 1517,
															"character": 20
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 48465,
													"name": "offset",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets the offset of the data point."
													},
													"sources": [
														{
															"fileName": "core/modules/core.ts",
															"line": 31560,
															"character": 14
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "ICartesianPointModel.offset",
														"id": 8362
													}
												},
												{
													"id": 48459,
													"name": "open",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets the open"
													},
													"sources": [
														{
															"fileName": "financial/modules/financial.ts",
															"line": 1521,
															"character": 21
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 48482,
													"name": "parent",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets the parent."
													},
													"sources": [
														{
															"fileName": "core/modules/core.ts",
															"line": 39763,
															"character": 23
														}
													],
													"type": {
														"type": "reference",
														"name": "IModel",
														"id": 11033
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IModel.parent",
														"id": 11035
													}
												},
												{
													"id": 48477,
													"name": "selected",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets whether it is selected."
													},
													"sources": [
														{
															"fileName": "core/modules/core.ts",
															"line": 34006,
															"character": 16
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IPointModel.selected",
														"id": 9297
													}
												},
												{
													"id": 48474,
													"name": "shape",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets the shape."
													},
													"sources": [
														{
															"fileName": "core/modules/core.ts",
															"line": 33994,
															"character": 13
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IPointModel.shape",
														"id": 9294
													}
												},
												{
													"id": 48475,
													"name": "size",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets the size."
													},
													"sources": [
														{
															"fileName": "core/modules/core.ts",
															"line": 33998,
															"character": 12
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IPointModel.size",
														"id": 9295
													}
												},
												{
													"id": 48470,
													"name": "style",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets the style."
													},
													"sources": [
														{
															"fileName": "core/modules/core.ts",
															"line": 33978,
															"character": 22
														}
													],
													"type": {
														"type": "reference",
														"name": "IDataPointStyleOption",
														"id": 13527
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IPointModel.style",
														"id": 9290
													}
												},
												{
													"id": 48471,
													"name": "text",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets the text config."
													},
													"sources": [
														{
															"fileName": "core/modules/core.ts",
															"line": 33982,
															"character": 21
														}
													],
													"type": {
														"type": "reference",
														"name": "IPlotConfigTextOption",
														"id": 13825
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IPointModel.text",
														"id": 9291
													}
												},
												{
													"id": 48472,
													"name": "tooltip",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets the tooltip config."
													},
													"sources": [
														{
															"fileName": "core/modules/core.ts",
															"line": 33986,
															"character": 24
														}
													],
													"type": {
														"type": "reference",
														"name": "IPlotConfigTooltipOption",
														"id": 13843
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IPointModel.tooltip",
														"id": 9292
													}
												},
												{
													"id": 48481,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets the type."
													},
													"sources": [
														{
															"fileName": "core/modules/core.ts",
															"line": 39759,
															"character": 21
														}
													],
													"type": {
														"type": "reference",
														"name": "ElementType",
														"id": 1638
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IModel.type",
														"id": 11034
													}
												},
												{
													"id": 48464,
													"name": "value",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets the value of the data point."
													},
													"sources": [
														{
															"fileName": "core/modules/core.ts",
															"line": 31556,
															"character": 22
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "ICartesianPointModel.value",
														"id": 8361
													}
												},
												{
													"id": 48461,
													"name": "valueDefinition",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets the value definition."
													},
													"sources": [
														{
															"fileName": "core/modules/core.ts",
															"line": 31544,
															"character": 32
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "ICartesianPointModel.valueDefinition",
														"id": 8358
													}
												},
												{
													"id": 48483,
													"name": "queryInterface",
													"kind": 2048,
													"kindString": "Method",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 48484,
															"name": "queryInterface",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"comment": {
																"shortText": "Queries the specified interface.",
																"returns": "The specified interface.\n"
															},
															"parameters": [
																{
																	"id": 48485,
																	"name": "name",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"comment": {
																		"text": "The interface name.\n"
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "reference",
																"name": "IQueryInterface"
															},
															"inheritedFrom": {
																"type": "reference",
																"name": "IQueryInterface.queryInterface"
															}
														}
													],
													"sources": [
														{
															"fileName": "core/modules/core.ts",
															"line": 5558,
															"character": 22
														}
													],
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														48476,
														48460,
														48473,
														48462,
														48463,
														48478,
														48457,
														48479,
														48466,
														48480,
														48458,
														48465,
														48459,
														48482,
														48477,
														48474,
														48475,
														48470,
														48471,
														48472,
														48481,
														48464,
														48461
													]
												},
												{
													"title": "Methods",
													"kind": 2048,
													"children": [
														48483
													]
												}
											],
											"sources": [
												{
													"fileName": "financial/modules/financial.ts",
													"line": 1509,
													"character": 37
												}
											],
											"extendedTypes": [
												{
													"type": "reference",
													"name": "ICartesianPointModel",
													"id": 8357
												}
											]
										}
									],
									"groups": [
										{
											"title": "Interfaces",
											"kind": 256,
											"children": [
												48456
											]
										}
									],
									"sources": [
										{
											"fileName": "financial/modules/financial.ts",
											"line": 30,
											"character": 29
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 161,
											"character": 29
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 204,
											"character": 29
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 243,
											"character": 29
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 276,
											"character": 29
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 315,
											"character": 29
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 348,
											"character": 29
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 383,
											"character": 29
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 672,
											"character": 29
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 821,
											"character": 29
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 881,
											"character": 29
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 1040,
											"character": 29
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 1119,
											"character": 29
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 1331,
											"character": 29
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 1412,
											"character": 29
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 1468,
											"character": 29
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 1491,
											"character": 29
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 1503,
											"character": 29
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 1529,
											"character": 29
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 1625,
											"character": 29
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 2137,
											"character": 29
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 2180,
											"character": 29
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 2259,
											"character": 29
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 2291,
											"character": 29
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 2328,
											"character": 29
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 2363,
											"character": 29
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 2400,
											"character": 29
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 2530,
											"character": 29
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 2565,
											"character": 29
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 2602,
											"character": 29
										}
									]
								},
								{
									"id": 48525,
									"name": "options",
									"kind": 2,
									"kindString": "Module",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 48585,
											"name": "IStockFieldOption",
											"kind": 256,
											"kindString": "Interface",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Represents the stock field option."
											},
											"children": [
												{
													"id": 48589,
													"name": "close",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets the close field name."
													},
													"sources": [
														{
															"fileName": "financial/modules/financial.ts",
															"line": 1848,
															"character": 13
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 48586,
													"name": "high",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets the high field name."
													},
													"sources": [
														{
															"fileName": "financial/modules/financial.ts",
															"line": 1836,
															"character": 12
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 48587,
													"name": "low",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets the low field name."
													},
													"sources": [
														{
															"fileName": "financial/modules/financial.ts",
															"line": 1840,
															"character": 11
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 48588,
													"name": "open",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets the open field name."
													},
													"sources": [
														{
															"fileName": "financial/modules/financial.ts",
															"line": 1844,
															"character": 12
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 48590,
													"name": "x",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets the x field name."
													},
													"sources": [
														{
															"fileName": "financial/modules/financial.ts",
															"line": 1852,
															"character": 9
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 48593,
													"name": "isEmpty",
													"kind": 2048,
													"kindString": "Method",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 48594,
															"name": "isEmpty",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"comment": {
																"shortText": "Gets whether the option is empty."
															},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															},
															"inheritedFrom": {
																"type": "reference",
																"name": "IOption.isEmpty",
																"id": 13751
															}
														}
													],
													"sources": [
														{
															"fileName": "core/modules/core.ts",
															"line": 48923,
															"character": 15
														}
													],
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												},
												{
													"id": 48591,
													"name": "option",
													"kind": 2048,
													"kindString": "Method",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 48592,
															"name": "option",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"comment": {
																"shortText": "Gets the option setting."
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															},
															"inheritedFrom": {
																"type": "reference",
																"name": "IOption.option",
																"id": 13749
															}
														}
													],
													"sources": [
														{
															"fileName": "core/modules/core.ts",
															"line": 48919,
															"character": 14
														}
													],
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														48589,
														48586,
														48587,
														48588,
														48590
													]
												},
												{
													"title": "Methods",
													"kind": 2048,
													"children": [
														48593,
														48591
													]
												}
											],
											"sources": [
												{
													"fileName": "financial/modules/financial.ts",
													"line": 1832,
													"character": 38
												}
											],
											"extendedTypes": [
												{
													"type": "reference",
													"name": "IOption",
													"id": 13748
												}
											]
										},
										{
											"id": 48595,
											"name": "IStockFieldValueEncodingOption",
											"kind": 256,
											"kindString": "Interface",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Represents the stock value encoding option."
											},
											"children": [
												{
													"id": 48597,
													"name": "aggregate",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets the aggregate option."
													},
													"sources": [
														{
															"fileName": "financial/modules/financial.ts",
															"line": 1871,
															"character": 17
														}
													],
													"type": {
														"type": "reference",
														"name": "Aggregate",
														"id": 1552
													}
												},
												{
													"id": 48598,
													"name": "excludeNulls",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets whether the null values is shown."
													},
													"sources": [
														{
															"fileName": "financial/modules/financial.ts",
															"line": 1875,
															"character": 20
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 48596,
													"name": "field",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets the field name."
													},
													"sources": [
														{
															"fileName": "financial/modules/financial.ts",
															"line": 1867,
															"character": 13
														}
													],
													"type": {
														"type": "reference",
														"name": "IStockFieldOption",
														"id": 48585
													}
												},
												{
													"id": 48599,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets option type."
													},
													"sources": [
														{
															"fileName": "core/modules/core.ts",
															"line": 46369,
															"character": 21
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IValueEncodingOption.type",
														"id": 13194
													}
												},
												{
													"id": 48602,
													"name": "isEmpty",
													"kind": 2048,
													"kindString": "Method",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 48603,
															"name": "isEmpty",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"comment": {
																"shortText": "Gets whether the option is empty."
															},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															},
															"inheritedFrom": {
																"type": "reference",
																"name": "IOption.isEmpty",
																"id": 13751
															}
														}
													],
													"sources": [
														{
															"fileName": "core/modules/core.ts",
															"line": 48923,
															"character": 15
														}
													],
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												},
												{
													"id": 48600,
													"name": "option",
													"kind": 2048,
													"kindString": "Method",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 48601,
															"name": "option",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"comment": {
																"shortText": "Gets the option setting."
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															},
															"inheritedFrom": {
																"type": "reference",
																"name": "IOption.option",
																"id": 13749
															}
														}
													],
													"sources": [
														{
															"fileName": "core/modules/core.ts",
															"line": 48919,
															"character": 14
														}
													],
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														48597,
														48598,
														48596,
														48599
													]
												},
												{
													"title": "Methods",
													"kind": 2048,
													"children": [
														48602,
														48600
													]
												}
											],
											"sources": [
												{
													"fileName": "financial/modules/financial.ts",
													"line": 1863,
													"character": 51
												}
											],
											"extendedTypes": [
												{
													"type": "reference",
													"name": "IValueEncodingOption",
													"id": 13193
												}
											]
										}
									],
									"groups": [
										{
											"title": "Interfaces",
											"kind": 256,
											"children": [
												48585,
												48595
											]
										}
									],
									"sources": [
										{
											"fileName": "financial/modules/financial.ts",
											"line": 1658,
											"character": 30
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 1755,
											"character": 30
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 1826,
											"character": 30
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 1857,
											"character": 30
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 1880,
											"character": 30
										}
									]
								},
								{
									"id": 48855,
									"name": "plugins",
									"kind": 2,
									"kindString": "Module",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "financial/modules/financial.ts",
											"line": 2437,
											"character": 30
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 2468,
											"character": 30
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 2499,
											"character": 30
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 2639,
											"character": 30
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 2670,
											"character": 30
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 2701,
											"character": 30
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 2732,
											"character": 30
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 2773,
											"character": 30
										},
										{
											"fileName": "financial/modules/financial.ts",
											"line": 4446,
											"character": 30
										}
									]
								}
							],
							"groups": [
								{
									"title": "Modules",
									"kind": 2,
									"children": [
										47719,
										48525,
										48855
									]
								}
							],
							"sources": [
								{
									"fileName": "financial/modules/financial.ts",
									"line": 8,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 30,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 161,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 204,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 243,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 276,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 315,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 348,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 383,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 672,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 821,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 881,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 1040,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 1119,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 1331,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 1412,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 1468,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 1491,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 1503,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 1529,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 1625,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 1658,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 1755,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 1826,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 1857,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 1880,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 1941,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 2014,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 2061,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 2137,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 2180,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 2259,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 2291,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 2328,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 2363,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 2400,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 2437,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 2468,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 2499,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 2530,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 2565,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 2602,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 2639,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 2670,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 2701,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 2732,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 2773,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 2814,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 2934,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 2992,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 3255,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 3420,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 3492,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 3740,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 4023,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 4175,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 4220,
									"character": 22
								},
								{
									"fileName": "financial/modules/financial.ts",
									"line": 4446,
									"character": 22
								}
							]
						}
					],
					"groups": [
						{
							"title": "Modules",
							"kind": 2,
							"children": [
								47715
							]
						}
					],
					"sources": [
						{
							"fileName": "financial/modules/financial.ts",
							"line": 8,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 30,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 161,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 204,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 243,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 276,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 315,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 348,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 383,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 672,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 821,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 881,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 1040,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 1119,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 1331,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 1412,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 1468,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 1491,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 1503,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 1529,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 1625,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 1658,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 1755,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 1826,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 1857,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 1880,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 1941,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 2014,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 2061,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 2137,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 2180,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 2259,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 2291,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 2328,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 2363,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 2400,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 2437,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 2468,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 2499,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 2530,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 2565,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 2602,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 2639,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 2670,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 2701,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 2732,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 2773,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 2814,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 2934,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 2992,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 3255,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 3420,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 3492,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 3740,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 4023,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 4175,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 4220,
							"character": 12
						},
						{
							"fileName": "financial/modules/financial.ts",
							"line": 4446,
							"character": 12
						}
					]
				}
			],
			"groups": [
				{
					"title": "Modules",
					"kind": 2,
					"children": [
						47714
					]
				}
			],
			"sources": [
				{
					"fileName": "financial/modules/financial.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 50601,
			"name": "map",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/kennethliu/Projects/dv-chart/source/map/modules/map.ts",
			"comment": {},
			"children": [
				{
					"id": 50602,
					"name": "dv",
					"kind": 2,
					"kindString": "Module",
					"flags": {},
					"children": [
						{
							"id": 50603,
							"name": "map",
							"kind": 2,
							"kindString": "Module",
							"flags": {
								"isExported": true
							},
							"comment": {},
							"children": [
								{
									"id": 50620,
									"name": "models",
									"kind": 2,
									"kindString": "Module",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 51697,
											"name": "IGeographicLocation",
											"kind": 256,
											"kindString": "Interface",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Represents the geographic location."
											},
											"children": [
												{
													"id": 51700,
													"name": "identify",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets the identify."
													},
													"sources": [
														{
															"fileName": "map/modules/map.ts",
															"line": 2311,
															"character": 25
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 51699,
													"name": "latitude",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets the latitude."
													},
													"sources": [
														{
															"fileName": "map/modules/map.ts",
															"line": 2307,
															"character": 25
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 51698,
													"name": "longitude",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets the longitude."
													},
													"sources": [
														{
															"fileName": "map/modules/map.ts",
															"line": 2303,
															"character": 26
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														51700,
														51699,
														51698
													]
												}
											],
											"sources": [
												{
													"fileName": "map/modules/map.ts",
													"line": 2299,
													"character": 40
												}
											]
										}
									],
									"groups": [
										{
											"title": "Interfaces",
											"kind": 256,
											"children": [
												51697
											]
										}
									],
									"sources": [
										{
											"fileName": "map/modules/map.ts",
											"line": 97,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 164,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 203,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 235,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 290,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 427,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 474,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 525,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 558,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 609,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 642,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 772,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 805,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 915,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 1037,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 1078,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 1093,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 1107,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 1121,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 1159,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 1190,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 1217,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 1333,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 1380,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 1438,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 1505,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 1656,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 1731,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 1783,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 1841,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 1882,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 1961,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 2108,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 2162,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 2216,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 2293,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 2316,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 2359,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 2409,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 2454,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 2623,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 2679,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 2734,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 2754,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 2798,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 2852,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 2931,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 3101,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 3156,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 3213,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 3433,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 3457,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 3540,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 3577,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 3601,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 3705,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 3785,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 3846,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 3883,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 3901,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 3956,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 3998,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 4169,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 4282,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 4297,
											"character": 23
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 5542,
											"character": 23
										}
									]
								},
								{
									"id": 52853,
									"name": "options",
									"kind": 2,
									"kindString": "Module",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 52911,
											"name": "IMapConfigOption",
											"kind": 256,
											"kindString": "Interface",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Represents the config option of the map."
											},
											"children": [
												{
													"id": 52913,
													"name": "center",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets the center."
													},
													"sources": [
														{
															"fileName": "map/modules/map.ts",
															"line": 5439,
															"character": 14
														}
													],
													"type": {
														"type": "reference",
														"name": "Point"
													}
												},
												{
													"id": 52912,
													"name": "geojson",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets the geo json."
													},
													"sources": [
														{
															"fileName": "map/modules/map.ts",
															"line": 5435,
															"character": 15
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 52918,
													"name": "hAlign",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets hAlign"
													},
													"sources": [
														{
															"fileName": "map/modules/map.ts",
															"line": 5460,
															"character": 14
														}
													],
													"type": {
														"type": "reference",
														"name": "HAlign",
														"id": 1705
													}
												},
												{
													"id": 52917,
													"name": "projection",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets the projection."
													},
													"sources": [
														{
															"fileName": "map/modules/map.ts",
															"line": 5456,
															"character": 18
														}
													],
													"type": {
														"type": "reference",
														"name": "ProjectionType",
														"id": 50616
													}
												},
												{
													"id": 52920,
													"name": "style",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets style"
													},
													"sources": [
														{
															"fileName": "map/modules/map.ts",
															"line": 5468,
															"character": 13
														}
													],
													"type": {
														"type": "reference",
														"name": "IDataPointStyleOption",
														"id": 13527
													}
												},
												{
													"id": 52914,
													"name": "translate",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets the translate."
													},
													"sources": [
														{
															"fileName": "map/modules/map.ts",
															"line": 5443,
															"character": 17
														}
													],
													"type": {
														"type": "reference",
														"name": "Point"
													}
												},
												{
													"id": 52919,
													"name": "vAlign",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets vAlign"
													},
													"sources": [
														{
															"fileName": "map/modules/map.ts",
															"line": 5464,
															"character": 14
														}
													],
													"type": {
														"type": "reference",
														"name": "VAlign",
														"id": 1876
													}
												},
												{
													"id": 52916,
													"name": "zoom",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isExported": true
													},
													"comment": {
														"shortText": "Gets or sets the zoom."
													},
													"sources": [
														{
															"fileName": "map/modules/map.ts",
															"line": 5452,
															"character": 12
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 52925,
													"name": "isEmpty",
													"kind": 2048,
													"kindString": "Method",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 52926,
															"name": "isEmpty",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"comment": {
																"shortText": "Gets whether the option is empty."
															},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															},
															"inheritedFrom": {
																"type": "reference",
																"name": "IOption.isEmpty",
																"id": 13751
															}
														}
													],
													"sources": [
														{
															"fileName": "core/modules/core.ts",
															"line": 48923,
															"character": 15
														}
													],
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												},
												{
													"id": 52923,
													"name": "option",
													"kind": 2048,
													"kindString": "Method",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 52924,
															"name": "option",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"comment": {
																"shortText": "Gets the option setting."
															},
															"type": {
																"type": "intrinsic",
																"name": "any"
															},
															"inheritedFrom": {
																"type": "reference",
																"name": "IOption.option",
																"id": 13749
															}
														}
													],
													"sources": [
														{
															"fileName": "core/modules/core.ts",
															"line": 48919,
															"character": 14
														}
													],
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														52913,
														52912,
														52918,
														52917,
														52920,
														52914,
														52919,
														52916
													]
												},
												{
													"title": "Methods",
													"kind": 2048,
													"children": [
														52925,
														52923
													]
												}
											],
											"sources": [
												{
													"fileName": "map/modules/map.ts",
													"line": 5431,
													"character": 37
												}
											],
											"extendedTypes": [
												{
													"type": "reference",
													"name": "IOption",
													"id": 13748
												}
											]
										}
									],
									"groups": [
										{
											"title": "Interfaces",
											"kind": 256,
											"children": [
												52911
											]
										}
									],
									"sources": [
										{
											"fileName": "map/modules/map.ts",
											"line": 5246,
											"character": 24
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 5425,
											"character": 24
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 5484,
											"character": 24
										}
									]
								},
								{
									"id": 52940,
									"name": "plugins",
									"kind": 2,
									"kindString": "Module",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "map/modules/map.ts",
											"line": 5516,
											"character": 24
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 5658,
											"character": 24
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 5682,
											"character": 24
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 5722,
											"character": 24
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 5780,
											"character": 24
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 5808,
											"character": 24
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 5830,
											"character": 24
										},
										{
											"fileName": "map/modules/map.ts",
											"line": 7445,
											"character": 24
										}
									]
								},
								{
									"id": 50616,
									"name": "ProjectionType",
									"kind": 4,
									"kindString": "Enumeration",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the projection type"
									},
									"children": [
										{
											"id": 50618,
											"name": "Albers",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Albers."
											},
											"sources": [
												{
													"fileName": "map/modules/map.ts",
													"line": 88,
													"character": 14
												}
											]
										},
										{
											"id": 50619,
											"name": "AlbersUsa",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Albers USA."
											},
											"sources": [
												{
													"fileName": "map/modules/map.ts",
													"line": 92,
													"character": 17
												}
											]
										},
										{
											"id": 50617,
											"name": "Mercator",
											"kind": 16,
											"kindString": "Enumeration member",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Mercator."
											},
											"sources": [
												{
													"fileName": "map/modules/map.ts",
													"line": 84,
													"character": 16
												}
											]
										}
									],
									"groups": [
										{
											"title": "Enumeration members",
											"kind": 16,
											"children": [
												50618,
												50619,
												50617
											]
										}
									],
									"sources": [
										{
											"fileName": "map/modules/map.ts",
											"line": 80,
											"character": 30
										}
									]
								}
							],
							"groups": [
								{
									"title": "Modules",
									"kind": 2,
									"children": [
										50620,
										52853,
										52940
									]
								},
								{
									"title": "Enumerations",
									"kind": 4,
									"children": [
										50616
									]
								}
							],
							"sources": [
								{
									"fileName": "map/modules/map.ts",
									"line": 8,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 26,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 74,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 97,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 164,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 203,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 235,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 290,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 427,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 474,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 525,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 558,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 609,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 642,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 772,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 805,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 915,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 1037,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 1078,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 1093,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 1107,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 1121,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 1159,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 1190,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 1217,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 1333,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 1380,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 1438,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 1505,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 1656,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 1731,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 1783,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 1841,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 1882,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 1961,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 2108,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 2162,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 2216,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 2293,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 2316,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 2359,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 2409,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 2454,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 2623,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 2679,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 2734,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 2754,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 2798,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 2852,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 2931,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 3101,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 3156,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 3213,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 3433,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 3457,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 3518,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 3540,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 3577,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 3601,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 3705,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 3785,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 3846,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 3883,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 3901,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 3956,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 3998,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 4169,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 4282,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 4297,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 4506,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 4612,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 4778,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 4910,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 4953,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 5096,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 5203,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 5220,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 5246,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 5425,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 5484,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 5516,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 5542,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 5658,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 5682,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 5722,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 5780,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 5808,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 5830,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 5944,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 6043,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 6255,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 6393,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 6436,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 6557,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 6670,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 6740,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 6916,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 6991,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 7178,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 7253,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 7296,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 7357,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 7407,
									"character": 16
								},
								{
									"fileName": "map/modules/map.ts",
									"line": 7445,
									"character": 16
								}
							]
						}
					],
					"groups": [
						{
							"title": "Modules",
							"kind": 2,
							"children": [
								50603
							]
						}
					],
					"sources": [
						{
							"fileName": "map/modules/map.ts",
							"line": 8,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 26,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 74,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 97,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 164,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 203,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 235,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 290,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 427,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 474,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 525,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 558,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 609,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 642,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 772,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 805,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 915,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 1037,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 1078,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 1093,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 1107,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 1121,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 1159,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 1190,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 1217,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 1333,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 1380,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 1438,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 1505,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 1656,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 1731,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 1783,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 1841,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 1882,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 1961,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 2108,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 2162,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 2216,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 2293,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 2316,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 2359,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 2409,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 2454,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 2623,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 2679,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 2734,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 2754,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 2798,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 2852,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 2931,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 3101,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 3156,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 3213,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 3433,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 3457,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 3518,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 3540,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 3577,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 3601,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 3705,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 3785,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 3846,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 3883,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 3901,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 3956,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 3998,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 4169,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 4282,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 4297,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 4506,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 4612,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 4778,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 4910,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 4953,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 5096,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 5203,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 5220,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 5246,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 5425,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 5484,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 5516,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 5542,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 5658,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 5682,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 5722,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 5780,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 5808,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 5830,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 5944,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 6043,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 6255,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 6393,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 6436,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 6557,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 6670,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 6740,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 6916,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 6991,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 7178,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 7253,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 7296,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 7357,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 7407,
							"character": 12
						},
						{
							"fileName": "map/modules/map.ts",
							"line": 7445,
							"character": 12
						}
					]
				}
			],
			"groups": [
				{
					"title": "Modules",
					"kind": 2,
					"children": [
						50602
					]
				}
			],
			"sources": [
				{
					"fileName": "map/modules/map.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 54760,
			"name": "trellis",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "/Users/kennethliu/Projects/dv-chart/source/trellis/modules/trellis.ts",
			"comment": {},
			"children": [
				{
					"id": 54761,
					"name": "dv",
					"kind": 2,
					"kindString": "Module",
					"flags": {},
					"comment": {},
					"children": [
						{
							"id": 54775,
							"name": "models",
							"kind": 2,
							"kindString": "Module",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 55642,
									"name": "ITrellisCellModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a trellis cell model."
									},
									"children": [
										{
											"id": 55644,
											"name": "columnIndex",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the column index."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2136,
													"character": 28
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 55646,
											"name": "items",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the data items."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2144,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 55648,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39763,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IModel",
												"id": 11033
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.parent",
												"id": 11035
											}
										},
										{
											"id": 55645,
											"name": "plots",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the plots."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2140,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "IPlotModel",
													"id": 9276
												}
											}
										},
										{
											"id": 55643,
											"name": "rowIndex",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the row index."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2132,
													"character": 25
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 55647,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39759,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1638
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.type",
												"id": 11034
											}
										},
										{
											"id": 55649,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 55650,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 55651,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5558,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												55644,
												55646,
												55648,
												55645,
												55643,
												55647
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												55649
											]
										}
									],
									"sources": [
										{
											"fileName": "trellis/modules/trellis.ts",
											"line": 2128,
											"character": 38
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IModel",
											"id": 11033
										}
									]
								},
								{
									"id": 55652,
									"name": "ITrellisColumnHeaderModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a trellis column header model."
									},
									"children": [
										{
											"id": 55653,
											"name": "columnHeaders",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the data items."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2159,
													"character": 30
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "ITrellisColumnHeaderModel",
													"id": 55652
												}
											}
										},
										{
											"id": 55654,
											"name": "columnIndex",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the column index."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2163,
													"character": 28
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 55655,
											"name": "columnSpan",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the column span."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2167,
													"character": 27
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 55659,
											"name": "hover",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the mouse pointer is on it."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2183,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 55663,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39763,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IModel",
												"id": 11033
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.parent",
												"id": 11035
											}
										},
										{
											"id": 55658,
											"name": "selected",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether it is selected."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2179,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 55656,
											"name": "text",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the text."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2171,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 55657,
											"name": "textStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text style."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2175,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 13920
											}
										},
										{
											"id": 55662,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39759,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1638
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.type",
												"id": 11034
											}
										},
										{
											"id": 55664,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 55665,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 55666,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5558,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface"
											}
										},
										{
											"id": 55660,
											"name": "relatedPlots",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 55661,
													"name": "relatedPlots",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the related plots."
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "IPlotModel",
															"id": 9276
														}
													}
												}
											],
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2188,
													"character": 20
												}
											]
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												55653,
												55654,
												55655,
												55659,
												55663,
												55658,
												55656,
												55657,
												55662
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												55664,
												55660
											]
										}
									],
									"sources": [
										{
											"fileName": "trellis/modules/trellis.ts",
											"line": 2155,
											"character": 46
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IModel",
											"id": 11033
										}
									]
								},
								{
									"id": 55667,
									"name": "ITrellisColumnModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents a trellis column model."
									},
									"children": [
										{
											"id": 55670,
											"name": "cells",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the text."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2213,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "ITrellisCellModel",
													"id": 55642
												}
											}
										},
										{
											"id": 55669,
											"name": "columnHeader",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the column span."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2208,
													"character": 29
												}
											],
											"type": {
												"type": "reference",
												"name": "ITrellisColumnHeaderModel",
												"id": 55652
											}
										},
										{
											"id": 55668,
											"name": "columnIndex",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the column index."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2203,
													"character": 28
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 55671,
											"name": "items",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the data items."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2218,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 55673,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39763,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IModel",
												"id": 11033
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.parent",
												"id": 11035
											}
										},
										{
											"id": 55672,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39759,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1638
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.type",
												"id": 11034
											}
										},
										{
											"id": 55674,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 55675,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 55676,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5558,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												55670,
												55669,
												55668,
												55671,
												55673,
												55672
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												55674
											]
										}
									],
									"sources": [
										{
											"fileName": "trellis/modules/trellis.ts",
											"line": 2198,
											"character": 40
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IModel",
											"id": 11033
										}
									]
								},
								{
									"id": 55677,
									"name": "ITrellisModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the trellis model."
									},
									"children": [
										{
											"id": 55682,
											"name": "cells",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the trellis cells."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2249,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"name": "ITrellisCellModel",
														"id": 55642
													}
												}
											}
										},
										{
											"id": 55678,
											"name": "columnHeaders",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the trellis column headers."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2233,
													"character": 30
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"name": "ITrellisColumnHeaderModel",
														"id": 55652
													}
												}
											}
										},
										{
											"id": 55680,
											"name": "columns",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the trellis columns."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2241,
													"character": 24
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "ITrellisColumnModel",
													"id": 55667
												}
											}
										},
										{
											"id": 55683,
											"name": "corner",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the trellis corner."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2253,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IModel",
												"id": 11033
											}
										},
										{
											"id": 55685,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39763,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IModel",
												"id": 11033
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.parent",
												"id": 11035
											}
										},
										{
											"id": 55679,
											"name": "rowHeaders",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the trellis row headers."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2237,
													"character": 27
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"name": "ITrellisRowHeaderModel",
														"id": 55689
													}
												}
											}
										},
										{
											"id": 55681,
											"name": "rows",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the trellis rows."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2245,
													"character": 21
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "ITrellisRowModel",
													"id": 55704
												}
											}
										},
										{
											"id": 55684,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39759,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1638
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.type",
												"id": 11034
											}
										},
										{
											"id": 55686,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 55687,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 55688,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5558,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												55682,
												55678,
												55680,
												55683,
												55685,
												55679,
												55681,
												55684
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												55686
											]
										}
									],
									"sources": [
										{
											"fileName": "trellis/modules/trellis.ts",
											"line": 2229,
											"character": 34
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IModel",
											"id": 11033
										}
									]
								},
								{
									"id": 55689,
									"name": "ITrellisRowHeaderModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the trellis row header model."
									},
									"children": [
										{
											"id": 55696,
											"name": "hover",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether the mouse pointer is on it."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2292,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 55700,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39763,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IModel",
												"id": 11033
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.parent",
												"id": 11035
											}
										},
										{
											"id": 55690,
											"name": "rowHeaders",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the data items."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2268,
													"character": 27
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "ITrellisRowHeaderModel",
													"id": 55689
												}
											}
										},
										{
											"id": 55691,
											"name": "rowIndex",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the row index."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2272,
													"character": 25
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 55692,
											"name": "rowSpan",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the row span."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2276,
													"character": 24
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 55695,
											"name": "selected",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether it is selected."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2288,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 55693,
											"name": "text",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the row header text."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2280,
													"character": 21
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 55694,
											"name": "textStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the text style."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2284,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 13920
											}
										},
										{
											"id": 55699,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39759,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1638
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.type",
												"id": 11034
											}
										},
										{
											"id": 55701,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 55702,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 55703,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5558,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface"
											}
										},
										{
											"id": 55697,
											"name": "relatedPlots",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 55698,
													"name": "relatedPlots",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the related plots."
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"name": "IPlotModel",
															"id": 9276
														}
													}
												}
											],
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2297,
													"character": 20
												}
											]
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												55696,
												55700,
												55690,
												55691,
												55692,
												55695,
												55693,
												55694,
												55699
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												55701,
												55697
											]
										}
									],
									"sources": [
										{
											"fileName": "trellis/modules/trellis.ts",
											"line": 2264,
											"character": 43
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IModel",
											"id": 11033
										}
									]
								},
								{
									"id": 55704,
									"name": "ITrellisRowModel",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the trellis row header model."
									},
									"children": [
										{
											"id": 55707,
											"name": "cells",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the text."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2320,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "ITrellisCellModel",
													"id": 55642
												}
											}
										},
										{
											"id": 55708,
											"name": "items",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the data items."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2324,
													"character": 22
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 55710,
											"name": "parent",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the parent."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39763,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IModel",
												"id": 11033
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.parent",
												"id": 11035
											}
										},
										{
											"id": 55706,
											"name": "rowHeader",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the row header."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2316,
													"character": 26
												}
											],
											"type": {
												"type": "reference",
												"name": "ITrellisRowHeaderModel",
												"id": 55689
											}
										},
										{
											"id": 55705,
											"name": "rowIndex",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the row index."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2312,
													"character": 25
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 55709,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets the type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 39759,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "ElementType",
												"id": 1638
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IModel.type",
												"id": 11034
											}
										},
										{
											"id": 55711,
											"name": "queryInterface",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 55712,
													"name": "queryInterface",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Queries the specified interface.",
														"returns": "The specified interface.\n"
													},
													"parameters": [
														{
															"id": 55713,
															"name": "name",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"comment": {
																"text": "The interface name.\n"
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"name": "IQueryInterface"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IQueryInterface.queryInterface"
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 5558,
													"character": 22
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IQueryInterface.queryInterface"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												55707,
												55708,
												55710,
												55706,
												55705,
												55709
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												55711
											]
										}
									],
									"sources": [
										{
											"fileName": "trellis/modules/trellis.ts",
											"line": 2308,
											"character": 37
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IModel",
											"id": 11033
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"kind": 256,
									"children": [
										55642,
										55652,
										55667,
										55677,
										55689,
										55704
									]
								}
							],
							"sources": [
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 80,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 126,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 367,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 415,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 467,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 521,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 558,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 612,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 649,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 792,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 823,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 877,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 914,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 953,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 996,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 1035,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 1078,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 1132,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 1169,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 1208,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 1245,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 1292,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 1329,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 1368,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 1405,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 1444,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 1476,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 1515,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 1547,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 1586,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 1618,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 1657,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 1689,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 1720,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 1764,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 1847,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 1943,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 2026,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 2122,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 2149,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 2192,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 2223,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 2258,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 2302,
									"character": 19
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 8927,
									"character": 19
								}
							]
						},
						{
							"id": 55714,
							"name": "options",
							"kind": 2,
							"kindString": "Module",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 55781,
									"name": "IPlotConfigTrellisOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the config option for trellis."
									},
									"children": [
										{
											"id": 55784,
											"name": "hoverStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the hover text style."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2503,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 13920
											}
										},
										{
											"id": 55786,
											"name": "includeAxesInCells",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets whether has independent axis in every trellis cell."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2511,
													"character": 26
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 55785,
											"name": "padding",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the trellis cell padding."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2507,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "IPaddingOption",
												"id": 13761
											}
										},
										{
											"id": 55782,
											"name": "style",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the trellis divider lines style."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2495,
													"character": 13
												}
											],
											"type": {
												"type": "reference",
												"name": "ILineStyleOption",
												"id": 13739
											}
										},
										{
											"id": 55783,
											"name": "textStyle",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets text style."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2499,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "ITextStyleOption",
												"id": 13920
											}
										},
										{
											"id": 55789,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 55790,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 55787,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 55788,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												55784,
												55786,
												55785,
												55782,
												55783
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												55789,
												55787
											]
										}
									],
									"sources": [
										{
											"fileName": "trellis/modules/trellis.ts",
											"line": 2491,
											"character": 45
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "IOption",
											"id": 13748
										}
									]
								},
								{
									"id": 55791,
									"name": "ITrellisLayoutEncodingOption",
									"kind": 256,
									"kindString": "Interface",
									"flags": {
										"isExported": true
									},
									"comment": {
										"shortText": "Represents the trellis layout encoding option."
									},
									"children": [
										{
											"id": 55793,
											"name": "columnSort",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the columns sort option."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2530,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "ISortEncodingOption",
												"id": 13077
											}
										},
										{
											"id": 55795,
											"name": "field",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field name."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48415,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IEncodingOption.field",
												"id": 13560
											}
										},
										{
											"id": 55796,
											"name": "label",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the field label."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48419,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "IEncodingOption.label",
												"id": 13561
											}
										},
										{
											"id": 55792,
											"name": "rowSort",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the rows sort option."
											},
											"sources": [
												{
													"fileName": "trellis/modules/trellis.ts",
													"line": 2525,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "ISortEncodingOption",
												"id": 13077
											}
										},
										{
											"id": 55794,
											"name": "type",
											"kind": 1024,
											"kindString": "Property",
											"flags": {
												"isExported": true
											},
											"comment": {
												"shortText": "Gets or sets the type."
											},
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 45993,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"inheritedFrom": {
												"type": "reference",
												"name": "ILayoutEncodingOption.type",
												"id": 13052
											}
										},
										{
											"id": 55799,
											"name": "isEmpty",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 55800,
													"name": "isEmpty",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets whether the option is empty."
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.isEmpty",
														"id": 13751
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48923,
													"character": 15
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.isEmpty",
												"id": 13751
											}
										},
										{
											"id": 55797,
											"name": "option",
											"kind": 2048,
											"kindString": "Method",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 55798,
													"name": "option",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"comment": {
														"shortText": "Gets the option setting."
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													},
													"inheritedFrom": {
														"type": "reference",
														"name": "IOption.option",
														"id": 13749
													}
												}
											],
											"sources": [
												{
													"fileName": "core/modules/core.ts",
													"line": 48919,
													"character": 14
												}
											],
											"inheritedFrom": {
												"type": "reference",
												"name": "IOption.option",
												"id": 13749
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												55793,
												55795,
												55796,
												55792,
												55794
											]
										},
										{
											"title": "Methods",
											"kind": 2048,
											"children": [
												55799,
												55797
											]
										}
									],
									"sources": [
										{
											"fileName": "trellis/modules/trellis.ts",
											"line": 2521,
											"character": 49
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"name": "ILayoutEncodingOption",
											"id": 13051
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"kind": 256,
									"children": [
										55781,
										55791
									]
								}
							],
							"sources": [
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 2329,
									"character": 20
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 2416,
									"character": 20
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 2485,
									"character": 20
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 2515,
									"character": 20
								}
							]
						},
						{
							"id": 55801,
							"name": "plugins",
							"kind": 2,
							"kindString": "Module",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 2535,
									"character": 20
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 2559,
									"character": 20
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 2583,
									"character": 20
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 2607,
									"character": 20
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 2631,
									"character": 20
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 2651,
									"character": 20
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 2671,
									"character": 20
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 2691,
									"character": 20
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 2711,
									"character": 20
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 2739,
									"character": 20
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 2787,
									"character": 20
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 2827,
									"character": 20
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 2867,
									"character": 20
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 2907,
									"character": 20
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 2965,
									"character": 20
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 3023,
									"character": 20
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 3063,
									"character": 20
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 3125,
									"character": 20
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 3165,
									"character": 20
								},
								{
									"fileName": "trellis/modules/trellis.ts",
									"line": 9116,
									"character": 20
								}
							]
						}
					],
					"groups": [
						{
							"title": "Modules",
							"kind": 2,
							"children": [
								54775,
								55714,
								55801
							]
						}
					],
					"sources": [
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 8,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 80,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 126,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 367,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 415,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 467,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 521,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 558,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 612,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 649,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 792,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 823,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 877,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 914,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 953,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 996,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 1035,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 1078,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 1132,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 1169,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 1208,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 1245,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 1292,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 1329,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 1368,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 1405,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 1444,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 1476,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 1515,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 1547,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 1586,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 1618,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 1657,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 1689,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 1720,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 1764,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 1847,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 1943,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 2026,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 2122,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 2149,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 2192,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 2223,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 2258,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 2302,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 2329,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 2416,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 2485,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 2515,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 2535,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 2559,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 2583,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 2607,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 2631,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 2651,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 2671,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 2691,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 2711,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 2739,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 2787,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 2827,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 2867,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 2907,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 2965,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 3023,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 3063,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 3125,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 3165,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 3205,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 3551,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 3812,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 4039,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 4577,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 4842,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 4910,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 4952,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 5178,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 5715,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 5974,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 6647,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 6680,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 6712,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 6742,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 6868,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 6906,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 7020,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 7052,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 7073,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 7194,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 7334,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 7383,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 7432,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 7470,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 7568,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 7674,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 7704,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 7733,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 7776,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 7806,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 7835,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 7860,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 7889,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 7922,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 7952,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 8091,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 8117,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 8147,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 8368,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 8401,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 8428,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 8462,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 8495,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 8525,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 8664,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 8691,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 8721,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 8845,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 8901,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 8927,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 8955,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 8992,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 9029,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 9073,
							"character": 12
						},
						{
							"fileName": "trellis/modules/trellis.ts",
							"line": 9116,
							"character": 12
						}
					]
				}
			],
			"groups": [
				{
					"title": "Modules",
					"kind": 2,
					"children": [
						54761
					]
				}
			],
			"sources": [
				{
					"fileName": "trellis/modules/trellis.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "External modules",
			"kind": 1,
			"children": [
				1,
				47713,
				50601,
				54760
			]
		}
	]
}